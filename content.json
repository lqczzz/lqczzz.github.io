{"meta":{"title":"lance的编程笔记","subtitle":null,"description":null,"author":"lqczzz","url":"http://lqczzz.github.io"},"pages":[{"title":"书单","date":"2018-10-12T21:48:40.000Z","updated":"2018-10-12T21:48:40.000Z","comments":false,"path":"books/index.html","permalink":"http://lqczzz.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-08-26T12:19:50.161Z","updated":"2020-08-26T12:19:50.161Z","comments":false,"path":"about/index.html","permalink":"http://lqczzz.github.io/about/index.html","excerpt":"","text":"关于我 华南理工大学 本科: 信息工程 2016.7 - 2018.5 华为: 半年实习，一年工作经验 2018.5 - 2020.9 shopee: 信息流产品开发 2020.9 - 今 TME: 直播 兴趣 编码 旅行 vlog 文章 性格 INFJ"},{"title":"分类","date":"2018-10-12T21:48:40.000Z","updated":"2018-10-12T21:48:40.000Z","comments":false,"path":"categories/index.html","permalink":"http://lqczzz.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-10-12T21:48:40.000Z","updated":"2018-10-12T21:48:40.000Z","comments":true,"path":"links/index.html","permalink":"http://lqczzz.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-12T21:48:40.000Z","updated":"2018-10-12T21:48:40.000Z","comments":false,"path":"tags/index.html","permalink":"http://lqczzz.github.io/tags/index.html","excerpt":"","text":"tags: &#x6587;&#x7AE0;&#x6807;&#x7B7E; &#x6587;&#x7AE0;&#x6807;&#x7B7E; &#x6587;&#x7AE0;&#x6807;&#x7B7E;"}],"posts":[{"title":"网络编程的那些事","slug":"网络编程的那些事","date":"2020-08-11T05:36:38.000Z","updated":"2020-08-26T03:41:47.767Z","comments":true,"path":"2020/08/11/网络编程的那些事/","link":"","permalink":"http://lqczzz.github.io/2020/08/11/网络编程的那些事/","excerpt":"","text":"导读工作三年，接触过java，python，golang的一些常用的web框架，网络编程库，并发编程模式之后，渐渐开始掌握了网络编程的一些核心的东西： socket编程 io模型 并发模型 其中超时是在不可靠的网络环境中很重要的一个手段，用于判定失效(尽管这种判定也不是那么的完美) 怎么读文章分成两部分 第一部分，主要简单罗列了一些网络编程的核心知识，不管什么框架，涉及到的核心的领域知识都在里面。希望文中的每一张图都能够充分理解 第二部分，主要介绍了golang标准的网络库的并发编程实现，用精妙的奇技淫巧来实现一个简单但是很高性能的库，足以把上述所有的知识贯穿一体。 [A] 网络编程基础知识[B] socket编程[C] 调用过程 [D]说明[E]time_wait可靠的全双工断连，确保ack能到达服务端（否则服务端会超时重发fin） [E]RSTconnection发起三次握手会有几种异常状态： 1）服务器不可达：syn分节发出去，超时没有收到响应分节，退避重试，返回ETIMEDOUT 2）服务端可达，但是没有服务进程监听该端口，收到RST分节而不是ACK分节 另外一种情况是(握手成功，但是accept之前收到一个RST分节，有些操作系统会向用户进程抛出错误，有的则对用户进程无感知)： [E]4次挥手过程的错误(服务端进程崩溃啥的) [E]查看链接状态的工具 netstat netstat -a [D]系统调用说明[E]Bind绑定端口（默认为主动套接字，端口随机分配，listen之后主动套接字变成被动套接字，端口需要指定） [E]listen [E]accept同步accept：线程进入休眠 异步accept：立即返回错误 [B]io[C]linux文件系统 操作系统上的 I/O 是用户空间和内核空间的数据交互，因此 I/O 操作通常包含以下两个步骤： 等待网络数据到达网卡(读就绪)/等待网卡可写(写就绪) –&gt; 读取/写入到内核缓冲区 从内核缓冲区复制数据 –&gt; 用户空间(读)/从用户空间复制数据 -&gt; 内核缓冲区(写) [C]io模型在神作《UNIX 网络编程》里，总结归纳了 5 种 I/O 模型，包括同步和异步 I/O： 阻塞 I/O (Blocking I/O) 非阻塞 I/O (Nonblocking I/O) I/O 多路复用 (I/O multiplexing) 信号驱动 I/O (Signal driven I/O) 异步 I/O (Asynchronous I/O) [D] 阻塞io 实现简单 等待io的时候，线程需要陷入内核进入休眠，切换消耗大 [D] 非阻塞io 不阻塞后续操作 轮询的方式来查看是否有数据ready了，消耗cpu [D] io多路复用 同时监听多路io，提高效率 [D] 信号驱动io [D] 异步io [B] 常用并发编程模型[C] 常用并发编程模型[D] 多进程[D] 多线程[D] 协程[C] G-P-M 模型 每个 P 维护一个 G 的本地队列； 当一个 G 被创建出来，或者变为可执行状态时，就把他放到 P 的可执行队列中； 当一个 G 在 M 里执行结束后，P 会从队列中把该 G 取出；如果此时 P 的队列为空，即没有其他 G 可以执行， M 就随机选择另外一个 P，从其可执行的 G 队列中取走一半。 goroutine 的栈采取了动态扩容方式， 初始时仅为 2KB，随着任务执行按需增长，最大可达 1GB（64 位机器最大是 1G，32 位机器最大是 256M），且完全由 golang 自己的调度器 Go Scheduler 来调度。此外，GC 还会周期性地将不再使用的内存回收，收缩栈空间。 因此，Go 程序可以同时并发成千上万个 goroutine 是得益于它强劲的调度器和高效的内存模型。 [C] 客户端/服务端程序设计范式[D] 从请求生命周期看 [D] 从并发单元角度 多进程 来一个请求，排队处理：串行 来一个请求，fork一个进程处理：并行，并发消耗大，fork消耗性能 预先fork一批进程，“进程池” - apache？？ 多线程- routine [C] reactor模式本质：nonblockio + 多路复用 [D] 单reactor单线程 eg：redis [D] 单 reactor多线程 [D] 主从reactor [A] golang net原理和包源码导读[B] 一个标准go tcp服务程序1234567891011121314151617181920212223242526272829303132333435363738394041package mainimport ( \"fmt\" \"net\")func main() &#123; listen, err := net.Listen(\"tcp\", \":8888\") if err != nil &#123; fmt.Println(\"listen error: \", err) return &#125; for &#123; conn, err := listen.Accept() if err != nil &#123; fmt.Println(\"accept error: \", err) break &#125; // start a new goroutine to handle the new connection go HandleConn(conn) &#125;&#125;func HandleConn(conn net.Conn) &#123; defer conn.Close() packet := make([]byte, 1024) for &#123; // 如果没有可读数据，也就是读 buffer 为空，则阻塞 _, _ = conn.Read(packet) // 同理，不可写则阻塞 _, _ = conn.Write(packet) &#125;&#125;listen, err := net.Listen(\"tcp\", \":8888\")for &#123; conn, err := listen.Accept() _, _ = conn.Read([]byte&#123;&#125;)&#125; [B] 核心原理 非阻塞io(从操作系统视角看) epoll的io多路复用 runtime的goroutine调度把非阻塞io“转化”为阻塞io（从开发者/应用视角看） 通过gopark把读取/写 io操作未完成的goroutine挂起休眠 go runtime在调度goroutine &amp;&amp; daemon线程定期 两个时间去轮询看epoll是否有ready的文件描述符，有则唤醒相应的goroutine Go 原生网络模型（基于 netpoll）编写的一个 TCP server，模式是 goroutine-per-connection ，在这种模式下，开发者使用的是同步的模式去编写异步的逻辑而且对于开发者来说 I/O 是否阻塞是无感知的，也就是说开发者无需考虑 goroutines 甚至更底层的线程、进程的调度和上下文切换。而 Go netpoll 最底层的事件驱动技术肯定是基于 epoll/kqueue/iocp 这一类的 I/O 事件驱动技术，只不过是把这些调度和上下文切换的工作转移到了 runtime 的 Go scheduler，让它来负责调度 goroutines，从而极大地降低了程序员的心智负担！ Go netpoll 通过在底层对 epoll/kqueue/iocp 的封装，从而实现了使用同步编程模式达到异步执行的效果。总结来说，所有的网络操作都以网络描述符 netFD 为中心实现。netFD 与底层 PollDesc 结构绑定，当在一个 netFD 上读写遇到 EAGAIN 错误时，就将当前 goroutine 存储到这个 netFD 对应的 PollDesc 中，同时调用 gopark 把当前 goroutine 给 park 住，直到这个 netFD 上再次发生读写事件，才将此 goroutine 给 ready 激活重新运行。显然，在底层通知 goroutine 再次发生读写等事件的方式就是 epoll/kqueue/iocp 等事件驱动机制。 [B] 代码调用时序 [C] 核心对象[D] netFDnet.Listen(&quot;tcp&quot;, &quot;:8888&quot;) 方法返回了一个 TCPListener，它是一个实现了 net.Listener 接口的 struct，而通过 listener.Accept() 接收的新连接 TCPConn 则是一个实现了 net.Conn 接口的 struct，它内嵌了 net.conn struct。仔细阅读上面的源码可以发现，不管是 Listener 的 Accept 还是 Conn 的 Read/Write 方法，都是基于一个 netFD 的数据结构的操作， netFD 是一个网络描述符，类似于 Linux 的文件描述符的概念，netFD 中包含一个 poll.FD 数据结构 123456789101112type netFD struct &#123; pfd poll.FD // immutable until Close family int sotype int isConnected bool // handshake completed or use of association with peer net string laddr Addr raddr Addr&#125; [D] poll.FDpoll.FD 中包含两个重要的数据结构 Sysfd 和 pollDesc，前者是真正的系统文件描述符，后者对是底层事件驱动的封装，所有的读写超时等操作都是通过调用后者的对应方法实现的。 1234567891011121314151617181920212223242526272829303132// FD is a file descriptor. The net and os packages use this type as a// field of a larger type representing a network connection or OS file.type FD struct &#123; // Lock sysfd and serialize access to Read and Write methods. fdmu fdMutex // System file descriptor. Immutable until Close. Sysfd int // I/O poller. pd pollDesc // Writev cache. iovecs *[]syscall.Iovec // Semaphore signaled when file is closed. csema uint32 // Non-zero if this file has been set to blocking mode. isBlocking uint32 // Whether this is a streaming descriptor, as opposed to a // packet-based descriptor like a UDP socket. Immutable. IsStream bool // Whether a zero byte read indicates EOF. This is false for a // message based socket connection. ZeroReadIsEOF bool // Whether this is a file rather than a network socket. isFile bool&#125; 123type pollDesc struct &#123; runtimeCtx uintptr&#125; netpoll 是如何通过 park goroutine 从而达到阻塞 Accept/Read/Write 的效果,通过调用 gopark，goroutine 会被放置在某个等待队列中(如 channel 的 waitq ，此时 G 的状态由 _Grunning 为 _Gwaitting ) 当 I/O 事件发生之后，netpoll 是通过什么方式唤醒那些在 I/O wait 的 goroutine 的？答案是通过 epoll_wait ，在 Go 源码中的 src/runtime/netpoll_epoll.go 文件中有一个 func netpoll(block bool) gList 方法，它会内部调用 epoll_wait 获取就绪的 fd 列表，并将每个 fd 对应的 goroutine 添加到链表返回 [D] pollDesc具体的定义是在 runtime.pollDesc 这里 1234567891011121314151617181920212223242526272829// Network poller descriptor.//// No heap pointers.////go:notinheaptype pollDesc struct &#123; link *pollDesc // in pollcache, protected by pollcache.lock // The lock protects pollOpen, pollSetDeadline, pollUnblock and deadlineimpl operations. // This fully covers seq, rt and wt variables. fd is constant throughout the PollDesc lifetime. // pollReset, pollWait, pollWaitCanceled and runtime·netpollready (IO readiness notification) // proceed w/o taking the lock. So closing, everr, rg, rd, wg and wd are manipulated // in a lock-free way by all operations. // NOTE(dvyukov): the following code uses uintptr to store *g (rg/wg), // that will blow up when GC starts moving objects. lock mutex // protects the following fields fd uintptr closing bool everr bool // marks event scanning error happened user uint32 // user settable cookie rseq uintptr // protects from stale read timers rg uintptr // pdReady, pdWait, G waiting for read or nil rt timer // read deadline timer (set if rt.f != nil) rd int64 // read deadline wseq uintptr // protects from stale write timers wg uintptr // pdReady, pdWait, G waiting for write or nil wt timer // write deadline timer wd int64 // write deadline&#125; [C] golang对epoll的封装123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176#include &lt;sys/epoll.h&gt; int epoll_create(int size); int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event); int epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout);// Go 对上面三个调用的封装func netpollinit()func netpollopen(fd uintptr, pd *pollDesc) int32func netpoll(block bool) gList// netpollinit 会创建一个 epoll 实例，然后把 epoll fd 赋值给 epfd，// 后续 listener 以及它 accept 的所有 sockets 有关 epoll 的操作都是基于这个全局的 epfdfunc netpollinit() &#123; epfd = epollcreate1(_EPOLL_CLOEXEC) if epfd &gt;= 0 &#123; return &#125; epfd = epollcreate(1024) if epfd &gt;= 0 &#123; closeonexec(epfd) return &#125; println(\"runtime: epollcreate failed with\", -epfd) throw(\"runtime: netpollinit failed\")&#125;// netpollopen 会被 runtime_pollOpen 调用，注册 fd 到 epoll 实例，// 同时会利用万能指针把 pollDesc 保存到 epollevent 的一个 8 位的字节数组 data 里func netpollopen(fd uintptr, pd *pollDesc) int32 &#123; var ev epollevent ev.events = _EPOLLIN | _EPOLLOUT | _EPOLLRDHUP | _EPOLLET *(**pollDesc)(unsafe.Pointer(&amp;ev.data)) = pd return -epollctl(epfd, _EPOLL_CTL_ADD, int32(fd), &amp;ev)&#125;//go:linkname poll_runtime_pollWait internal/poll.runtime_pollWaitfunc poll_runtime_pollWait(pd *pollDesc, mode int) int &#123; err := netpollcheckerr(pd, int32(mode)) if err != 0 &#123; return err &#125; // As for now only Solaris, illumos, and AIX use level-triggered IO. if GOOS == \"solaris\" || GOOS == \"illumos\" || GOOS == \"aix\" &#123; netpollarm(pd, mode) &#125; // 进入 netpollblock 并且判断是否有期待的 I/O 事件发生， // 这里的 for 循环是为了一直等到 io ready for !netpollblock(pd, int32(mode), false) &#123; err = netpollcheckerr(pd, int32(mode)) if err != 0 &#123; return err &#125; // Can happen if timeout has fired and unblocked us, // but before we had a chance to run, timeout has been reset. // Pretend it has not happened and retry. &#125; return 0&#125;// returns true if IO is ready, or false if timedout or closed// waitio - wait only for completed IO, ignore errorsfunc netpollblock(pd *pollDesc, mode int32, waitio bool) bool &#123; // gpp 保存的是 goroutine 的数据结构 g，这里会根据 mode 的值决定是 rg 还是 wg // 后面调用 gopark 之后，会把当前的 goroutine 的抽象数据结构 g 存入 gpp 这个指针 gpp := &amp;pd.rg if mode == 'w' &#123; gpp = &amp;pd.wg &#125; // set the gpp semaphore to WAIT // 这个 for 循环是为了等待 io ready 或者 io wait for &#123; old := *gpp // gpp == pdReady 表示此时已有期待的 I/O 事件发生， // 可以直接返回 unblock 当前 goroutine 并执行响应的 I/O 操作 if old == pdReady &#123; *gpp = 0 return true &#125; if old != 0 &#123; throw(\"runtime: double wait\") &#125; // 如果没有期待的 I/O 事件发生，则通过原子操作把 gpp 的值置为 pdWait 并退出 for 循环 if atomic.Casuintptr(gpp, 0, pdWait) &#123; break &#125; &#125; // need to recheck error states after setting gpp to WAIT // this is necessary because runtime_pollUnblock/runtime_pollSetDeadline/deadlineimpl // do the opposite: store to closing/rd/wd, membarrier, load of rg/wg // waitio 此时是 false，netpollcheckerr 方法会检查当前 pollDesc 对应的 fd 是否是正常的， // 通常来说 netpollcheckerr(pd, mode) == 0 是成立的，所以这里会执行 gopark // 把当前 goroutine 给 park 住，直至对应的 fd 上发生可读/可写或者其他『期待的』I/O 事件为止， // 然后 unpark 返回，在 gopark 内部会把当前 goroutine 的抽象数据结构 g 存入 // gpp(pollDesc.rg/pollDesc.wg) 指针里，以便在后面的 netpoll 函数取出 pollDesc 之后， // 把 g 添加到链表里返回，接着重新调度 goroutine if waitio || netpollcheckerr(pd, mode) == 0 &#123; // 注册 netpollblockcommit 回调给 gopark，在 gopark 内部会执行它，保存当前 goroutine 到 gpp gopark(netpollblockcommit, unsafe.Pointer(gpp), waitReasonIOWait, traceEvGoBlockNet, 5) &#125; // be careful to not lose concurrent READY notification old := atomic.Xchguintptr(gpp, 0) if old &gt; pdWait &#123; throw(\"runtime: corrupted polldesc\") &#125; return old == pdReady&#125;// gopark 会停住当前的 goroutine 并且调用传递进来的回调函数 unlockf，从上面的源码我们可以知道这个函数是// netpollblockcommitfunc gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason waitReason, traceEv byte, traceskip int) &#123; if reason != waitReasonSleep &#123; checkTimeouts() // timeouts may expire while two goroutines keep the scheduler busy &#125; mp := acquirem() gp := mp.curg status := readgstatus(gp) if status != _Grunning &amp;&amp; status != _Gscanrunning &#123; throw(\"gopark: bad g status\") &#125; mp.waitlock = lock mp.waitunlockf = unlockf gp.waitreason = reason mp.waittraceev = traceEv mp.waittraceskip = traceskip releasem(mp) // can't do anything that might move the G between Ms here. // gopark 最终会调用 park_m，在这个函数内部会调用 unlockf，也就是 netpollblockcommit， // 然后会把当前的 goroutine，也就是 g 数据结构保存到 pollDesc 的 rg 或者 wg 指针里 mcall(park_m)&#125;// park continuation on g0.func park_m(gp *g) &#123; _g_ := getg() if trace.enabled &#123; traceGoPark(_g_.m.waittraceev, _g_.m.waittraceskip) &#125; casgstatus(gp, _Grunning, _Gwaiting) dropg() if fn := _g_.m.waitunlockf; fn != nil &#123; // 调用 netpollblockcommit，把当前的 goroutine， // 也就是 g 数据结构保存到 pollDesc 的 rg 或者 wg 指针里 ok := fn(gp, _g_.m.waitlock) _g_.m.waitunlockf = nil _g_.m.waitlock = nil if !ok &#123; if trace.enabled &#123; traceGoUnpark(gp, 2) &#125; casgstatus(gp, _Gwaiting, _Grunnable) execute(gp, true) // Schedule it back, never returns. &#125; &#125; schedule()&#125;// netpollblockcommit 在 gopark 函数里被调用func netpollblockcommit(gp *g, gpp unsafe.Pointer) bool &#123; // 通过原子操作把当前 goroutine 抽象的数据结构 g，也就是这里的参数 gp 存入 gpp 指针， // 此时 gpp 的值是 pollDesc 的 rg 或者 wg 指针 r := atomic.Casuintptr((*uintptr)(gpp), pdWait, uintptr(unsafe.Pointer(gp))) if r &#123; // Bump the count of goroutines waiting for the poller. // The scheduler uses this to decide whether to block // waiting for the poller if there is nothing else to do. atomic.Xadd(&amp;netpollWaiters, 1) &#125; return r&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105// polls for ready network connections// returns list of goroutines that become runnablefunc netpoll(block bool) gList &#123; if epfd == -1 &#123; return gList&#123;&#125; &#125; waitms := int32(-1) // 是否以阻塞模式调用 epoll_wait if !block &#123; waitms = 0 &#125; var events [128]epolleventretry: // 获取就绪的 fd 列表 n := epollwait(epfd, &amp;events[0], int32(len(events)), waitms) if n &lt; 0 &#123; if n != -_EINTR &#123; println(\"runtime: epollwait on fd\", epfd, \"failed with\", -n) throw(\"runtime: netpoll failed\") &#125; goto retry &#125; // toRun 是一个 g 的链表，存储要恢复的 goroutines，最后返回给调用方 var toRun gList for i := int32(0); i &lt; n; i++ &#123; ev := &amp;events[i] if ev.events == 0 &#123; continue &#125; var mode int32 // 判断发生的事件类型，读类型或者写类型 if ev.events&amp;(_EPOLLIN|_EPOLLRDHUP|_EPOLLHUP|_EPOLLERR) != 0 &#123; mode += 'r' &#125; if ev.events&amp;(_EPOLLOUT|_EPOLLHUP|_EPOLLERR) != 0 &#123; mode += 'w' &#125; if mode != 0 &#123; // 取出保存在 epollevent 里的 pollDesc pd := *(**pollDesc)(unsafe.Pointer(&amp;ev.data)) pd.everr = false if ev.events == _EPOLLERR &#123; pd.everr = true &#125; // 调用 netpollready，传入就绪 fd 的 pollDesc，把 fd 对应的 goroutine 添加到链表 toRun 中 netpollready(&amp;toRun, pd, mode) &#125; &#125; if block &amp;&amp; toRun.empty() &#123; goto retry &#125; return toRun&#125;// netpollready 调用 netpollunblock 返回就绪 fd 对应的 goroutine 的抽象数据结构 gfunc netpollready(toRun *gList, pd *pollDesc, mode int32) &#123; var rg, wg *g if mode == 'r' || mode == 'r'+'w' &#123; rg = netpollunblock(pd, 'r', true) &#125; if mode == 'w' || mode == 'r'+'w' &#123; wg = netpollunblock(pd, 'w', true) &#125; if rg != nil &#123; toRun.push(rg) &#125; if wg != nil &#123; toRun.push(wg) &#125;&#125;// netpollunblock 会依据传入的 mode 决定从 pollDesc 的 rg 或者 wg 取出当时 gopark 之时存入的// goroutine 抽象数据结构 g 并返回func netpollunblock(pd *pollDesc, mode int32, ioready bool) *g &#123; // mode == 'r' 代表当时 gopark 是为了等待读事件，而 mode == 'w' 则代表是等待写事件 gpp := &amp;pd.rg if mode == 'w' &#123; gpp = &amp;pd.wg &#125; for &#123; // 取出 gpp 存储的 g old := *gpp if old == pdReady &#123; return nil &#125; if old == 0 &amp;&amp; !ioready &#123; // Only set READY for ioready. runtime_pollWait // will check for timeout/cancel before waiting. return nil &#125; var new uintptr if ioready &#123; new = pdReady &#125; // 重置 pollDesc 的 rg 或者 wg if atomic.Casuintptr(gpp, old, new) &#123; if old == pdReady || old == pdWait &#123; old = 0 &#125; // 通过万能指针还原成 g 并返回 return (*g)(unsafe.Pointer(old)) &#125; &#125;&#125; Go 在多种场景下都可能会调用 netpoll 检查文件描述符状态。寻找到 I/O 就绪的 socket fd，并找到这些 socket fd 对应的轮询器中附带的信息，根据这些信息将之前等待这些 socket fd 就绪的 goroutine 状态修改为 _Grunnable 。执行完 netpoll 之后，会返回一个就绪 fd 列表对应的 goroutine 列表，接下来将就绪的 goroutine 加入到调度队列中，等待调度运行。 首先，在 Go runtime scheduler 正常调度 goroutine 之时就有可能会调用 netpoll 获取到已就绪的 fd 对应的 goroutine 来调度执行： 1234567891011121314151617181920212223242526272829303132333435363738// One round of scheduler: find a runnable goroutine and execute it.// Never returns.func schedule() &#123; // ... if gp == nil &#123; gp, inheritTime = findrunnable() // blocks until work is available &#125; // ...&#125;// Finds a runnable goroutine to execute.// Tries to steal from other P's, get g from global queue, poll network.func findrunnable() (gp *g, inheritTime bool) &#123; // ... // Poll network. // This netpoll is only an optimization before we resort to stealing. // We can safely skip it if there are no waiters or a thread is blocked // in netpoll already. If there is any kind of logical race with that // blocked thread (e.g. it has already returned from netpoll, but does // not set lastpoll yet), this thread will do blocking netpoll below // anyway. if netpollinited() &amp;&amp; atomic.Load(&amp;netpollWaiters) &gt; 0 &amp;&amp; atomic.Load64(&amp;sched.lastpoll) != 0 &#123; if list := netpoll(false); !list.empty() &#123; // non-blocking gp := list.pop() injectglist(&amp;list) casgstatus(gp, _Gwaiting, _Grunnable) if trace.enabled &#123; traceGoUnpark(gp, 0) &#125; return gp, false &#125; &#125; // ...&#125; Go scheduler 的核心方法 schedule 里会调用一个叫 findrunable() 的方法获取可运行的 goroutine 来执行，而在 findrunable() 方法里就调用了 netpoll 获取已就绪的 fd 列表对应的 goroutine 列表。 另外， sysmon 监控线程也可能会调用到 netpoll ： Go runtime 在程序启动的时候会创建一个独立的 M 作为监控线程，叫 sysmon ，这个线程为系统级的 daemon 线程，无需 P 即可运行， sysmon 每 20us~10ms 运行一次。 sysmon 中以轮询的方式执行以下操作（如上面的代码所示）： 以非阻塞的方式调用 runtime.netpoll ，从中找出能从网络 I/O 中唤醒的 G，并调用 injectglist ，将其插入调度器的 runnable 列表中（全局），调度触发时，有可能从这个全局 runnable 列表获取 G。然后再循环调用 startm ，直到所有 P 都不处于 _Pidle 状态。 调用 retake ，抢占长时间处于 _Psyscall 状态的 P。 综上，Go 借助于 epoll/kqueue/iocp 和 runtime scheduler 等的帮助，设计出了自己的 I/O 多路复用 netpoll，成功地让 Listener.Accept / conn.Read / conn.Write 等方法从开发者的角度看来是同步模式 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// Always runs without a P, so write barriers are not allowed.////go:nowritebarrierrecfunc sysmon() &#123; // ... now := nanotime() if netpollinited() &amp;&amp; lastpoll != 0 &amp;&amp; lastpoll+10*1000*1000 &lt; now &#123; atomic.Cas64(&amp;sched.lastpoll, uint64(lastpoll), uint64(now)) // 以非阻塞的方式调用 netpoll 获取就绪 fd 列表 list := netpoll(false) // non-blocking - returns list of goroutines if !list.empty() &#123; // Need to decrement number of idle locked M's // (pretending that one more is running) before injectglist. // Otherwise it can lead to the following situation: // injectglist grabs all P's but before it starts M's to run the P's, // another M returns from syscall, finishes running its G, // observes that there is no work to do and no other running M's // and reports deadlock. incidlelocked(-1) // 将其插入调度器的runnable列表中（全局），等待被调度执行 injectglist(&amp;list) incidlelocked(1) &#125; &#125; // retake P's blocked in syscalls // and preempt long running G's if retake(now) != 0 &#123; idle = 0 &#125; else &#123; idle++ &#125; // check if we need to force a GC if t := (gcTrigger&#123;kind: gcTriggerTime, now: now&#125;); t.test() &amp;&amp; atomic.Load(&amp;forcegc.idle) != 0 &#123; lock(&amp;forcegc.lock) forcegc.idle = 0 var list gList list.push(forcegc.g) injectglist(&amp;list) unlock(&amp;forcegc.lock) &#125; if debug.schedtrace &gt; 0 &amp;&amp; lasttrace+int64(debug.schedtrace)*1000000 &lt;= now &#123; lasttrace = now schedtrace(debug.scheddetail &gt; 0) &#125; &#125;&#125;","categories":[],"tags":[]},{"title":"面向开发人员的kubernetes笔记","slug":"面向开发人员的kubernetes笔记","date":"2020-03-29T17:14:49.000Z","updated":"2020-04-02T17:37:47.070Z","comments":true,"path":"2020/03/30/面向开发人员的kubernetes笔记/","link":"","permalink":"http://lqczzz.github.io/2020/03/30/面向开发人员的kubernetes笔记/","excerpt":"","text":"&#x8FD9;&#x8FB9;&#x7B14;&#x8BB0;&#x6DB5;&#x76D6;&#x4E86;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A; &#x5BB9;&#x5668;&#x865A;&#x62DF;&#x5316;&#x7684;&#x539F;&#x7406; &#x5BB9;&#x5668;&#x7F16;&#x6392;&#x7684;&#x57FA;&#x672C;&#x6982;&#x5FF5; k8s&#x7684;&#x5BB9;&#x5668;&#x7F16;&#x6392;&#x5BF9;&#x8C61; k8s&#x7684;&#x96C6;&#x7FA4;&#x67B6;&#x6784;&#x548C;&#x57FA;&#x672C;&#x539F;&#x7406; &#x5BB9;&#x5668;&#x7F16;&#x6392;&#x7684;&#x5B9E;&#x8DF5; &#x53C2;&#x8003;&#x5B66;&#x4E60;&#x6750;&#x6599; &#x300A;docker&#x8FDB;&#x9636;&#x4E0E;&#x5B9E;&#x6218;&#x300B; &#x300A;kubernetes in action&#x300B;ch1-ch11 &#x6781;&#x5BA2;&#x65F6;&#x95F4;&#x300A;&#x6DF1;&#x5165;&#x5256;&#x6790;Kubernetes&#x300B; &#x5BB9;&#x5668;&amp;dockerdocker&#x7684;&#x865A;&#x62DF;&#x5316;&#x539F;&#x7406;Namespace &#x505A;&#x9694;&#x79BB;&#xFF0C;Cgroups &#x505A;&#x9650;&#x5236;&#xFF0C;rootfs &#x505A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF; &#x672C;&#x8D28;&#x4E0A;&#x4F9D;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B; Namespace &#x505A;&#x9694;&#x79BB;namespace&#x7528;&#x4E8E;&#x5BF9;&#x5168;&#x5C40;&#x8D44;&#x6E90;&#x7684;&#x9694;&#x79BB; &#x5DF2;&#x7ECF;&#x6709;&#x7684;&#xFF1A; ipc network mount pid uts user &#x901A;&#x5E38;&#x7684;&#x64CD;&#x4F5C;&#xFF1A; clone&#xFF1A; &#x521B;&#x5EFA;&#x65B0;&#x7684;namespance setns&#xFF1A;&#x628A;&#x8FDB;&#x7A0B;&#x653E;&#x8FDB;&#x5DF2;&#x6709;&#x7684;namespace&#x91CC; Cgroups &#x505A;&#x9650;&#x5236; cpuset&#x5B50;&#x7CFB;&#x7EDF;&#xFF1A;&#x9650;&#x5236;&#x53EF;&#x7528;&#x7684;cpu&#x5217;&#x8868; cpu&#x5B50;&#x7CFB;&#x7EDF;&#xFF1A;&#x9650;&#x5236;cpu&#x5229;&#x7528;&#x7387; memory&#x5B50;&#x7CFB;&#x7EDF;&#xFF1A;&#x9650;&#x5236;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x7387; &#x2026; rootfs &#x505A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;pivot_root&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x6765;&#x505A;&#x8DDF;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x5207;&#x6362; &#xFF08;union mount&#x6765;&#x5206;&#x5C42;&#x955C;&#x50CF;&#xFF09; &#x5BB9;&#x5668;&#x7F16;&#x6392;&amp;kubernetes&#x4EC0;&#x4E48;&#x662F;&#x5BB9;&#x5668;&#x7F16;&#x6392;(Container Orchestration&#xFF09;&#x5BB9;&#x5668;&#x7F16;&#x6392;&#x662F;&#x4E3A;&#x4E86;&#x7B80;&#x5316;&#x670D;&#x52A1;&#x7684;&#x5F00;&#x53D1;&#x548C;&#x8FD0;&#x7EF4;&#xFF0C;&#x63D0;&#x5347;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x5229;&#x7528;&#x7387;&#x7684;&#x5DE5;&#x5177;&#x3002; &#x5BB9;&#x5668;&#x7F16;&#x6392;&#x6838;&#x5FC3;&#x5173;&#x6CE8;&#x7684;&#x662F;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x70B9; Workloads Scheduler Networking Storage workloads&#x662F;&#x6700;&#x5C0F;&#x7684;&#x90E8;&#x7F72;&#x5355;&#x5143;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x542F;&#x52A8;web&#x670D;&#x52A1;&#xFF1A;python manager runserver,&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x6700;&#x5C0F;&#x7684;&#x90E8;&#x7F72;&#x5355;&#x5143;&#x662F;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x3002;workloads&#x5305;&#x542B;&#x4E86;network/memory/cpu&#x7B49;&#x8D44;&#x6E90;&#x7684;&#x9700;&#x6C42;&#x3002; scheduler&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x6709;&#x4E09;&#x4E2A;&#xFF1A; &#x63A7;&#x5236;&#x7740;workloads&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x5305;&#x62EC;&#x521B;&#x5EFA;&#xFF0C;&#x9500;&#x6BC1;&#xFF0C;health check &#x63A7;&#x5236;&#x7740;workloads&#x4E4B;&#x95F4;&#x7684;&#x7EA6;&#x675F;&#x5173;&#x7CFB;&#xFF1A;Coordination/Replica/Dependency workloads&#x7684;&#x6269;&#x5BB9;&#x7F29;&#x5BB9;/&#x66F4;&#x65B0;/&#x56DE;&#x6EDA;&#x7B49; Networks&#x5173;&#x6CE8;&#x96C6;&#x7FA4;&#x7684;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#xFF08;L3/L4)/DNS/service discovery/load balance &#x5B58;&#x50A8;&#x4E3B;&#x8981;&#x5206;&#x4E3A;volumn &amp; persistence volumn kubernetes&#x662F;&#x8D77;&#x6E90;&#x4E8E;google&#x7684;borg&amp;omega&#x7684;&#x5BB9;&#x5668;&#x7F16;&#x6392;&#x5DE5;&#x5177; kubernetes&#x7684;&#x96C6;&#x7FA4;&#x67B6;&#x6784;&#x4ECE;&#x786C;&#x4EF6;&#x89D2;&#x5EA6;&#x770B;&#xFF0C;&#x4E00;&#x4E2A;kubernetes&#x96C6;&#x7FA4;&#x6709;&#x5F88;&#x591A;&#x8282;&#x70B9;(node)&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x662F;&#x7269;&#x7406;&#x673A;/&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#x88AB;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF1A; master&#xFF1A;&#x96C6;&#x7FA4;&#x7684;&#x7BA1;&#x7406; worker&#xFF1A;&#x8FD0;&#x884C;&#x7528;&#x6237;&#x5B9E;&#x9645;&#x90E8;&#x7F72;&#x7684;&#x5E94;&#x7528; master&#x4E3B;&#x8981;&#x6709;&#x56DB;&#x4E2A;&#x7EC4;&#x4EF6; etcd&#xFF1A;&#x63D0;&#x4F9B;&#x7EBF;&#x6027;&#x4E00;&#x81F4;&#x6027;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x96C6;&#x7FA4;&#x7684;&#x914D;&#x7F6E;&#x4FE1;&#x606F;/leader &#x9009;&#x4E3E; api server&#xFF1A;etcd&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x63D0;&#x4F9B;etcd&#x7684;&#x914D;&#x7F6E;&#x53D8;&#x66F4;&#x63A5;&#x53E3;&#xFF0C;&#x53D8;&#x66F4;&#x76D1;&#x542C;&#x7684;&#x80FD;&#x529B; scheduler&#xFF1A;&#x8C03;&#x5EA6;&#x5E94;&#x7528;&#xFF08;&#x7ED9;&#x5E94;&#x7528;&#x5206;&#x914D;&#x53EF;&#x90E8;&#x7F72;&#x7684;&#x8282;&#x70B9;&#xFF09; controller manager&#xFF1A;&#x8DDF;&#x8E2A;&#x5DE5;&#x4F5C;&#x8282;&#x70B9;&#xFF0C;&#x5904;&#x7406;&#x5DE5;&#x4F5C;&#x8282;&#x70B9;&#x5931;&#x6548;&#x7B49;&#x96C6;&#x7FA4;&#x7684;&#x529F;&#x80FD; worker nodes&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#x7EC4;&#x4EF6; kubelet&#xFF1A;&#x7BA1;&#x7406;&#x8282;&#x70B9;&#x7684;&#x5BB9;&#x5668; kube-proxy&#xFF1A;&#x7EC4;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7F51;&#x7EDC;&#x6D41;&#x91CF; Container runtime:&#x5BB9;&#x5668;&#x8FD0;&#x884C;&#x65F6; kubernetes&#x7684;&#x8D44;&#x6E90;&#x5BF9;&#x8C61;kubernetes&#x7684;&#x8D44;&#x6E90;&#x5BF9;&#x8C61;&#x5305;&#x62EC;&#x4E86;pod/deployment/service&#x7B49;&#x7B49;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x8D44;&#x6E90;&#x3002; kubernetes&#x7684;&#x8D44;&#x6E90;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x901A;&#x8FC7;yaml&#x6216;&#x8005;json&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#x6765;&#x521B;&#x5EFA;&#x7684;&#xFF0C;kubebctl&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x547D;&#x4EE4;&#x521B;&#x5EFA;&#x4E00;&#x7EC4;&#x5C5E;&#x6027;&#x6709;&#x9650;&#x7684;&#x8D44;&#x6E90;&#x5BF9;&#x8C61;&#x3002; 1. pod - &#x6700;&#x5C0F;&#x7684;&#x8C03;&#x5EA6;&#x5355;&#x4F4D;(workloads)pod&#x7684;&#x7ED3;&#x6784;kubernetes&#x4F7F;&#x7528;pod&#x4F5C;&#x4E3A;&#x6700;&#x5C0F;&#x8C03;&#x5EA6;&#x5355;&#x4F4D;&#xFF0C;pod&#x662F;&#x4E00;&#x7EC4;&#x5171;&#x4EAB;&#x4E86;&#x67D0;&#x4E9B;&#x8D44;&#x6E90;&#x7684;&#x5BB9;&#x5668; &#x5177;&#x4F53;&#x7684;&#x8BF4;&#xFF0C;&#x5171;&#x4EAB;&#x4E86;net/uts/ipc/pid namespace&#xFF0C;&#x6240;&#x4EE5;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;loopback&#x7F51;&#x7EDC;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;ipc&#x901A;&#x4FE1;&#x7B49;&#xFF0C;&#x4F46;&#x662F;&#x6302;&#x8F7D;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x662F;&#x9694;&#x79BB;&#x7684;&#xFF08;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6765;&#x81EA;&#x4E8E;&#x5BB9;&#x5668;&#x955C;&#x50CF;&#xFF09; pod&#x91CC;&#x7684;&#x5BB9;&#x5668;&#x5FC5;&#x987B;&#x8FD0;&#x884C;&#x5728;&#x76F8;&#x540C;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x6210;&#x7EC4;&#x8C03;&#x5EA6;&#x7684;&#x95EE;&#x9898; Infra &#x5BB9;&#x5668;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x7279;&#x6B8A;&#x7684;&#x955C;&#x50CF;&#xFF0C;&#x53EB;&#x4F5C;&#xFF1A;k8s.gcr.io/pause&#x3002;&#x8FD9;&#x4E2A;&#x955C;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6C47;&#x7F16;&#x8BED;&#x8A00;&#x7F16;&#x5199;&#x7684;&#x3001;&#x6C38;&#x8FDC;&#x5904;&#x4E8E;&#x201C;&#x6682;&#x505C;&#x201D;&#x72B6;&#x6001;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x89E3;&#x538B;&#x540E;&#x7684;&#x5927;&#x5C0F;&#x4E5F;&#x53EA;&#x6709; 100~200 KB &#x5DE6;&#x53F3; pod&#x4E4B;&#x95F4;&#x7684;&#x7F51;&#x7EDC;&#x6CA1;&#x6709;NAT&#x8F6C;&#x6362; Pod &#x626E;&#x6F14;&#x7684;&#x662F;&#x4F20;&#x7EDF;&#x90E8;&#x7F72;&#x73AF;&#x5883;&#x91CC;&#x201C;&#x865A;&#x62DF;&#x673A;&#x201D;&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x8C03;&#x5EA6;&#x3001;&#x7F51;&#x7EDC;&#x3001;&#x5B58;&#x50A8;&#xFF0C;&#x4EE5;&#x53CA;&#x5B89;&#x5168;&#x76F8;&#x5173;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x662F; Pod &#x7EA7;&#x522B;&#x7684; &#x5BB9;&#x5668;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4E3B;&#x5BB9;&#x5668;&#x8FD0;&#x884C;&#x5E94;&#x7528;&#xFF0C;sidecar&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x4F4F;&#x8FDB;&#x7A0B;&#x4E4B;&#x5916;&#x7684;&#x5DE5;&#x4F5C; eg&#xFF1A; war &amp;&amp; tomcat &#x5E94;&#x7528;&#x548C;&#x65E5;&#x5FD7;&#x641C;&#x96C6; istio sidecar pod&#x7684;&#x8D44;&#x6E90;&#x63CF;&#x8FF0;123456789101112apiVersion: v1 # api&#x7248;&#x672C;kind: Pod # &#x8D44;&#x6E90;&#x7C7B;&#x578B;metadata: # &#x540D;&#x79F0;/&#x547D;&#x540D;&#x7A7A;&#x95F4;(namespace)/&#x6807;&#x7B7E;(label) name: kubia-manualspec: # pod&#x5185;&#x5BB9;&#x7684;&#x5B9E;&#x9645;&#x8BF4;&#x660E;&#xFF0C;&#x4F8B;&#x5982;&#x5BB9;&#x5668;/volume&#x7B49; containers: - image: luksa/kubia name: kubia ports: - containerPort: 8080 protocol: TCP# status: # status&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001; &#x4F7F;&#x7528;&#x547D;&#x540D;&#x7A7A;&#x95F4;&#x5BF9;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x5206;&#x7EC4;(&#x6CA1;&#x6709;&#x9694;&#x79BB;&#x4F5C;&#x7528;) &#x4F7F;&#x7528;&#x6807;&#x7B7E;&#x548C;&#x9009;&#x62E9;&#x5668;&#x6765;&#x7EA6;&#x675F;pod&#x7684;&#x8C03;&#x5EA6; 123spec: nodeSelector: labelKey: labelValue 2. deployment - &#x58F0;&#x660E;&#x5F0F;&#x7684;&#x5347;&#x7EA7;&#x5E94;&#x7528;&#x4ECE;replicationController(rc)&#x8BF4;&#x8D77; &#x901A;&#x8FC7;&#x7ED9;pod&#x914D;&#x7F6E;&#x5B58;&#x6D3B;&#x63A2;&#x9488;&#xFF0C;kubernetes&#x68C0;&#x6D4B;pod&#x672C;&#x8EAB;&#x7684;&#x72B6;&#x6001; &#x5F53;pod&#x51FA;&#x73B0;&#x95EE;&#x9898;&#xFF0C;replicationController&#x4F1A;&#x81EA;&#x52A8;&#x62C9;&#x8D77;&#x4E00;&#x4E2A;&#x65B0;&#x7684;pod &#x4FEE;&#x6539;replicationController&#x7684;replicas&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x6269;&#x5BB9;&#x7F29;&#x5BB9; &#x4FEE;&#x6539;replicationController&#x7684;template,&#x53EF;&#x4EE5;&#x5347;&#x7EA7;&#x5E94;&#x7528;(&#x4FEE;&#x6539;&#x4E4B;&#x540E;&#x518D;&#x5220;&#x9664;&#x539F;&#x6709;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4FEE;&#x6539;template&#x5E76;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x73B0;&#x6709;&#x7684;&#x8FD0;&#x884C;&#x4E2D;&#x7684;pod&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x505C;&#x673A;&#x5347;&#x7EA7;) 123456789101112131415161718apiVersion: v1kind: ReplicationControllermetadata: name: kubiaspec: replicas: 3 # &#x526F;&#x672C;&#x6570;&#x91CF; selector: # &#x6839;&#x636E;label&#x9009;&#x62E9;pod app: kubia template: # &#x58F0;&#x660E;&#x88AB;&#x63A7;&#x5236;&#x7684;&#x5BF9;&#x8C61;&#xFF08;&#x4FC4;&#x7F57;&#x65AF;&#x5957;&#x5A03; metadata: labels: app: kubia spec: containers: - name: kubia image: luksa/kubia ports: - containerPort: 8080 deployment&#x76F4;&#x63A5;&#x4F5C;&#x7528;&#x7684;&#x662F;rs&#x4E0D;&#x662F;podreplicationSet(rs)&#x5C31;&#x662F;label&#x9009;&#x62E9;&#x8868;&#x8FBE;&#x5F0F;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#x4E86;&#x7684;rc&#x3002; &#x6CA1;&#x6709;deployment&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5347;&#x7EA7;&#x7684;&#x5E94;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#xFF1A; &#x4F7F;&#x7528;&#x4E00;&#x4E2A;rc&#xFF0C;&#x505C;&#x673A;&#x5347;&#x7EA7;&#xFF1A;&#x5148;&#x4FEE;&#x6539;template&#xFF0C;&#x5220;&#x9664;&#x65E7;pod&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x65B0;&#x7684;pod &#x4F7F;&#x7528;&#x4E24;&#x4E2A;rc&#xFF0C;&#x4E0D;&#x505C;&#x673A;&#x5347;&#x7EA7;&#xFF1A;&#x5148;&#x4FEE;&#x6539;template&#xFF0C;&#x5220;&#x9664;&#x65E7;pod&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x65B0;&#x7684;pod &#x624B;&#x52A8;&#x6267;&#x884C;&#x6EDA;&#x52A8;&#x5347;&#x7EA7; &#x4F7F;&#x7528;&#x4E86;deployment&#x5B9E;&#x73B0;&#x81EA;&#x52A8;&#x6EDA;&#x52A8;&#x5347;&#x7EA7;(kubernetes&#x81EA;&#x52A8;&#x63A7;&#x5236;) deployment&#x6EDA;&#x52A8;&#x5347;&#x7EA7;&#x8FC7;&#x7A0B;&#x4E5F;&#x662F;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x65B0;&#x7684;rs&#x9010;&#x6B65;&#x66FF;&#x6362;&#x65E7;pod&#xFF0C;&#x65E7;&#x7684;rs&#x4E0D;&#x5220;&#x9664; &#x4FDD;&#x7559;&#x65E7;&#x7684;rs&#xFF0C;&#x65B9;&#x4FBF;&#x56DE;&#x6EDA; &#x652F;&#x6301;&#x6682;&#x505C;&#x5347;&#x7EA7;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x8FD0;&#x884C;&#x4E86;&#x4E00;&#x4E2A;&#x91D1;&#x4E1D;&#x96C0;&#x7248;&#x672C;&#x7684;app&#xFF09; &#x5176;&#x4ED6;&#x7684;&#x7F16;&#x6392;&#x5BF9;&#x8C61; daemon set&#xFF1A; &#x7ED9;&#x6BCF;&#x4E2A;node&#x90FD;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;pod eg&#xFF1A;kube-proxy&#xFF0C;&#x65E5;&#x5FD7;&#x641C;&#x96C6;&#x7A0B;&#x5E8F;&#xFF0C;servicemesh&#x7F51;&#x683C;/sidecar job:&#x4E00;&#x6B21;&#x6027;&#x4EFB;&#x52A1;/&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; stateful set&#xFF1A;&#x6709;&#x72B6;&#x6001;&#x7684;pods&#x7684;&#x7F16;&#x6392;&#x5BF9;&#x8C61; &#x5176;&#x4ED6;&#x7F16;&#x6392;&#x65B9;&#x5F0F;&#xFF1A;&#x84DD;&#x7EFF;/&#x91D1;&#x4E1D;&#x96C0;(&#x7070;&#x5EA6;)&#x2026;https://github.com/ContainerSolutions/k8s-deployment-strategies 3. service - &#x8BA9;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x73B0;pod&amp;&#x548C;pod&#x901A;&#x4FE1;service&#x4E3B;&#x8981;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; pod&#x968F;&#x673A;&#x8C03;&#x5EA6;&#x5F15;&#x8D77;&#x7684;pod&#x5E94;&#x7528;&#x5B9A;&#x4F4D;&#x7684;&#x95EE;&#x9898; pod&#x7684;&#x6D41;&#x91CF;&#x7684;&#x8D1F;&#x8F7D;&#x5747;&#x8861; service&#x63D0;&#x4F9B;&#x7A33;&#x5B9A;&#x7684;ip&#x5730;&#x5740;&#x6765;&#x8BBF;&#x95EE;pod service&#x7684;ip&#x5730;&#x5740;&#x662F;&#x865A;&#x62DF;ip&#x5730;&#x5740;(vip)&#xFF0C;&#x65E0;&#x6CD5;ping&#x901A; 12345678910apiVersion: v1kind: Servicemetadata: name: kubiaspec: ports: # &#x63D0;&#x4F9B;&#x591A;&#x4E2A;&#x7AEF;&#x53E3;&#x6620;&#x5C04; - port: 80 targetPort: 8080 selector: app: kubia &#x670D;&#x52A1;&#x53D1;&#x73B0;&#x4E3B;&#x8981;&#x901A;&#x8FC7;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x548C;DNS&#x7528;&#x4E8E;&#x53D1;&#x73B0;&#x670D;&#x52A1; &#x73AF;&#x5883;&#x53D8;&#x91CF; XXX_SERVICE_HOST XXX_SERVICE_PORT (XXX&#x4E3A;&#x670D;&#x52A1;&#x540D;&#x5B57;) DNS {service_name}.{namespace}.{&#x53EF;&#x914D;&#x7F6E;&#x7684;&#x96C6;&#x7FA4;&#x57DF;&#x540E;&#x7F00;} eg&#xFF1A;kubia.default.svc.cluster.local &#x8FDE;&#x63A5;&#x5916;&#x90E8;&#x670D;&#x52A1; &#x8FDE;&#x63A5;service&#x548C;pod&#x7684;&#x662F;&#x4E00;&#x79CD;&#x53EB;&#x505A;endpoint&#x7684;&#x8D44;&#x6E90;&#xFF0C;endpoint&#x8D44;&#x6E90;&#x662F;&#x4E00;&#x7EC4;&#x670D;&#x52A1;&#x7684;ip&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;&#x5217;&#x8868; &#x624B;&#x52A8;&#x914D;&#x7F6E;endpoint&#x6307;&#x5411;&#x5916;&#x90E8;&#x7684;ip/&#x57DF;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5F97;&#x670D;&#x52A1;&#x5F97;&#x4EE5;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x5916;&#x90E8;&#x670D;&#x52A1; &#x5BF9;&#x5916;&#x66B4;&#x9732;&#x670D;&#x52A1;nodeport&#x628A;&#x4EFB;&#x610F;&#x96C6;&#x7FA4;&#x8282;&#x70B9;&#x7684;&#x7AEF;&#x53E3;&#x7684;&#x6D41;&#x91CF;&#x8F6C;&#x53D1;&#x5230;&#x5185;&#x90E8;&#x7684;service ip&#x7AEF;&#x53E3; 123456789101112apiVersion: v1kind: Servicemetadata: name: kubia-nodeportspec: type: NodePort ports: - port: 80 # service &#x7AEF;&#x53E3; targetPort: 8080 # pod&#x5BB9;&#x5668;&#x7AEF;&#x53E3; nodePort: 30123 # &#x96C6;&#x7FA4;&#x7684;&#x8282;&#x70B9;&#x7684;&#x7AEF;&#x53E3; selector: app: kubia &#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x5668;&#x5728;nodeport&#x57FA;&#x7840;&#x4E0A;&#x505A;&#x4E86;&#x4E00;&#x5C42;&#x8D1F;&#x8F7D;&#x5747;&#x8861; ingressingress&#x63D0;&#x4F9B;&#x591A;&#x4E2A;&#x670D;&#x52A1;&#x7684;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x662F;k8s&#x5BF9;&#x53CD;&#x5411;&#x4EE3;&#x7406;&#x7684;&#x4E00;&#x79CD;&#x62BD;&#x8C61;(nginx/haproxy&#x2026;) ingress&#x4E0D;&#x8F6C;&#x53D1;&#x8BF7;&#x6C42;&#x7ED9;service&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;service&#x6765;&#x9009;&#x62E9;&#x4E00;&#x4E2A;pod headless&#x670D;&#x52A1;&#x901A;&#x8FC7;&#x8BB2;&#x670D;&#x52A1;&#x7684;spec&#x914D;&#x7F6E;&#x9879;clusterIP&#x8BBE;&#x7F6E;&#x4E3A;none&#xFF0C;DNS&#x67E5;&#x8BE2;&#x4E0D;&#x8FD4;&#x56DE;service&#x7684;vip&#xFF0C;&#x800C;&#x662F;&#x8FD4;&#x56DE;&#x591A;&#x4E2A;A&#x8BB0;&#x5F55;&#xFF08;&#x6BCF;&#x4E2A;pod&#x4E00;&#x4E2A;&#xFF09; 4. volume - &#x5C06;&#x78C1;&#x76D8;&#x6302;&#x5728;&#x5230;pod&#x4E2D;docker&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6765;&#x81EA;&#x4E8E;&#x955C;&#x50CF;&#xFF0C;&#x901A;&#x8FC7;volume&#x5B9E;&#x73B0;pod&#x4E2D;&#x591A;&#x4E2A;&#x5BB9;&#x5668;&#x7684;&#x6587;&#x4EF6;&#x5171;&#x4EAB; &#x5E38;&#x7528;volumeemptyDir&#x78C1;&#x76D8;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;pod&#x5220;&#x9664;&#xFF0C;&#x5377;&#x5185;&#x5BB9;&#x4F1A;&#x88AB;&#x56DE;&#x6536; hostPath&#x6302;&#x8F7D;&#x5DE5;&#x4F5C;&#x8282;&#x70B9;&#xFF08;host&#x673A;&#x5668;&#xFF09;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;shopee&#x7684;&#x65E5;&#x5FD7; gitRepogit&#x4ED3;&#x5E93;&#x540C;&#x6B65;&#x7684;&#x76EE;&#x5F55;&#xFF08;&#x4E0D;&#x80FD;&#x4E00;&#x76F4;&#x4FDD;&#x6301;&#x540C;&#x6B65;&#xFF09; persistence volumePv/pvc/storage class pvc&#xFF1A;&#x6301;&#x4E45;&#x5377;&#x58F0;&#x660E;&#xFF0C;&#x9762;&#x5411;&#x7528;&#x6237;(&#x5F00;&#x53D1;)&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x63A5;&#x53E3;&#x3002;&#x662F;&#x7528;&#x6237;&#x9700;&#x6C42;&#x6E05;&#x5355;&#x7684;&#x62BD;&#x8C61; pv&#xFF1A;&#x6301;&#x4E45;&#x5377;&#xFF0C;&#x9762;&#x5411;&#x8FD0;&#x7EF4;&#xFF0C;&#x7C7B;&#x4F3C;&#x5B9E;&#x73B0;&#x4E86;pvc&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD0;&#x7EF4;&#x53EF;&#x4EE5;&#x968F;&#x610F;&#x66FF;&#x6362;&#x5B58;&#x50A8;&#x4ECB;&#x8D28;&#x7684;&#x5B9E;&#x73B0; storage class&#xFF1A;&#x5B9E;&#x73B0;&#x4E86;pvc&#x7684;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;storage class&#x6A21;&#x7248;&#x5316;&#x7684;&#x751F;&#x6210;pv Projected Volume&#x5E38;&#x7528;&#x914D;&#x7F6E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#xFF1A;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;/&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;/&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x8BFB;&#x53D6;&#x3002; projected volume&#x662F;&#x914D;&#x7F6E;&#x8D44;&#x6E90;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x7EC8;&#x8BA9;&#x7528;&#x6237;/&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x6240;&#x611F;&#x77E5;&#x7684;&#x65B9;&#x5F0F;&#x540C;&#x6837;&#x662F;&#x4E0A;&#x9762;&#x4E09;&#x79CD; &#x62BD;&#x8C61;&#x914D;&#x7F6E;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x72EC;&#x7ACB;&#x914D;&#x7F6E;&#x58F0;&#x660E;&#x7684;yaml&#x6587;&#x4EF6;&#x548C;&#x90E8;&#x7F72;&#x8D44;&#x6E90;&#x7684;yaml&#x6587;&#x4EF6; configmap&#x5B58;&#x50A8;&#x975E;&#x654F;&#x611F;&#x7684;&#x6587;&#x672C;&#x914D;&#x7F6E;&#x6570;&#x636E; secret&#x7528;&#x4E8E;&#x4F20;&#x9012;&#x8BC1;&#x4E66;/&#x79C1;&#x94A5;&#x4E4B;&#x7C7B;&#x7684;&#x654F;&#x611F;&#x6570;&#x636E; downward api&#x7528;&#x6765;&#x548C;k8s&#x901A;&#x4FE1;/&#x83B7;&#x53D6;pod&#x5143;&#x6570;&#x636E;&#x7684; ServiceAccountTokenkubernetes&#x8FD0;&#x884C;&#x539F;&#x7406;&#x7EC4;&#x4EF6; k8s&#x7EC4;&#x4EF6;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#xFF1A; &#x63A7;&#x5236;&#x9762;&#x677F; etcd apiserver scheduler controller manager &#x5DE5;&#x4F5C;&#x8282;&#x70B9; kubelet kube-proxy &#x5BB9;&#x5668;&#x8FD0;&#x884C;&#x65F6; &#x9644;&#x52A0;&#x7EC4;&#x4EF6; K8s DNS&#x670D;&#x52A1;&#x5668; dashboard ingress&#x63A7;&#x5236;&#x5668; &#x96C6;&#x7FA4;&#x76D1;&#x63A7; CNI&#xFF08;&#x5BB9;&#x5668;&#x7F51;&#x7EDC;&#x63A5;&#x53E3;&#x63D2;&#x4EF6;&#xFF09; &#x51E0;&#x4E2A;&#x70B9;&#xFF1A; etcd&#x662F;&#x552F;&#x4E00;&#x7684;&#x5B58;&#x50A8;&#x7EC4;&#x4EF6;&#xFF08;raft&#x534F;&#x8BAE;&#xFF0C;&#x7EBF;&#x6027;&#x4E00;&#x81F4;&#x6027;&#x7684;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#xFF09; apiserver&#x662F;&#x552F;&#x4E00;&#x7684;&#x548C;etcd&#x4EA4;&#x4E92;&#x7684;&#x7EC4;&#x4EF6;&#xFF08;apiserver&#x5B9E;&#x73B0;&#x4E86;&#x4E50;&#x89C2;&#x9501;&#x673A;&#x5236;&#xFF0C;&#x80FD;&#x4FDD;&#x8BC1;&#x51B2;&#x7A81;&#x88AB;&#x6B63;&#x5E38;&#x5904;&#x7406;&#xFF09; apiserver&#x4EE5;&#x5916;&#x7684;&#x7EC4;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x90FD;&#x662F;&#x901A;&#x8FC7;apiserver&#x8FDB;&#x884C; etcd&#x548C;apiserver&#x662F;&#x591A;&#x5B9E;&#x4F8B;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#xFF0C;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x867D;&#x7136;&#x591A;&#x5B9E;&#x4F8B;&#xFF0C;&#x4F46;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x8282;&#x70B9;&#x5904;&#x4E8E;&#x5DE5;&#x4F5C;&#x72B6;&#x6001;&#xFF08;&#x5229;&#x7528;etcd&#x9009;&#x4E3E;&#xFF09; &#x9664;&#x4E86;kubelet&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x90FD;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;pod&#x6765;&#x8FD0;&#x884C; 1) etcd - &#x5B58;&#x50A8;&#x4ECB;&#x8D28;2) apiserver - k8s&#x7684;api&#xFF0C;&#x7C7B;&#x4F3C;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x4E4B;&#x4E8E;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF; &#x96C6;&#x7FA4;&#x8D44;&#x6E90;&#x548C;&#x72B6;&#x6001;&#x7684;crud &#x8D44;&#x6E90;&#x53D8;&#x66F4;&#x7684;&#x901A;&#x77E5; 3) &#x8C03;&#x5EA6;&#x5668; - &#x5206;&#x914D;&#x8282;&#x70B9;&#x8C03;&#x5EA6;&#x5668;&#x8C03;&#x5EA6;&#x6D41;&#x7A0B;&#xFF1A; &#x8C03;&#x5EA6;&#x5668;&#x76D1;&#x542C;api server&#x4E2D;&#x6240;&#x6709;&#x66F4;&#x65B0;&#x7684;pod&#x7684;&#x5B9A;&#x4E49; &#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x8282;&#x70B9;&#xFF08;&#x6D89;&#x53CA;&#x5230;&#x8C03;&#x5EA6;&#x7B56;&#x7565;&#xFF09; &#x66F4;&#x6539;pod&#x4E2D;nodeName&#x7684;&#x58F0;&#x660E; apiserver&#x901A;&#x77E5;&#x5BF9;&#x5E94;&#x8282;&#x70B9;&#x7684;kubelet kubelet&#x90E8;&#x7F72;pod 4) controller manager - &#x8BA9;&#x96C6;&#x7FA4;&#x72B6;&#x6001;&#x5411;api&#x5B9A;&#x4E49;&#x7684;&#x671F;&#x671B;&#x72B6;&#x6001;&#x6536;&#x655B;&#x63A7;&#x5236;&#x5668;&#x5305;&#x62EC; deployment controller node controller service controller endpoints controller namespace controller &#x2026; &#x6709;&#x4E9B;controller&#x4F9D;&#x8D56;&#x5916;&#x90E8;&#x7EC4;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;ingress controller&#xFF0C;&#x5C31;&#x662F;&#x575A;&#x633A;apiserver&#x91CC;ingress&#x8D44;&#x6E90;&#x7684;&#x53D8;&#x66F4;&#xFF0C;&#x7136;&#x540E;&#x66F4;&#x65B0;ingress&#x7684;&#x57FA;&#x7840;&#x8BBE;&#x65BD;(nginx/haproxy&#x7B49;)&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x52A8;&#x6001;&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#xFF0C;&#x8BA9;&#x96C6;&#x7FA4;&#x7684;&#x72B6;&#x6001;&#x53D8;&#x6210;&#x6211;&#x4EEC;&#x671F;&#x5F85;&#x7684;&#x72B6;&#x6001;&#xFF08;&#x8D44;&#x6E90;&#x58F0;&#x660E;) 5) kubelet&#x4E3B;&#x8981;&#x5DE5;&#x4F5C;&#x6709;&#xFF1A; &#x6CE8;&#x518C;node&#x5230;apiserver &#x542F;&#x52A8;pod&#x5BB9;&#x5668; &#x6301;&#x7EED;&#x76D1;&#x63A7;&#x5BB9;&#x5668;&#xFF0C;&#x5411;apiserver&#x62A5;&#x544A; 6&#xFF09;kube-proxyCluster IP&#x4E0E;NodePort&#x7B49;&#x6982;&#x5FF5;&#x662F;kube-proxy&#x670D;&#x52A1;&#x901A;&#x8FC7;iptables&#x7684;NAT&#x8F6C;&#x6362;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;kube-proxy&#x5728;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x52A8;&#x6001;&#x521B;&#x5EFA;&#x4E0E;Service&#x76F8;&#x5173;&#x7684;iptables&#x89C4;&#x5219;&#xFF0C;&#x8FD9;&#x4E9B;&#x89C4;&#x5219;&#x5B9E;&#x73B0;&#x4E86;&#x5C06;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#xFF08;Cluster IP&#x6216;NodePort&#xFF09;&#x7684;&#x8BF7;&#x6C42;&#x8D1F;&#x8F7D;&#x5206;&#x53D1;&#x5230;&#x540E;&#x7AEF;Pod&#x7684;&#x529F;&#x80FD; &#x8FD0;&#x884C;&#x6A21;&#x5F0F; &#x6700;&#x5F00;&#x59CB;&#x7528;&#x4E8E;&#x4FEE;&#x6539;iptable&#x89C4;&#x5219;&#xFF0C;&#x540C;&#x65F6;&#x4F5C;&#x4E3A;proxy&#x7EC4;&#x4EF6;&#x4EE3;&#x7406;&#x8BF7;&#x6C42;&#x8FDB;&#x51FA;&#xFF0C;&#x6240;&#x4EE5;&#x53EB;kube-proxy(&#x6027;&#x80FD;&#x5DEE;&#xFF0C; &#x5185;&#x6838;&#x548C;&#x7528;&#x6237;&#x6001;&#x4E4B;&#x95F4;&#x4F20;&#x8F93;&#x6570;&#x636E;) &#x5B8C;&#x5168;iptable&#x6A21;&#x5F0F;&#xFF0C;&#x6027;&#x80FD;&#x8F83;&#x9AD8; 7) &#x63D2;&#x4EF6;&#x901A;&#x8FC7;yaml&#x58F0;&#x660E;&#xFF0C;&#x4F5C;&#x4E3A;daemonset/deployment/replicationController&#x8D44;&#x6E90;&#x90E8;&#x7F72; &#x63A7;&#x5236;&#x5668;&#x5DE5;&#x4F5C;&#x6D41; &#x6240;&#x6709;&#x7EC4;&#x4EF6;&#x6267;&#x884C;&#x52A8;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x8D44;&#x6E90;&#x53D1;&#x9001;&#x7ED9;apiserver&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x89C2;&#x6D4B;&#x5230; &#x8DE8;pod&#x7F51;&#x7EDC;(service/DNS/&#x670D;&#x52A1;&#x53D1;&#x73B0;)k8s&#x7684;&#x7F51;&#x7EDC;&#x7684;&#x539F;&#x5219;&#xFF1A; &#x6BCF;&#x4E2A;pod&#x5177;&#x6709;&#x552F;&#x4E00;&#x7684;ip pod&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x6CA1;&#x6709;NAT 1. &#x540C;&#x4E00;&#x4E2A;pod&#x5185;&#x4E0D;&#x540C;&#x7684;&#x5BB9;&#x5668;&#x901A;&#x4FE1;&#x540C;&#x4E00;&#x4E2A;pod&#x5185;&#x7684;&#x5BB9;&#x5668;&#x5171;&#x4EAB;net namespace&#xFF0C;&#x5171;&#x4EAB;&#x534F;&#x8BAE;&#x6808;&#xFF0C;&#x7B49;&#x540C;&#x4E8E;&#x5728;&#x76F8;&#x540C;&#x4E3B;&#x673A;&#x901A;&#x4FE1; 2. &#x540C;&#x4E00;&#x8282;&#x70B9;&#x7684;&#x901A;&#x4FE1;&#x539F;&#x7406;&#xFF08;&#x548C;docker&#x7684;CNM&#x4E00;&#x6837; &#x6865;&#x63A5;&#x7F51;&#x7EDC;&#x6A21;&#x5F0F;Pod a ping pod b: ping&#x8FDB;&#x7A0B;&#x6784;&#x9020;ICMP echo&#x8BF7;&#x6C42;&#x5305;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;socket&#x53D1;&#x7ED9;&#x534F;&#x8BAE;&#x6808;&#xFF0C; &#x534F;&#x8BAE;&#x6808;&#x6839;&#x636E;&#x76EE;&#x7684;IP&#x5730;&#x5740;&#x548C;&#x7CFB;&#x7EDF;&#x8DEF;&#x7531;&#x8868;&#xFF0C;&#x77E5;&#x9053;&#x53BB;10.1.1.2&#x7684;&#x6570;&#x636E;&#x5305;&#x5E94;&#x8BE5;&#x8981;&#x7531;10.1.1.1&#x53E3;&#x51FA;&#x53BB; &#x7531;&#x4E8E;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x8BBF;&#x95EE;10.1.1.1&#xFF0C;&#x4E14;&#x76EE;&#x7684;IP&#x548C;&#x672C;&#x5730;IP&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x7F51;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5;&#x534F;&#x8BAE;&#x6808;&#x4F1A;&#x5148;&#x53D1;&#x9001;ARP&#x51FA;&#x53BB;&#xFF0C;&#x8BE2;&#x95EE;10.1.1.1&#x7684;mac&#x5730;&#x5740; &#x534F;&#x8BAE;&#x6808;&#x5C06;ARP&#x5305;&#x4EA4;&#x7ED9;eth0&#xFF0C;&#x8BA9;&#x5B83;&#x53D1;&#x51FA;&#x53BB; &#x7531;&#x4E8E;eth0&#x7684;&#x53E6;&#x4E00;&#x7AEF;&#x8FDE;&#x7684;&#x662F;veth123&#xFF0C;&#x6240;&#x4EE5;ARP&#x8BF7;&#x6C42;&#x5305;&#x5C31;&#x8F6C;&#x53D1;&#x7ED9;&#x4E86;veth123 &#x7531;&#x4E8E;veth123&#x7684;&#x53E6;&#x4E00;&#x7AEF;&#x8FDE;&#x7684;&#x662F;bridge&#xFF0C;&#x6240;&#x4EE5;ARP&#x8BF7;&#x6C42;&#x5305;&#x5C31;&#x8F6C;&#x53D1;&#x7ED9;&#x4E86;bridge arp&#x5305;&#x7EE7;&#x7EED;&#x5230;&#x8FBE;beth234&#x548C;podb&#x7684;eth0 eth0&#x628A;arp&#x5305;&#x5F80;&#x4E0A;&#x629B;&#x7ED9;&#x534F;&#x8BAE;&#x6808;&#xFF0C;&#x534F;&#x8BAE;&#x6808;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x8BBE;&#x5907;&#x6709;&#x8FD9;&#x4E2A;ip&#xFF0C;&#x8FD4;&#x56DE;arp&#x5E94;&#x7B54;&#xFF08;&#x6CA1;&#x6709;&#x5C31;&#x629B;&#x5F03; ps&#xFF1A;&#x516C;&#x53F8;&#x4F7F;&#x7528;&#x7684;&#x662F;host&#x7F51;&#x7EDC;&#xFF08;&#x5BB9;&#x5668;&#x548C;&#x5BBF;&#x4E3B;&#x673A;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;ip&#x5730;&#x5740; 3. &#x8DE8;&#x8282;&#x70B9;&#x7684;&#x901A;&#x4FE1;&#x539F;&#x7406; &#x4E0D;&#x540C;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x7F51;&#x6865;&#x4EE5;&#x67D0;&#x79CD;&#x5F62;&#x5F0F;&#x8FDE;&#x63A5; &#x4E09;&#x5C42;&#x7F51;&#x7EDC; &#x4E8C;&#x5C42;&#x7F51;&#x7EDC; &#x5177;&#x4F53;&#x7531;CNI&#x63D2;&#x4EF6;&#x6765;&#x5B9E;&#x73B0; calico flannel udp vxlan Host-gw UDP Docker0&#xFF08;br&#xFF09;&#x901A;&#x8FC7;host&#x673A;&#x5668;&#x4E0A;&#x7684;&#x8DEF;&#x7531;&#x8868;&#xFF0C;&#x8F6C;&#x53D1;&#x8BF7;&#x6C42;&#x5230;flannel0 flannel0&#x662F;&#x4E00;&#x4E2A;tun&#x8BBE;&#x5907;&#xFF0C;&#x628A;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x5230;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;flanneld&#x7A0B;&#x5E8F; flanneld&#x67E5;&#x627E;etcd&#xFF0C;&#x627E;&#x5230;&#x76EE;&#x7684;&#x5BB9;&#x5668;ip&#x5BF9;&#x5E94;&#x7684;&#x8282;&#x70B9;ip &#x5957;&#x5A03;&#x4E00;&#x5C42;ip&#x5305; &#x901A;&#x8FC7;&#x5BBF;&#x4E3B;&#x673A;etho0&#x8F6C;&#x53D1;udp&#x5305;&#x5230;&#x516C;&#x7F51; &#x2026; vxlan &#x5728;&#x73B0;&#x6709;&#x7684;&#x4E09;&#x5C42;&#x7F51;&#x7EDC;&#x4E4B;&#x4E0A;&#xFF0C;&#x201C;&#x8986;&#x76D6;&#x201D;&#x4E00;&#x5C42;&#x865A;&#x62DF;&#x7684;&#x3001;&#x7531;&#x5185;&#x6838; VXLAN &#x6A21;&#x5757;&#x8D1F;&#x8D23;&#x7EF4;&#x62A4;&#x7684;&#x4E8C;&#x5C42;&#x7F51;&#x7EDC;&#xFF0C;&#x4F7F;&#x5F97;&#x8FDE;&#x63A5;&#x5728;&#x8FD9;&#x4E2A; VXLAN &#x4E8C;&#x5C42;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x201C;&#x4E3B;&#x673A;&#x201D;&#xFF08;&#x865A;&#x62DF;&#x673A;&#x6216;&#x8005;&#x5BB9;&#x5668;&#x90FD;&#x53EF;&#x4EE5;&#xFF09;&#x4E4B;&#x95F4;&#xFF0C;&#x53EF;&#x4EE5;&#x50CF;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5C40;&#x57DF;&#x7F51;&#xFF08;LAN&#xFF09;&#x91CC;&#x90A3;&#x6837;&#x81EA;&#x7531;&#x901A;&#x4FE1; &#x76EE;&#x7684; VTEP &#x8BBE;&#x5907;&#x7684;arp&#x8868;&#x5728;&#x8282;&#x70B9;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x751F;&#x6210; host-gw &#x8DEF;&#x5F84;&#x66F4;&#x77ED;&#xFF0C;&#x6027;&#x80FD;&#x66F4;&#x9AD8; &#x4F46;&#x662F;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x662F;&#x4E8C;&#x5C42;&#x8054;&#x901A;&#x7684;&#xFF08;&#x901A;&#x8FC7;&#x8DEF;&#x7531;&#x8868;&#x5413;&#x4E00;&#x8DF3;mac&#x5730;&#x5740;&#x8BBE;&#x7F6E;&#x76EE;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x901A;&#x8FC7;&#x4E8C;&#x5C42;&#x7F51;&#x7EDC;&#x4F20;&#x8F93; &#x5E38;&#x7528;kubectl&#x7684;&#x547D;&#x4EE4;&#xFF08;&#x6301;&#x7EED;&#x66F4;&#x65B0;&#x8D44;&#x6E90;&#x4FE1;&#x606F; kubectl explain po/ns &#x2026; podpod &#x521B;&#x5EFA;pod - &#x901A;&#x8FC7;yaml&#x6587;&#x4EF6; kubectl create -f xxx.yaml &#x67E5;&#x770B;&#x8FD0;&#x884C;&#x65F6;pod&#x7684;&#x5B8C;&#x6574;&#x5B9A;&#x4E49; kubectl get po poname -o yaml&#xFF08;-o &#x8868;&#x793A;&#x683C;&#x5F0F;yaml/json&#xFF09; &#x67E5;&#x770B;pod&#x65E5;&#x5FD7; kubectl logs podname (&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#x65F6;&#x5019;) kubectl logs podname -c containername (&#x4E0D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#x65F6;&#x5019;) &#x672C;&#x5730;ssh&#x7AEF;&#x53E3;&#x8F6C;&#x53D1; kubectl port-forward podname localPort:podPort &#x5220;&#x9664;pod kubectl delete po podname kubectl delete po -l labelKey=labelValue kubectl delete ns nsName kubectl delete po &#x2013;all kubectl delete all &#x2013;all label &#x521B;&#x5EFA;&#x6807;&#x7B7E; &#x901A;&#x8FC7;&#x547D;&#x4EE4; &#x901A;&#x8FC7;yaml&#x6587;&#x4EF6; 12345xxxmetadata: name: podname labels: labelkey: labelval &#x67E5;&#x770B;&#x6807;&#x7B7E; &#x5217;&#x8868;&#x5E26;&#x6807;&#x7B7E; kubectl get po &#x2013;show-labels Kubectl get po -L labelkey1&#xFF0C;labelkey2 &#x901A;&#x8FC7;&#x6807;&#x7B7E;&#x8FC7;&#x6EE4; Kubectl get po -l labelkey Kubectl get po -l labelkey=labelval Kubectl get po -l labelkey=&#x2019;!labelval&#x2019; &#x4FEE;&#x6539;&#x6807;&#x7B7E; Kubectl label po podname labelkey=labbelval Kubectl label po podname labelkey=labbelval &#x2013;overwrite(&#x4FEE;&#x6539;&#x5DF2;&#x5B58;&#x5728;&#x7684;) &#x4F7F;&#x7528;&#x6807;&#x7B7E;&#x5206;&#x7C7B;&#x5DE5;&#x4F5C;&#x8282;&#x70B9; Kubectl label node codename labelkey=labelval &#x67E5;&#x770B;pod&#x8BE6;&#x7EC6;&#x4FE1;&#x606F; Kubectl describe po podname &#x6DFB;&#x52A0;&#x6CE8;&#x89E3; Kubectl annotate pod podname key=value namespace &#x521B;&#x5EFA;&#x547D;&#x540D;&#x7A7A;&#x95F4; yaml 1234apiVersion: v1kind: Namespacemetadata: name: custom-ns kubectl &#x65B9;&#x5F0F;: kubectl create namespace custom-ns &#x67E5;&#x770B;namespace kubectl get ns &#x67E5;&#x770B;namespace&#x4E2D;&#x7684;&#x6240;&#x6709;pods kubectl get po -n namespaceName","categories":[],"tags":[]},{"title":"对数据系统架构设计权衡的思考","slug":"对数据系统架构设计权衡的思考","date":"2019-11-20T03:04:32.000Z","updated":"2019-11-21T07:42:47.346Z","comments":true,"path":"2019/11/20/对数据系统架构设计权衡的思考/","link":"","permalink":"http://lqczzz.github.io/2019/11/20/对数据系统架构设计权衡的思考/","excerpt":"","text":"&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x662F;&#x5728;shopee&#x53C2;&#x4E0E;feed&#x9879;&#x76EE;&#x8BBE;&#x8BA1;&#x548C;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x7684;&#x4E00;&#x4E9B;&#x601D;&#x8003;&#x3002;&#x5728;feed&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E2D;&#xFF0C;&#x5F88;&#x591A;&#x8BBE;&#x8BA1;&#x7B97;&#x662F;&#x5B9E;&#x8DF5;&#x4E86;&#x300A;DDIA&#x300B;&#x91CC;&#x9762;&#x7684;&#x4E00;&#x4E9B;&#x8BBA;&#x70B9;&#x3002;&#x81EA;&#x8BA4;&#x4E3A;&#x300A;DDIA&#x300B;&#x4E2D;&#x8C08;&#x53CA;&#x7684;&#x7406;&#x8BBA;&#x548C;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x5F97;&#x610F;&#x5B9E;&#x8DF5;&#x5176;&#x4E2D;&#x7684;&#x90E8;&#x5206;&#x7406;&#x8BBA;&#xFF0C;&#x8BA9;&#x6211;&#x5728;&#x8FD9;&#x4E24;&#x5E74;&#x91CC;&#x6210;&#x957F;&#x4E0D;&#x5C11;&#x3002; &#x4E00;.&#x4EC0;&#x4E48;&#x662F;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x73B0;&#x5728;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x4EA7;&#x54C1;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x53EF;&#x4EE5;&#x5F52;&#x7EB3;&#x4E3A;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#xFF1A;&#x5B83;&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x79CD;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7CFB;&#x7EDF;&#xFF1A;mysql/redis/kafka/es/hdfs&#x6D89;&#x53CA;&#x5230;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x7F13;&#x5B58;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7B49;&#x7B49;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x63A8;&#x8350;&#xFF0C;&#x8FD8;&#x53EF;&#x80FD;&#x6709;hbase&#x7B49;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x5DE5;&#x5177;&#xFF0C;&#x6BCF;&#x79CD;&#x5DE5;&#x5177;&#x5404;&#x53F8;&#x5176;&#x804C;&#xFF0C;&#x5206;&#x5DE5;&#x5408;&#x4F5C;&#xFF0C;&#x800C;&#x4EE3;&#x7801;&#x66F4;&#x50CF;&#x662F;&#x8FDE;&#x63A5;&#x5404;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x7C98;&#x5408;&#x5242;&#x3002; api +----------------------------------------------------+--------------------------------------+ | | | | +-----------------+ read request .................... asyncjob | | | in-memory cache | --------------- . application code . ------------------+ | | +--------+--------+ check if data .................... | | | | in cache first | | cache miss | | | | +------------------+ | or writes | | | | |search request | | | | +-------+--------+ +---------+--------+ +-------+------+ | | | | full_text_q | | primary db | | message q | | | | +-------+--------+ +---------+--------+ +-------+------+ | | | | sync to full text | capture change | | | | +----------+-----------+ +---+ | | | | | | | | sync ...................... ...................... | | +-------------- . application code . . application code . | | ...................... ...................... | | | | +-----------------------------------------------------------------------------+-------------+ | thrid api &#x4EE5;twitter/weibo&#x4E3A;&#x4EE3;&#x8868;&#x7684;feed&#x6D41;&#x4EA7;&#x54C1;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x4EA7;&#x54C1;&#xFF1A;&#x5B83;&#x4F7F;&#x7528;mysql/cassandra&#x6765;&#x6301;&#x4E45;&#x5316;&#x7528;&#x6237;&#x6570;&#x636E;&#x4F7F;&#x7528;redis&#x52A0;&#x901F;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x4F7F;&#x7528;&#x6D88;&#x606F;&#x961F;&#x5217;&#x524A;&#x5CF0;&#x586B;&#x8C37;&#x4F7F;&#x7528;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x652F;&#x6301;&#x641C;&#x7D22;&#x7279;&#x5B9A;&#x7528;&#x6237;/&#x5185;&#x5BB9;&#x4F7F;&#x7528;hbase&#x7B49;&#x5217;&#x5F0F;&#x5B58;&#x50A8;&#x6765;&#x505A;&#x63A8;&#x8350;/&#x6570;&#x636E;&#x5206;&#x6790;&#x2026; &#x4E8C;.&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x65B9;&#x6CD5;&#x8BBA;2.0 &#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x65B9;&#x6CD5;&#x548C;&#x8F6F;&#x4EF6;&#x65B9;&#x6CD5;&#x7684;&#x6536;&#x655B;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x65B9;&#x6CD5;&#xFF0C;&#x5148;&#x629B;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E3B;&#x8981;&#x53EF;&#x4EE5;&#x4ECE;&#x4E09;&#x4E2A;&#x89D2;&#x5EA6;&#x7ED9;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x56DE;&#x7B54;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x57FA;&#x672C;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5408;&#x7406;&#x7684;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x3002; &#x6570;&#x636E;&#x6A21;&#x578B;&#x6570;&#x636E;&#x7684;&#x8BBF;&#x95EE;&#x6A21;&#x5F0F; &#x7ED3;&#x6784;&#x6027;/&#x534A;&#x7ED3;&#x6784;&#x6027;/&#x975E;&#x7ED3;&#x6784;&#x6027; &#x5C40;&#x90E8;&#x6027; or &#x591A;&#x5BF9;&#x591A;&#x5173;&#x7CFB;(&#x8BBF;&#x95EE;) &#x7CFB;&#x7EDF;&#x8D1F;&#x8F7D; &#x8BFB;&#x591A;&#x5199;&#x5C11;(&#x8D1F;&#x8F7D;&#x7C7B;&#x578B;&#xFF0C;&#x8BFB;&#x5199;&#x6269;&#x6563;).. &#x51B7;&#x70ED;&#x6570;&#x636E;(&#x8D1F;&#x8F7D;).. &#x6570;&#x636E;&#x91CF;.. &#x7D22;&#x5F15;&#x7C7B;&#x578B;.. &#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#x6027;&#x548C;&#x65F6;&#x6548;&#x6027; &#x6B63;&#x786E;&#x6027;&#xFF1A;&#x6301;&#x4E45;&#x5316;&#x4FDD;&#x8BC1; &#x6B63;&#x786E;&#x6027;&#xFF1A;&#x4E00;&#x81F4;&#x6027;&#x4FDD;&#x8BC1;(&#x9650;&#x884C;&#x4E00;&#x81F4;&#x6027;/&#x987A;&#x5E8F;&#x4E00;&#x81F4;&#x6027;/&#x56E0;&#x679C;&#x4E00;&#x81F4;&#x6027;&#x2026;) &#x65F6;&#x6548;&#x6027;&#xFF1A;&#x4F4E;&#x65F6;&#x6548; == &#x6700;&#x7EC8;&#x4E00;&#x81F4; &#x9664;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x4E09;&#x4E2A;&#x89D2;&#x5EA6;&#xFF0C;&#x5176;&#x5B9E;&#x8FD8;&#x5E94;&#x8BE5;&#x8003;&#x8651;&#x4E0A;&#x4EBA;&#x7684;&#x56E0;&#x7D20;&#xFF0C;&#x6BD4;&#x5982;&#x56E2;&#x961F;&#x5BF9;&#x4E8E;&#x67D0;&#x79CD;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x7684;&#x719F;&#x6089;&#x7A0B;&#x5EA6;&#x3002; &#x6F58;&#x5BB6;&#x5B87;&#x7684;&#x300A;&#x8F6F;&#x4EF6;&#x65B9;&#x6CD5;&#x300B;&#x91CC;&#x63D0;&#x4F9B;&#x4E86;&#x51E0;&#x4E2A;&#x8F6F;&#x4EF6;&#x5EFA;&#x6A21;&#x601D;&#x8DEF;&#xFF0C;&#x5927;&#x4F53;&#x4E0A;&#x9075;&#x5FAA; 2.1 &#x6570;&#x636E;&#x6A21;&#x578B;&#x548C;&#x8BBF;&#x95EE;&#x6A21;&#x5F0F; &#x5728;&#x601D;&#x8003;&#x6570;&#x636E;&#x6A21;&#x578B;&#x7684;&#x65F6;&#x5019;&#x5176;&#x5B9E;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x5145;&#x5206;&#x7406;&#x89E3;&#x9700;&#x6C42;&#xFF0C;&#x62BD;&#x8C61;&#x51FA;&#x9886;&#x57DF;&#x6A21;&#x578B;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x56FE;(1:1/1:n/n:n)&#xFF0C;&#x6B63;&#x5411;&#x53CD;&#x5411;&#x5173;&#x7CFB;&#x7B49;&#x533A;&#x5206;&#x51FA;&#x6838;&#x5FC3;&#x6570;&#x636E;&#x6A21;&#x578B;&#x548C;&#x6D3E;&#x751F;&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B; &#x6570;&#x636E;&#x6A21;&#x578B;&#x5C31;&#x662F;&#x5224;&#x65AD;&#x6570;&#x636E;&#x662F;&#x5C5E;&#x4E8E;&#x7ED3;&#x6784;&#x6027;/&#x534A;&#x7ED3;&#x6784;&#x6027;&#x8FD8;&#x662F;&#x975E;&#x7ED3;&#x6784;&#x6027;(blob)blob&#x6570;&#x636E;&#x4E0D;&#x7528;&#x8BF4;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x5206;&#x5E03;&#x5F0F;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x5B58;&#x50A8;&#x534A;&#x7ED3;&#x6784;&#x6027;&#x6570;&#x636E;&#xFF0C;&#x6BD4;&#x5982;&#x4E00;&#x5219;feed&#x7684;json { &quot;feedid&quot;: &quot;xx&quot;, &quot;feed_uid&quot;: 123, &quot;type&quot;: 1, &quot;source: 2, &quot;feed_username&quot;: &quot;&quot;, &quot;content&quot;: { &quot;voucher_stickers&quot;: [{ }], &quot;caption&quot;: &quot;&quot; }, &quot;comments&quot;: [{ }] } &#x56E0;&#x4E3A;&#x8FD9;&#x79CD;&#x6570;&#x636E;&#x5F88;&#x5C11;&#x9700;&#x8981;&#x5173;&#x8054;&#x67E5;&#x8BE2;&#xFF0C;&#x5F88;&#x9002;&#x5408;&#x4F7F;&#x7528;mongodb&#x7B49;&#x6587;&#x6863;&#x7ED3;&#x6784;&#x6A21;&#x578B;&#x6570;&#x636E;&#x5E93;&#x5B58;&#x50A8;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x91C7;&#x7528;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x5B58;&#x50A8;&#x534A;&#x7ED3;&#x6784;&#x6027;&#x5177;&#x6709;&#x66F4;&#x52A0;&#x597D;&#x7684;&#x5C40;&#x90E8;&#x6027;&#xFF0C;&#x6709;&#x5229;&#x4E8E;&#x4E00;&#x5BF9;&#x591A;&#x5173;&#x7CFB;&#xFF0C;&#x4E0D;&#x5229;&#x4E8E;&#x591A;&#x5BF9;&#x591A;&#x5173;&#x7CFB;&#xFF0C;&#x4E5F;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5197;&#x4F59;&#x7ED3;&#x6784;&#x6027;&#xFF08;&#x5173;&#x7CFB;&#x578B;&#xFF09;&#x6570;&#x636E;&#x5229;&#x4E8E;&#x8868;&#x793A;&#x591A;&#x5BF9;&#x591A;&#x5173;&#x7CFB;&#xFF0C;&#x4F46;&#x662F;&#x5C40;&#x90E8;&#x6027;&#x66F4;&#x5DEE; &#x7ED3;&#x6784;&#x6027;&#x6570;&#x636E;&#x5E93;&#x8868;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x5B9A;&#x7684;&#x72AF;&#x8303;&#x5F0F;&#x8BBE;&#x8BA1;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x5197;&#x4F59;&#xFF0C;&#x964D;&#x4F4E;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x5C40;&#x90E8;&#x6027;&#x3002; &#x5728;&#x505A;feed&#x9700;&#x6C42;&#x91CC;&#xFF0C;&#x660E;&#x663E;feed&#x6570;&#x636E;&#x66F4;&#x9002;&#x5408;&#x4F7F;&#x7528;&#x534A;&#x7ED3;&#x6784;&#x5316;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6BD4;&#x5982;mongodb/cassandra&#x4F46;&#x662F;shopee&#x5386;&#x53F2;&#x539F;&#x56E0;&#x53EA;&#x652F;&#x6301;mysql/tidb&#x505A;&#x6301;&#x4E45;&#x5316;&#x7684;&#x5B58;&#x50A8;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7684;feed&#x5185;&#x5BB9;&#x6570;&#x636E;&#x662F;&#x4EE5;&#x975E;&#x8303;&#x5F0F;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x5B58;&#x50A8;&#x5728;&#x8868;&#x4E2A;&#x7684;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x91CC;&#x7684;&#x3002; 2.2 &#x7CFB;&#x7EDF;&#x8D1F;&#x8F7D;&#x601D;&#x8003;&#x7CFB;&#x7EDF;&#x8D1F;&#x8F7D;&#x7684;&#x65F6;&#x5019;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x601D;&#x8003;&#x7CFB;&#x7EDF;&#x7684;&#x7528;&#x4F8B;&#xFF0C;&#x7CFB;&#x7EDF;&#x9700;&#x8981;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x54EA;&#x4E9B;&#x80FD;&#x529B;&#xFF0C;&#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x5177;&#x6709;&#x54EA;&#x4E9B;&#x7279;&#x6027;&#xFF0C;&#x6838;&#x5FC3;&#x96BE;&#x9898;&#x5728;&#x54EA;&#x91CC;&#x8FD9;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x5217;&#x51FA;&#x7CFB;&#x7EDF;&#x7684;&#x5173;&#x952E;&#x63A5;&#x53E3;&#xFF0C;&#x5E2E;&#x7EC4;&#x6211;&#x4EEC;&#x601D;&#x8003;&#x3002; 2.2.1 &#x8BFB;&#x8D1F;&#x8F7D;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x5199;&#x8D1F;&#x8F7D;&#x7C7B;&#x578B;&#x8D1F;&#x8F7D;&#x6709;&#x5F88;&#x591A;&#x79CD;&#xFF0C;&#x4E92;&#x8054;&#x7F51;&#x5178;&#x578B;&#x7684;&#x662F;&#x8BFB;&#x591A;&#x5199;&#x5C11;&#xFF0C;&#x8BFB;&#x591A;&#xFF0C;&#x5BFC;&#x81F4;&#x4E86;&#x7D22;&#x5F15;&#x8BA1;&#x6570;&#x7684;&#x8BDE;&#x751F;b+&#x6811;&#x7C7B;&#x578B;&#x7684;&#x7D22;&#x5F15;&#x7684;innodb&#x5F88;&#x9002;&#x5408;&#x8BFB;&#x591A;&#x5199;&#x5C11;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x8BFB;&#x7684;&#x8D1F;&#x8F7D;&#x66F4;&#x9AD8;&#xFF0C;&#x5982;&#x8BFB;&#x653E;&#x5927;&#x60C5;&#x51B5;&#xFF0C;&#x5149;&#x9760;innodb&#x4E5F;&#x4E0D;&#x884C;&#x8FD9;&#x65F6;&#x5019;&#x9700;&#x8981;redis&#x505A;&#x7F13;&#x5B58;&#x3002; &#x4F46;&#x662F;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x822C;&#x9700;&#x8981;&#x4EE3;&#x7801;&#x91CC;&#x53CC;&#x5199;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x4F7F;&#x7528;cache aside&#x6A21;&#x5F0F;,&#x662F;&#x6DD8;&#x6C70;&#x7F13;&#x5B58;&#xFF0C;&#x90FD;&#x662F;&#x7B2C;&#x4E09;&#x70B9;&#xFF1A;&#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#x6027;&#x548C;&#x65F6;&#x6548;&#x6027;&#x8003;&#x8651;&#x7684;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x6839;&#x636E;&#x8D1F;&#x8F7D;&#x7279;&#x6027;&#xFF0C;&#x786E;&#x5B9A;&#x9700;&#x4E0D;&#x9700;&#x8981;&#x5F15;&#x5165;&#x7F13;&#x5B58; 2.2.2 &#x51B7;&#x70ED;&#x6570;&#x636E;&#x6709;&#x65F6;&#x5019;&#x9700;&#x8981;&#x8003;&#x8651;&#x70ED;&#x70B9;&#x6570;&#x636E;&#x95EE;&#x9898;&#xFF0C;&#x6BD4;&#x5982;&#x5927;v&#x53D1;&#x6587;&#xFF0C;&#x8BC4;&#x8BBA;&#x70B9;&#x8D5E;&#x4F1A;&#x6BD4;&#x666E;&#x901A;&#x4EBA;&#x66F4;&#x591A;&#xFF0C;&#x6BD4;&#x5982;&#x65B0;&#x65E7;&#x6570;&#x636E;&#xFF0C;&#x65B0;&#x7684;feed&#x88AB;&#x8BBF;&#x95EE;&#x6982;&#x7387;&#x5927;&#x4E8E;&#x65E7;&#x7684;feed&#x8FD9;&#x4E9B;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5206;&#x8868;&#x65B9;&#x5F0F;&#xFF0C;kafka &#x5206;&#x533A;&#x6570;&#x636E;&#x7B49;&#x3002; 2.2.3 &#x6570;&#x636E;&#x91CF;&#x51B3;&#x5B9A;&#x4E86;&#x5206;&#x8868;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x7F13;&#x5B58;&#x7684;&#x5F00;&#x9500; 2.2.4 &#x7D22;&#x5F15;&#x9009;&#x7528;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#x7684;&#x7D22;&#x5F15;&#x5F80;&#x5F80;&#x4E5F;&#x662F;&#x8D1F;&#x8F7D;&#x51B3;&#x5B9A;&#x7684;&#xFF0C;b+&#x6811;/hash/lsm&#x5168;&#x6587;&#x7D22;&#x5F15;&#x2026; 2.3 &#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#x6027;&#x548C;&#x65F6;&#x6548;&#x6027;&#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#x6027;&#x548C;&#x65F6;&#x6548;&#x6027;&#x5176;&#x5B9E;&#x7B97;&#x662F;CA(CAP)&#x7684;&#x4E00;&#x79CD;&#x9009;&#x53D6;,&#x9700;&#x8981;&#x8FDB;&#x4E00;&#x6B65;&#x8003;&#x8651;&#x5404;&#x4E2A;&#x7528;&#x4F8B;&#x7684;&#x6D41;&#x7A0B;&#x56FE;(&#x65F6;&#x5E8F;&#x56FE;)&#x3002;&#x5728;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x91CC;&#xFF0C;&#x4E0D;&#x53EF;&#x9760;&#x4F53;&#x73B0;&#x5728;&#xFF1A; &#x7F51;&#x7EDC;&#x5EF6;&#x8FDF; &#x8282;&#x70B9;&#x6545;&#x969C; &#x7F51;&#x7EDC;&#x8D85;&#x65F6; &#x5176;&#x4E2D;&#x7F51;&#x7EDC;&#x8D85;&#x65F6;&#x662F;&#x7F51;&#x7EDC;&#x5EF6;&#x8FDF;&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x91CC;&#xFF0C;&#x8BC6;&#x522B;&#x5F02;&#x5E38;&#x901A;&#x5E38;&#x901A;&#x8FC7;&#x8D85;&#x65F6;&#x673A;&#x5236;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x8D85;&#x65F6;&#x673A;&#x5236;&#x7684;&#x7F3A;&#x70B9;&#x5C31;&#x662F;&#x7F51;&#x7EDC;&#x8D85;&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x4F60;&#x4E0D;&#x77E5;&#x9053;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6210;&#x529F;&#x5230;&#x8FBE;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x6240;&#x4EE5;&#x5B83;&#x662F;&#x6700;&#x9EBB;&#x70E6;&#x7684;&#x4E00;&#x79CD;&#x5F02;&#x5E38;&#x3002;&#x56E0;&#x4E3A;&#x79CD;&#x79CD;&#x7684;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9010;&#x6B65;&#x63A8;&#x65AD;&#x7684;&#x65B9;&#x5F0F;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x6B63;&#x786E;&#x7684;&#x6570;&#x636E;&#x7CFB;&#x7EDF;(&#x5982;&#x679C;&#x4E00;&#x4E0B;&#x5B50;&#x5047;&#x8BBE;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x90FD;&#x6210;&#x7ACB;&#xFF0C;&#x5219;&#x8003;&#x8651;&#x7684;&#x5206;&#x652F;&#x592A;&#x591A;&#xFF0C;&#x4E0D;&#x5229;&#x4E8E;&#x601D;&#x8003;)&#x7136;&#x540E;&#x601D;&#x8003;&#x54EA;&#x4E9B;&#x4E00;&#x81F4;&#x6027;&#x662F;&#x9700;&#x8981;&#x5F97;&#x5230;&#x4FDD;&#x8BC1;&#x7684; 2.3.1 &#x6B63;&#x786E;&#x6027;&#x5982;&#x6301;&#x4E45;&#x5316;&#x4FDD;&#x8BC1;&#x987A;&#x5E8F;&#x4FDD;&#x8BC1;&#x5BF9;&#x4E8E;&#x6301;&#x4E45;&#x5316;&#x4E5F;&#x5F88;&#x91CD;&#x8981;&#x6BD4;&#x5982;CDC(change data capture)&#x4E3A;&#x6838;&#x5FC3;&#x7684;&#x6570;&#x636E;&#x603B;&#x7EBF;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F7F;&#x7528;binlog&#x89E3;&#x6790;&#xFF0C;&#x5BFC;&#x5165;kafka&#xFF0C;&#x6D88;&#x8D39;&#x8005;&#x6D88;&#x8D39;kafka&#x5230;&#x5F02;&#x6784;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x5B9E;&#x73B0;&#x5168;&#x6587;&#x7D22;&#x5F15;/&#x63A8;&#x8350;&#x7B49;&#x529F;&#x80FD;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x6D88;&#x606F;&#x7684;&#x987A;&#x5E8F;&#x5C31;&#x663E;&#x5F97;&#x5F88;&#x91CD;&#x8981;&#x987A;&#x5E8F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;id&#x53D1;&#x53F7;&#x5668;&#x6765;&#x4FDD;&#x8BC1;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5170;&#x4F2F;&#x7279;&#x65F6;&#x95F4;&#x5E8F;&#x5C31;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x4E2A;&#x7ED3;&#x8BBA; 2.3.2 &#x65F6;&#x6548;&#x6027;&#x53EA;&#x6709;&#x5F3A;&#x4E00;&#x81F4;&#x6027;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x5B9E;&#x65F6;&#x751F;&#x6548;&#xFF0C;&#x5728;&#x5F02;&#x6784;&#x7CFB;&#x7EDF;&#x91CC;&#xFF0C;&#x65F6;&#x6548;&#x6027;&#x7684;&#x4FDD;&#x8BC1;&#x9700;&#x8981;&#x727A;&#x7272;&#x6027;&#x80FD;&#x3002;&#x800C;&#x4E14;&#x5927;&#x90E8;&#x5206;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x8FD9;&#x4E48;&#x5F3A;&#x7684;&#x65F6;&#x6548;&#x6027;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x505A;&#x6743;&#x8861;&#x4E86;&#x3002; &#x4E09;.&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#x5E38;&#x89C1;&#x7684;&#x793E;&#x4EA4;&#x573A;&#x666F;&#x4E2D;&#x7684;&#x70B9;&#x8D5E;&#x529F;&#x80FD;&#x843D;&#x5730; &#x56DB;.&#x603B;&#x7ED3;&#x65E0;&#x8BBA;&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#xFF0C;&#x8FD8;&#x662F;&#x5176;&#x4ED6;&#x67B6;&#x6784;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x90FD;&#x662F;&#x4E00;&#x79CD;&#x6743;&#x8861;&#x7684;&#x827A;&#x672F;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x9762;&#x4E34;&#x7684;&#x5F88;&#x591A;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x5728;&#x53E4;&#x8001;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x65E9;&#x5C31;&#x6709;&#x4E86;&#x7C7B;&#x4F3C;&#x7684;&#x573A;&#x666F;&#x3002;","categories":[],"tags":[{"name":"分布式","slug":"分布式","permalink":"http://lqczzz.github.io/tags/分布式/"},{"name":"架构设计","slug":"架构设计","permalink":"http://lqczzz.github.io/tags/架构设计/"}]},{"title":"动手写一个数据库(开篇)","slug":"树,文件系统和数据库","date":"2019-08-27T03:04:32.000Z","updated":"2019-11-21T02:59:32.246Z","comments":true,"path":"2019/08/27/树,文件系统和数据库/","link":"","permalink":"http://lqczzz.github.io/2019/08/27/树,文件系统和数据库/","excerpt":"","text":"&#x6700;&#x8FD1;&#x6253;&#x7B97;&#x901A;&#x8FC7;&#x624B;&#x5199;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6765;&#x8FBE;&#x5230;&#x638C;&#x63E1;&#x6570;&#x636E;&#x5E93;&#x7684;&#x539F;&#x7406;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x4EE5;&#x6B64;&#x4E3A;&#x8109;&#x7EDC;&#xFF0C;&#x628A;&#x6570;&#x636E;&#x5E93;&#x8BBE;&#x8BA1;&#x6D89;&#x53CA;&#x7684;&#x4E00;&#x4E9B;&#x77E5;&#x8BC6;&#x5F62;&#x6210;&#x8109;&#x7EDC;&#xFF0C;&#x53E6;&#x5916;&#x8FD8;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;&#x8584;&#x5F31;&#x7684;&#x77E5;&#x8BC6;&#x5757;&#x8FDB;&#x884C;&#x67E5;&#x6F0F;&#x8865;&#x7F3A;&#xFF0C;&#x4ECE;&#x521D;&#x7EA7;&#x5F00;&#x53D1;&#x5230;&#x9AD8;&#x7EA7;&#x5F00;&#x53D1;&#x90A3;&#x4E9B;&#x77ED;&#x677F;&#x90FD;&#x80FD;&#x8865;&#x9F50;&#x3002;&#x4E5F;&#x4E0D;&#x597D;&#x627F;&#x8BFA;&#x4E00;&#x5468;&#x80FD;&#x62FF;&#x51FA;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#x53BB;&#x505A;&#x8FD9;&#x4E2A;&#x4E8B;&#x60C5;&#xFF0C;&#x6BD5;&#x7ADF;&#x8EAB;&#x540E;&#x5DF2;&#x6EE1;&#x662F;&#x65D7;&#x5E1C;&#xFF08;flag&#xFF09;&#x3002;&#x4E00;&#x6B65;&#x6B65;&#x6765;&#x5427;&#xFF0C;&#x4E07;&#x4E08;&#x9AD8;&#x697C;&#x5E73;&#x5730;&#x8D77;&#x561B;&#x3002; &#x8FD9;&#x7BC7;&#x7B14;&#x8BB0;&#x5C5E;&#x4E8E;&#x77E5;&#x8BC6;&#x8109;&#x7EDC;&#x68B3;&#x7406;&#x7684;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x53EF;&#x4EE5;&#x8BA9;&#x77E5;&#x8BC6;&#x7CFB;&#x7EDF;&#x5316;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x53EF;&#x4EE5;&#x7EC6;&#x5316;&#x4EFB;&#x52A1;&#xFF0C;&#x8BA9;&#x5B66;&#x4E60;&#x7684;&#x76EE;&#x7684;&#x548C;&#x65B9;&#x5411;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x66F4;&#x53EF;&#x63A7;&#x3002; stanford CS346stanford CS346 &#x8BFE;&#x7A0B;&#x4F5C;&#x4E1A;&#x662F;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#xFF0C;&#x5177;&#x4F53;&#x62C6;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x51E0;&#x6B65;&#xFF1A; RM&#xFF08;record manager &#x6570;&#x636E;&#x7BA1;&#x7406;&#xFF09; IX&#xFF08;index system&#xFF09; SM&#xFF08;system manager&#xFF09; QL&#xFF08;sql &#x67E5;&#x8BE2;&#x8BED;&#x8A00;&#x5B9E;&#x73B0;&#xFF09; EX&#xFF08;&#x9009;&#x4E00;&#x4E2A;&#x65B9;&#x5411;&#x7136;&#x540E;&#x5B9E;&#x73B0;&#xFF09; &#x8FD9;&#x7BC7;&#x7B14;&#x8BB0;&#x7B97;&#x662F;&#x5BF9;RM&#x548C;IX&#x7684;&#x629B;&#x7816;&#x5F15;&#x7389;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7684;&#x8BDE;&#x751F;&#x548C;&#x53D1;&#x5C55;&#x9C81;&#x8FC5;&#x8BF4;&#x8FC7;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;&#x8BA1;&#x7B97;&#x548C;&#x5B58;&#x50A8;&#xFF08;&#x9C81;&#x8FC5;&#xFF1A;&#x90A3;&#x662F;&#x5468;&#x6811;&#x4EBA;&#x8BF4;&#x7684;&#x4E0E;&#x6211;&#x4F55;&#x5E72;&#xFF09;&#x3002;&#x7FFB;&#x9605;&#x56FE;&#x7075;&#x5956;&#x7684;&#x5386;&#x53F2;&#xFF0C;&#x81F3;&#x4ECA;&#x6709;&#x56DB;&#x4F4D;&#x56FE;&#x7075;&#x5956;&#x83B7;&#x5F97;&#x8005;&#x56E0;&#x4E3A;&#x5728;&#x6570;&#x636E;&#x5E93;&#x9886;&#x57DF;&#x7684;&#x6770;&#x51FA;&#x8D21;&#x732E;&#x800C;&#x83B7;&#x5956;&#xFF0C;&#x8DB3;&#x4EE5;&#x89C1;&#x5F97;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x8BDE;&#x751F;&#x7684;&#x91CD;&#x8981;&#x610F;&#x4E49;&#x3002; 1956&#x5E74;&#xFF0C;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x8BDE;&#x751F;&#x5C06;&#x8FD1;20&#x5E74;&#x7684;&#x65F6;&#x5019;&#xFF0C;IBM&#x516C;&#x53F8;&#x6210;&#x529F;&#x63A8;&#x51FA;&#x78C1;&#x76D8;&#x5B58;&#x50A8;&#x65B9;&#x6848;&#xFF0C;&#x76F8;&#x8F83;&#x4E8E;&#x5728;&#x90A3;&#x4E4B;&#x95F4;&#x7684;&#x78C1;&#x5E26;&#x6280;&#x672F;&#xFF0C;&#x78C1;&#x76D8;&#x652F;&#x6301;&#x968F;&#x673A;&#x8BFB;&#x53D6;&#xFF0C;&#x5BB9;&#x91CF;&#x5927;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x5F00;&#x59CB;&#x9010;&#x6E10;&#x6D3B;&#x8DC3;&#x5728;&#x6570;&#x636E;&#x5904;&#x7406;&#x9886;&#x57DF;&#x3002;&#x6700;&#x5F00;&#x59CB;&#xFF0C;&#x6570;&#x636E;&#x5904;&#x7406;&#x8F6F;&#x4EF6;&#x53EA;&#x6709;&#x6587;&#x4EF6;&#x7BA1;&#x7406;&#xFF0C;&#x540E;&#x6765;&#x51FA;&#x73B0;&#x4E86;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F46;&#x662F;&#x78C1;&#x76D8;&#x7684;&#x6570;&#x636E;&#x5197;&#x4F59;&#x95EE;&#x9898;&#x975E;&#x5E38;&#x4E25;&#x91CD;&#xFF0C;&#x636E;&#x8BF4;&#x963F;&#x6CE2;&#x7F57;&#x767B;&#x6708;&#x8BA1;&#x5212;&#x7528;&#x7684;&#x78C1;&#x76D8;&#x6709;60%&#x4EE5;&#x4E0A;&#x662F;&#x5197;&#x4F59;&#x6570;&#x636E;&#xFF0C;&#x540E;&#x6765;&#xFF0C;&#x4E00;&#x4E2A;&#x8001;&#x5BB6;&#x4F19;&#x5012;&#x817E;&#x51FA;&#x4E86;&#x7F51;&#x72B6;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E76;&#x4E14;&#x4E8E;1971&#x5E74;&#x63A8;&#x52A8;CODASYL&#x63D0;&#x51FA;&#x4E86;DTBG&#x6A21;&#x578B;&#xFF0C;&#x76F4;&#x63A5;&#x5F71;&#x54CD;&#x4E86;&#x540E;&#x7EED;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6280;&#x672F;&#xFF0C;&#x540C;&#x5E74;&#xFF0C;unix&#x7684;&#x7F14;&#x9020;&#x8005;&#x4EEC;&#x5F00;&#x59CB;&#x64B8;unix-kernal&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8BDE;&#x751F;&#x5B8C;&#x5168;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x662F;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#x7684;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x6700;&#x521D;&#x7684;&#x8BDE;&#x751F;&#x5B8C;&#x5168;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x78C1;&#x76D8;&#x6570;&#x636E;&#x5197;&#x4F59;&#x7684;&#x95EE;&#x9898;&#xFF01;&#xFF01;&#x6240;&#x4EE5;wangyin&#x5728;&#x5173;&#x7CFB;&#x5F0F;&#x6A21;&#x578B;&#x7684;&#x5B9E;&#x8D28;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x548C;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x7684;&#x5410;&#x69FD;&#x663E;&#x5F97;&#x7AD9;&#x4E0D;&#x4F4F;&#x811A;&#xFF0C;&#x5F53;&#x7136;&#x4E0D;&#x662F;&#x8BF4;&#x4ED6;&#x8BF4;&#x7684;&#x4E1C;&#x897F;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4ED6;&#x8BF4;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x8868;&#x73B0;&#x529B;&#x4E0D;&#x5982;&#x57FA;&#x7840;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8BF4;&#x67E5;&#x8BE2;&#x8BED;&#x8A00;&#xFF0C;sql&#xFF0C;cyber&#x4E4B;&#x7C7B;&#x7684;&#x4E0D;&#x5982;&#x666E;&#x901A;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x8FD9;&#x5F53;&#x7136;&#x662F;&#x5728;&#x626F;&#x6DE1;&#x4E86;&#x3002; &#x5173;&#x7CFB;&#x6A21;&#x578B;&#x53EA;&#x80FD;&#x7B49;&#x4EF7;&#x4E8E;&#x522B;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x53BB;&#x6A21;&#x62DF;1:1/1:m/n:m&#x5173;&#x7CFB;&#x90FD;&#x662F;ojbk&#x7684;&#x3002; sql&#xFF0C;cypher&#x4E4B;&#x7C7B;&#x7684;&#x8BED;&#x8A00;&#x672C;&#x8EAB;&#x662F;&#x56FE;&#x7075;&#x4E0D;&#x5B8C;&#x5907;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x662F;&#x56FE;&#x7075;&#x5B8C;&#x5907;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x8868;&#x73B0;&#x529B;&#x4E0D;&#x8DB3;&#x4E0D;&#x662F;&#x677F;&#x4E0A;&#x9489;&#x9489;&#x7684;&#x5417;&#xFF1F; &#x7528;&#x4ECA;&#x5929;&#x7684;&#x89C2;&#x70B9;&#x53BB;&#x770B;&#x5F85;&#x5386;&#x53F2;&#xFF0C;&#x6279;&#x8BC4;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#xFF0C;&#x4F55;&#x4E0D;&#x98DF;&#x8089;&#x7CDC;&#xFF1F; &#x6570;&#x636E;&#x5E93;&#x548C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;CS346&#x5728;RM&#x4E00;&#x8282;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x4E86; 12345678910111213class PF_Manager{ public: PF_Manager (); // Constructor ~PF_Manager (); // Destructor RC CreateFile (const char *fileName); // Create a new file RC DestroyFile (const char *fileName); // Destroy a file RC OpenFile (const char *fileName, PF_FileHandle &amp;fileHandle); // Open a file RC CloseFile (PF_FileHandle &amp;fileHandle); // Close a file RC AllocateBlock (char *&amp;buffer); // Allocate a new scratch page in buffer RC DisposeBlock (char *buffer); // Dispose of a scratch page}; &#x6570;&#x636E;&#x5E93;&#x548C;&#x6811;&#x53C2;&#x8003;&#x8D44;&#x6599;&#xFF1A; &#x300A;&#x56FE;&#x7075;&#x548C;ACM&#x56FE;&#x7075;&#x5956;&#x300B;","categories":[],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://lqczzz.github.io/tags/数据库/"}]},{"title":"一个入行两年的菜鸟程序员的思考","slug":"一个入行两年的菜鸟程序员的思考 ","date":"2019-08-16T17:45:32.000Z","updated":"2019-08-17T02:37:03.000Z","comments":true,"path":"2019/08/17/一个入行两年的菜鸟程序员的思考 /","link":"","permalink":"http://lqczzz.github.io/2019/08/17/一个入行两年的菜鸟程序员的思考 /","excerpt":"","text":"&#x524D;&#x9762;&#x7684;&#x8BDD;&#x4ECE;6&#x6708;&#x5230;8&#x6708;&#xFF0C;feed&#x7740;&#x624B;timeline&#x7684;&#x4F18;&#x5316;&#x548C;&#x65B0;&#x9700;&#x6C42;&#x5F00;&#x53D1;&#x3002;&#x4ECE;&#x5F00;&#x59CB;&#x7684;&#x8F7B;&#x677E;&#x4ECE;&#x5BB9;&#xFF0C;&#x5230;&#x540E;&#x6765;&#x7684;&#x9010;&#x6E10;&#x5931;&#x63A7;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x4E00;&#x4E2A;&#x4EFF;&#x9020;&#x7684;&#x201C;&#x4EBA;&#x6708;&#x795E;&#x8BDD;&#x201D;&#x6084;&#x6084;&#x6765;&#x5230;&#x4E86;&#x6211;&#x7684;&#x8EAB;&#x8FB9;&#x3002;&#x5176;&#x4E2D;&#x6709;&#x5F88;&#x591A;&#x503C;&#x5F97;&#x53CD;&#x601D;&#x548C;&#x603B;&#x7ED3;&#x7684;&#x5730;&#x65B9;&#x3002;&#x5E0C;&#x671B;&#x8D81;&#x73B0;&#x5728;&#x5904;&#x4E8E;&#x7F9E;&#x803B;&#xFF0C;&#x81EA;&#x8D23;&#x548C;&#x7126;&#x8651;&#x4E2D;&#xFF0C;&#x601D;&#x8003;&#x548C;&#x603B;&#x7ED3;&#x70B9;&#x4E1C;&#x897F;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x5E0C;&#x671B;&#x80FD;&#x591F;&#x603B;&#x7ED3;&#x51FA;&#x4E00;&#x4E9B;&#x81EA;&#x5DF1;&#x53D7;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x89C4;&#x5219;&#x548C;&#x6559;&#x8BAD;&#xFF0C;&#x5BF9;&#x4EE5;&#x540E;&#x6210;&#x957F;&#x66F4;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x5E0C;&#x671B;&#x80FD;&#x501F;&#x6B64;&#x900F;&#x8FC7;&#x73B0;&#x8C61;&#x770B;&#x672C;&#x8D28;&#xFF0C;&#x7A7F;&#x8D8A;&#x6D41;&#x4E8E;&#x8868;&#x9762;&#x7684;&#x60C5;&#x7EEA;&#x770B;&#x5230;&#x95EE;&#x9898;&#x7684;&#x672C;&#x8D28;&#xFF0C;&#x771F;&#x6B63;&#x7684;&#x83B7;&#x5F97;&#x6210;&#x957F;&#x3002; &#x9700;&#x6C42;&#x4E4B;&#x5751;&#x5728;&#x505A;feed&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4E5F;&#x66FE;&#x7ECF;&#x88AB;&#x9700;&#x6C42;&#x5F04;&#x7684;&#x5F88;&#x5934;&#x75BC;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x65F6;&#x81EA;&#x5DF1;&#x5E76;&#x6CA1;&#x6709;&#x5F88;&#x91CD;&#x89C6;&#xFF0C;&#x800C;&#x662F;&#x5355;&#x7EAF;&#x7684;&#x5F52;&#x56E0;&#x5230;&#x56E2;&#x961F;&#x91CC;&#x53BB;&#x3002;&#x5728;&#x534E;&#x4E3A;&#x6B63;&#x5F0F;&#x5DE5;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x9884;&#x7814;&#x90E8;&#x95E8;&#xFF0C;&#x9879;&#x76EE;&#x6D41;&#x7A0B;&#x4E0D;&#x662F;&#x5F88;&#x89C4;&#x8303;&#xFF0C;&#x76F4;&#x63A5;leader&#x662F;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x548C;&#x4EBA;&#x5458;&#x7BA1;&#x7406;&#x7684;&#xFF0C;&#x9700;&#x6C42;&#x662F;&#x7531;&#x53E6;&#x4E00;&#x4E2A;&#x9886;&#x5BFC;&#x76F4;&#x63A5;&#x63D0;&#x7684;&#x3002; &#x9700;&#x6C42;&#x4E0D;&#x662F;&#x67B6;&#x6784;&#xFF0C;&#x9700;&#x6C42;&#x4E0D;&#x662F;&#x8BBE;&#x8BA1;&#x4E5F;&#x4E0D;&#x662F;&#x7528;&#x6237;&#x754C;&#x9762;&#xFF0C;&#x9700;&#x6C42;&#x662F;&#x9700;&#x8981; &#x2014;&#x2014; &#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;&#x300B; &#x5728;&#x534E;&#x4E3A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x53EA;&#x662F;&#x7528;&#x6237;(leader)&#x7684;&#x6A21;&#x7CCA;&#x7684;&#x9700;&#x8981;&#x3002;&#x8FD9;&#x79CD;&#x9700;&#x8981;&#x6CA1;&#x6709;&#x5F62;&#x6210;&#x9700;&#x6C42;&#x6587;&#x6863;&#xFF0C;&#x4EA7;&#x54C1;&#x8BBE;&#x8BA1;&#x6587;&#x6863;&#xFF0C;&#x6CA1;&#x6709;ui&#x53BB;&#x63CF;&#x7ED8;&#x7528;&#x6237;&#x754C;&#x9762;&#x3002;&#x8FD8;&#x662F;&#x521D;&#x5165;&#x804C;&#x573A;&#x7684;&#x83DC;&#x9E1F;&#x7684;&#x6211;&#x90A3;&#x65F6;&#x5019;&#x4E5F;&#x4E0D;&#x61C2;&#x5F97;&#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;&#x300B;&#x91CC;&#x9762;&#x7684;&#x771F;&#x77E5;&#x707C;&#x89C1;&#xFF0C;&#x5355;&#x7EAF;&#x7684;&#x5F52;&#x56E0;&#x4E3A;&#x56E2;&#x961F;&#x7684;&#x4E0D;&#x89C4;&#x8303;&#xFF0C;&#x5374;&#x53C8;&#x8BF4;&#x4E0D;&#x51FA;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x7684;&#x4E0D;&#x89C4;&#x8303;&#xFF0C;&#x5F52;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x6280;&#x672F;&#x6C34;&#x5E73;&#x4F46;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x5BFC;&#x81F4;&#x9879;&#x76EE;&#x5931;&#x8D25;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6280;&#x672F;&#x6C34;&#x5E73;&#x53EA;&#x5360;&#x4E86;&#x4E0D;&#x5230;1%&#x3002; &#x6765;&#x5230;shopee&#xFF0C;leader&#x662F;&#x5728;&#x5FAE;&#x4FE1;&#x548C;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x6597;&#x667A;&#x6597;&#x52C7;&#x591A;&#x5E74;&#x7684;&#x8001;&#x53F8;&#x673A;&#xFF0C;&#x4ED6;&#x7528;&#x4ED6;&#x7684;&#x7ECF;&#x9A8C;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#xFF0C;&#x5F00;&#x53D1;&#x8981;&#x7AD9;&#x5728;&#x7528;&#x6237;&#x7684;&#x89D2;&#x5EA6;&#x601D;&#x8003;&#x95EE;&#x9898;&#xFF0C;&#x8981;&#x8BC4;&#x4F30;&#x9700;&#x6C42;&#x7684;&#x5408;&#x7406;&#x6027;.&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x8FD9;&#x8FB9;&#x7684;&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x4E5F;&#x663E;&#x5F97;&#x66F4;&#x52A0;&#x6B63;&#x89C4;&#x9760;&#x8C31;&#xFF0C;&#x6BD5;&#x7ADF;&#x662F;&#x963F;&#x91CC;&#x5934;&#x6761;&#x6316;&#x8FC7;&#x6765;&#x7684;&#x3002; &#x4E0E;&#x7528;&#x6237;&#x4E00;&#x540C;&#x5DE5;&#x4F5C;&#xFF0C;&#x4EE5;&#x50CF;&#x7528;&#x6237;&#x4E00;&#x6837;&#x601D;&#x8003; &#x2014;&#x2014; &#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;&#x300B; &#x6B63;&#x662F;&#x8FD9;&#x4E9B;&#xFF0C;&#x5BFC;&#x81F4;&#x6211;&#x518D;&#x4E00;&#x6B21;&#x5FFD;&#x7565;&#x4E86;&#x5BF9;&#x9700;&#x6C42;&#x7684;&#x601D;&#x8003;&#x3002;&#x4E5F;&#x8BB8;&#x6211;&#x7528;leader&#x90A3;&#x62FE;&#x4EBA;&#x7259;&#x6167;&#x7684;&#x5B66;&#x4E60;&#x5230;&#x4E86;&#x4E00;&#x70B9;&#x9700;&#x6C42;&#x7684;&#x7ECF;&#x9A8C;&#x3002;&#x4F46;&#x662F;&#x5E76;&#x6CA1;&#x6709;&#x5F62;&#x6210;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x5957;&#x65B9;&#x6CD5;&#x3002; &#x5148;&#x629B;&#x51FA;&#x6211;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5F00;&#x53D1;&#x8005;&#x5BF9;&#x9700;&#x6C42;&#x8BC4;&#x4F30;&#x7684;&#x5DE5;&#x4F5C;&#x6D41;&#x603B;&#x7ED3;&#xFF1A; &#x4E0D;&#x8981;&#x641C;&#x96C6;&#x9700;&#x6C42;&#xFF0C;&#x8981;&#x6316;&#x6398;&#x9700;&#x6C42;&#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;&#x300B;&#x91CC;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;&#x201D;&#x53EA;&#x6709;&#x5458;&#x5DE5;&#x7684;&#x4E0A;&#x7EA7;&#x548C;&#x4EBA;&#x4E8B;&#x90E8;&#x4EEC;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x5458;&#x5DE5;&#x7684;&#x6863;&#x6848;&#x201D;&#x662F;&#x9700;&#x6C42;&#x5417;&#x3002;&#x8F6C;&#x6362;&#x4E00;&#x4E0B;&#xFF1A;&#x53EA;&#x6709;&#x83B7;&#x5F97;&#x6388;&#x6743;&#x7684;&#x7528;&#x6237;&#x624D;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5458;&#x5DE5;&#x6863;&#x6848;&#x3002;&#x4E24;&#x79CD;&#x9648;&#x8FF0;&#x5BF9;&#x4E8E;&#x5B9E;&#x73B0;&#x6765;&#x8BF4;&#x662F;&#x622A;&#x7136;&#x4E0D;&#x540C;&#x7684;&#x3002; &#x8FD9;&#x4E00;&#x70B9;&#x901A;&#x5E38;&#x4E3B;&#x8981;&#x662F;&#x4EA7;&#x54C1;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x5F00;&#x53D1;&#x4ECE;&#x4EA7;&#x54C1;&#x548C;&#x7528;&#x6237;&#x89D2;&#x5EA6;&#x53BB;&#x601D;&#x8003;&#x9700;&#x6C42;&#x4EA7;&#x751F;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x5F80;&#x5F80;&#x66F4;&#x80FD;&#x628A;&#x63A7;&#x5B9E;&#x73B0;&#x8FD9;&#x4EF6;&#x4E8B;&#x60C5;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x5178;&#x578B;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E00;&#x6B21;&#x5F00;&#x653E;&#x7528;&#x6237;&#x767D;&#x540D;&#x5355;&#x7ED9;&#x975E;kol&#x7684;&#x5546;&#x5BB6;&#x7684;&#x9700;&#x6C42;&#xFF0C;PM&#x63D0;&#x51FA;&#x6765;&#x4E4B;&#x540E;&#x6211;&#x9A6C;&#x4E0A;&#x5C31;&#x601D;&#x8003;&#x73B0;&#x6709;&#x7684;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x6CA1;&#x6709;&#x5148;&#x5206;&#x6790;&#x9700;&#x6C42;&#x63D0;&#x51FA;&#x6765;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x601D;&#x8003;&#x7684;&#x4E0D;&#x591F;&#x8BA4;&#x771F;&#xFF0C;&#x53EA;&#x662F;&#x6D41;&#x4E8E;&#x8868;&#x9762;&#x7684;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E2A;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x7D27;&#x6025;&#x652F;&#x6301;local&#x7684;99&#x4FC3;&#x9500;&#x6D3B;&#x52A8;&#x3002;&#x5982;&#x679C;&#x6211;&#x518D;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x601D;&#x8003;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x53BB;&#x601D;&#x8003;&#x4E3A;&#x4EC0;&#x4E48;&#x73B0;&#x6709;&#x7684;&#x7CFB;&#x7EDF;&#x4E0D;&#x80FD;&#x505A;&#xFF0C;&#x600E;&#x4E48;&#x505A;&#x66F4;&#x4F73;&#x5408;&#x7406;&#x3002;&#x6700;&#x7EC8;&#x5BFC;&#x81F4;&#x81EA;&#x5DF1;&#x52A0;&#x73ED;&#x52A0;&#x70B9;&#x7684;&#x53BB;&#x505A;&#x9700;&#x6C42;&#x3002; &#x9700;&#x6C42;&#x6587;&#x6863;&#x7684;&#x5751;&#x540C;&#x4E0A;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E5F;&#x4E3B;&#x8981;&#x662F;PM&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x6C42;&#x6587;&#x6863;&#x662F;PM&#x548C;&#x5F00;&#x53D1;&#x7684;&#x63A5;&#x53E3;&#x6587;&#x6863;&#xFF0C;&#x5BF9;&#x4E8E;&#x5F00;&#x53D1;&#x6765;&#x8BF4;&#xFF0C;&#x5206;&#x6790;&#x9700;&#x6C42;&#x6587;&#x6863;&#xFF0C;&#x5EFA;&#x7ACB;&#x7528;&#x4F8B;&#x56FE;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x6C9F;&#x901A;&#x548C;PM&#x6F84;&#x6E05;&#x9700;&#x6C42;&#xFF0C;&#x662F;&#x5F00;&#x53D1;&#x524D;&#x671F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x4E2A;&#x9636;&#x6BB5;&#x3002; &#x5728;&#x6211;&#x4EEC;&#x7684;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x9700;&#x6C42;&#x6587;&#x6863;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; &#x9700;&#x6C42;&#x6587;&#x6863;&#x53D8;&#x66F4;&#xFF0C;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x62B1;&#x6028;&#x9700;&#x6C42;&#x6587;&#x6863;&#x53D8;&#x5316;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x662F;&#x9700;&#x6C42;&#x4E0B;&#x6765;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x6BD4;&#x8F83;&#x7D27;&#x6025;&#xFF0C;&#x6587;&#x6863;&#x786E;&#x5B9E;&#x4E0D;&#x591F;&#x8BE6;&#x7EC6;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x8FD9;&#x662F;&#x9700;&#x6C42;&#x6587;&#x6863;&#x672C;&#x6765;&#x7684;&#x201D;&#x539F;&#x7F6A;&#x201D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x6CA1;&#x6709;&#x8BA4;&#x8BC6;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#x800C;&#x5DF2;&#x3002; &#x5236;&#x4F5C;&#x9700;&#x6C42;&#x6587;&#x6863;&#x7684;&#x4E00;&#x5927;&#x5371;&#x9669;&#x662F;&#x592A;&#x8FC7;&#x5177;&#x4F53;&#xFF0C;&#x597D;&#x7684;&#x9700;&#x6C42;&#x6587;&#x6863;&#x4F1A;&#x4FDD;&#x6301;&#x62BD;&#x8C61;&#xFF0C;&#x9700;&#x6C42;&#x6587;&#x6863;&#x80FD;&#x51C6;&#x786E;&#x53CD;&#x6620;&#x5546;&#x4E1A;&#x9700;&#x6C42; &#x2014; &#x300A;&#x7A0B;&#x5E8F;&#x5458;&#x4FEE;&#x70BC;&#x4E4B;&#x9053;&#x300B; &#x5728;multitabs&#x7684;&#x9700;&#x6C42;&#x4E2D;&#xFF0C;&#x6211;&#x627F;&#x8BA4;&#x81EA;&#x5DF1;&#x5BF9;&#x9700;&#x6C42;&#x6587;&#x6863;&#x4E0D;&#x591F;&#x91CD;&#x89C6;&#xFF0C;&#x6CA1;&#x6709;&#x4ED4;&#x7EC6;&#x659F;&#x914C;&#x91CC;&#x9762;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x7F3A;&#x5C11;&#x5728;&#x5199;&#x4EE3;&#x7801;&#x524D;&#x548C;PM&#x7684;&#x4EA4;&#x6D41;&#xFF0C;&#x6F84;&#x6E05;&#x9700;&#x6C42;&#xFF0C;&#x4E3A;&#x4E86;&#x9003;&#x907F;&#x4EA4;&#x6D41;&#x81EA;&#x5DF1;&#x505A;&#x4E86;&#x592A;&#x591A;&#x5047;&#x8BBE;&#x3002;&#x4EA4;&#x6D41;&#x4EA7;&#x751F;&#x7684;&#x7ED3;&#x679C;&#x4E5F;&#x6CA1;&#x6709;&#x51C6;&#x786E;&#x5199;&#x5165;&#x5230;PRD&#x6216;&#x8005;&#x81EA;&#x5DF1;&#x7684;&#x9700;&#x6C42;&#x89C4;&#x7EA6;&#x6C47;&#x4E2D;&#x3002;&#x8FD9;&#x662F;&#x81EA;&#x5DF1;&#x7ED9;&#x81EA;&#x5DF1;&#x57CB;&#x4E0B;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5751;&#x3002; ### &#x8FDB;&#x5EA6;&#x7BA1;&#x7406;&#x4EBA;&#x6708;&#x795E;&#x8BDD;&#x5728;&#x201D;&#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5;&#x201D;&#x4E00;&#x8282;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x8F6F;&#x4EF6;&#x4EFB;&#x52A1;&#x8FDB;&#x5EA6;&#x5B89;&#x6392;&#x7684;&#x7ECF;&#x9A8C;&#x6CD5;&#x5219;&#xFF1A; 1/3 &#x8BA1;&#x5212; 1/6 &#x7F16;&#x7801; 1/4 &#x6784;&#x5EFA;&#x6D4B;&#x8BD5;&#x548C;&#x65E9;&#x671F;&#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5; 1/4 &#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5;&#xFF0C;&#x6240;&#x6709;&#x6784;&#x4EF6;&#x5B8C;&#x6210; &#x5728;&#x6211;&#x770B;&#x6765;&#xFF0C;&#x8FD9;&#x4E9B;&#x6BD4;&#x4F8B;&#x4E5F;&#x5E76;&#x975E;&#x4E00;&#x6210;&#x4E0D;&#x53D8;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x66F4;&#x591A;&#x7684;&#x4E1C;&#x897F;&#x6211;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x91CD;&#x89C6;&#xFF0C;&#x6216;&#x8005;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x7ECF;&#x9A8C;&#x53BB;&#x601D;&#x8003;&#x51FA;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x5957;&#x9700;&#x6C42;&#x5F00;&#x53D1;&#x8FDB;&#x5EA6;&#x5B89;&#x6392;&#x548C;&#x4EFB;&#x52A1;&#x5DE5;&#x4F5C;&#x91CF;&#x4F30;&#x7B97;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x7ECF;&#x8FC7;&#x4E00;&#x5E74;&#x591A;&#x7684;&#x8E29;&#x5751;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x8BA4;&#x8BC6;&#x5230;&#xFF0C;&#x8FDB;&#x5EA6;&#x7BA1;&#x7406;&#x771F;&#x7684;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;leader&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x4E5F;&#x8BB8;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x7BA1;&#x7406;&#x597D;&#x4E00;&#x90E8;&#x5206;&#x8FDB;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x8FDB;&#x5EA6;&#x7BA1;&#x7406;&#x7684;&#x57FA;&#x672C;&#x65B9;&#x6CD5;&#x8BBA;&#x662F;&#x4E0D;&#x53D8;&#x7684;&#x3002; &#x8BA1;&#x5212;&#x8BA1;&#x5212;&#x8FD9;&#x4E00;&#x9636;&#x6BB5;&#x5E94;&#x8BE5;&#x5728;&#x9700;&#x6C42;&#x8BC4;&#x5BA1;&#x4F1A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x660E;&#x786E;&#x597D;&#x4EE5;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#x3002; &#x4EFB;&#x52A1; &#x8D23;&#x4EFB;&#x4EBA; &#x8FDB;&#x5EA6; &#x63A5;&#x53E3;&#x5B9A;&#x4E49; &#x8BBE;&#x8BA1;&#x548C;&#x7F16;&#x7801;&#x7684;&#x5206;&#x79BB;&#x9996;&#x5148;&#x4E00;&#x70B9;&#x6211;&#x6CA1;&#x6709;&#x6E05;&#x6670;&#x7684;&#x8BA4;&#x8BC6;&#x7684;&#x662F;&#xFF0C;&#x8BA1;&#x5212;&#x548C;&#x7F16;&#x7801;&#x662F;&#x5177;&#x6709;&#x6E05;&#x6670;&#x660E;&#x786E;&#x7684;&#x8FB9;&#x754C;&#x7684;&#x3002;&#x800C;&#x4E14;&#x8BA1;&#x5212;&#x7684;&#x65F6;&#x95F4;&#x4E00;&#x5B9A;&#x6BD4;&#x7F16;&#x7801;&#x957F;&#x3002;&#x5728;feed&#x9879;&#x76EE;&#x4E4B;&#x521D;&#x6216;&#x8005;&#x81F3;&#x4ECA;&#xFF0C;&#x6211;&#x90FD;&#x6CA1;&#x6709;&#x5F88;&#x597D;&#x7684;&#x5E73;&#x8861;&#x8FD9;&#x4E24;&#x70B9;&#x3002;&#x7CFB;&#x7EDF;&#x65F6;&#x5E8F;&#x56FE;&#x5BF9;&#x4E8E;&#x601D;&#x8003;&#x7F16;&#x7801;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E1A;&#x52A1;&#x6D41;&#x7A0B;&#x662F;&#x5F88;&#x597D;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x5F53;&#x4F5C;&#x8BBE;&#x8BA1;&#x9636;&#x6BB5;&#x7684;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x5F62;&#x5F0F;&#x5316;&#x5DE5;&#x5177;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;vscode&#x4E4B;&#x4E8E;&#x7F16;&#x7801;&#xFF0C;&#x7CFB;&#x7EDF;&#x65F6;&#x5E8F;&#x56FE;&#x5C31;&#x662F;&#x8BBE;&#x8BA1;&#x9636;&#x6BB5;&#x7684;&#x5DE5;&#x4F5C;&#x3002; &#x8BBE;&#x8BA1;&#x5DE5;&#x4F5C;&#x91CF;&#x6C38;&#x8FDC;&#x5927;&#x4E8E;&#x7F16;&#x7801;&#xFF0C;&#x9664;&#x975E;&#x662F;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x5F88;&#x6E05;&#x6670;&#xFF0C;&#x5B9E;&#x73B0;&#x5F88;&#x6E05;&#x6670;&#xFF0C;&#x4EE3;&#x7801;&#x91CF;&#x4E0D;&#x8DB3;50&#x884C;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x5426;&#x5219;&#x6211;&#x90FD;&#x5E94;&#x8BE5;&#x5728;&#x7F16;&#x7801;&#x4E4B;&#x524D;&#xFF0C;&#x5728;&#x8349;&#x7A3F;&#x7EB8;&#x4E0A;&#xFF0C;&#x753B;&#x51FA;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x8BBE;&#x8BA1;&#x3002;&#x66F4;&#x52A0;&#x590D;&#x6742;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x5C31;&#x8981;&#x501F;&#x52A9;startuml&#x5DE5;&#x5177;(puml)&#x6765;&#x5B8C;&#x6210;&#x4E86;&#x3002; &#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x7BA1;&#x7406;&#x4E00;&#x4E2A;0.5&#x5929;&#x5DE5;&#x4F5C;&#x91CF;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x5F80;&#x5F80;&#x5177;&#x6709;&#x7684;&#x7279;&#x70B9;&#x662F;&#xFF1A; &#x4E0D;&#x5B58;&#x5728;&#x5916;&#x90E8;&#x4F9D;&#x8D56; &#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x91CF;&#x5C11;&#x4E8E;50&#x884C; &#x5B58;&#x5728;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5373;&#x4F7F;&#x6761;&#x4EF6;2&#x6EE1;&#x8DB3;&#x4E86;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x4E50;&#x89C2;&#x7684;&#x8BA4;&#x4E3A;&#x5DE5;&#x4F5C;&#x91CF;&#x53EA;&#x6709;0.5&#x5929;&#x5B8C;&#x4E8B;&#xFF0C;&#x300A;&#x4EBA;&#x6708;&#x795E;&#x8BDD;&#x300B;&#x91CC;&#xFF0C;&#x5BF9;&#x4E8E;&#x804C;&#x4E1A;&#x7684;&#x82E6;&#x607C;&#xFF0C;&#x6709;&#x4E00;&#x70B9;&#x6B63;&#x662F;&#x8BF4;&#x7684;&#x2014;&#x2014; &#x201C;&#x82E6;&#x607C;&#x6765;&#x81EA;&#x7531;&#x4ED6;&#x4EBA;&#x8BBE;&#x5B9A;&#x76EE;&#x6807;&#xFF0C;&#x4F9B;&#x7ED9;&#x8D44;&#x6E90;&#x548C;&#x63D0;&#x4F9B;&#x4FE1;&#x606F;&#x201D; &#x63A8;&#x8350;&#x56E2;&#x961F;&#x662F;&#x6211;&#x89C1;&#x8FC7;&#x7684;&#x6700;&#x6076;&#x52A3;&#x7684;&#x5408;&#x4F5C;&#x56E2;&#x961F;&#xFF0C;&#x4E0D;&#x4EC5;&#x4EC5;&#x65E0;&#x9650;&#x5EF6;&#x671F;&#x5BF9;&#x63A5;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x7ED9;&#x51FA;&#x7684;&#x63A5;&#x53E3;&#x7ADF;&#x7136;&#x80FD;&#x4E0D;&#x6309;&#x7167;&#x7A7F;&#x8FDB;&#x53BB;&#x7684;&#x5206;&#x9875;&#x53C2;&#x6570;&#x53BB;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x4E5F;&#x8BA9;&#x6211;&#x8BA4;&#x8BC6;&#x5230;&#xFF0C;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x6C38;&#x8FDC;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#x3002; &#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x56E2;&#x961F;&#xFF0C;&#x5185;&#x90E8;&#x7684;&#x4F9D;&#x8D56;&#x5F80;&#x5F80;&#x4E5F;&#x4E0D;&#x53EF;&#x9760;&#xFF0C;&#x6BD4;&#x5982;&#x4F60;&#x6C38;&#x8FDC;&#x4E0D;&#x6E05;&#x695A;&#xFF0C;&#x4E00;&#x4E2A;&#x522B;&#x4EBA;&#x5B9A;&#x4E49;&#x7684;delexxx&#x65B9;&#x6CD5;&#xFF0C;&#x7A76;&#x7ADF;&#x5728;&#x5B9E;&#x73B0;&#x91CC;&#x9762;&#x4F1A;&#x4E0D;&#x4F1A;&#x5E26;&#x6709;&#x526F;&#x4F5C;&#x7528;&#x3002; &#x5728;&#x6709;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5DE5;&#x4F5C;&#x91CF;&#x90FD;&#x9700;&#x8981;&#x6309;&#x7167;1&#x5929;&#x8D77;&#x4F30;&#x7B97;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#xFF0C;&#x5BF9;&#x4E8E;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#xFF0C;&#x9700;&#x8981;&#x6709;&#x5145;&#x8DB3;&#x7684;&#x7CFB;&#x7EDF;&#x6D4B;&#x8BD5;&#x65F6;&#x95F4;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#x5B9E;&#x73B0;&#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x65F6;&#x95F4;&#x5927;&#x4E8E;&#x4E24;&#x5929;&#xFF0C;&#x5F80;&#x5F80;&#x9700;&#x8981;&#x518D;&#x7EC6;&#x5206;&#x5230;&#x66F4;&#x5C0F;&#x7684;&#x7C92;&#x5EA6;&#xFF0C;&#x4E0D;&#x7136;&#x5F88;&#x5BB9;&#x6613;&#x5BFC;&#x81F4;&#x5931;&#x63A7;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x9047;&#x5230;&#x56F0;&#x96BE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6CA1;&#x529E;&#x6CD5;&#x8BA9;&#x522B;&#x4EBA;&#x66F4;&#x597D;&#x7684;&#x53C2;&#x4E0E;&#x8FDB;&#x6765;&#x4E00;&#x8D77;&#x89E3;&#x51B3;&#x3002; &#x8BBE;&#x8BA1;&#x4E4B;&#x5751;&#x521D;&#x7EA7;&#x8BBE;&#x8BA1;&#x4E4B;&#x5751;&#x7528;&#x534E;&#x4E3A;&#x7684;&#x7B49;&#x7EA7;&#x6765;&#x770B;&#xFF0C;&#x80FD;&#x4E0D;&#x80FD;&#x638C;&#x63E1;&#x907F;&#x5F00;&#x521D;&#x7EA7;&#x8BBE;&#x8BA1;&#x4E4B;&#x5751;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;13&#x7EA7;&#x548C;14&#x7EA7;&#x7684;&#x533A;&#x522B;&#x3002;13&#x7EA7;&#x57FA;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x8BBE;&#x8BA1;&#xFF0C;&#x6309;&#x7167;&#x65E2;&#x5B9A;&#x7684;&#x89C4;&#x8303;&#x6765;&#x505A;&#x5C31;&#x597D;&#xFF0C;14&#x7EA7;&#x5F00;&#x59CB;&#x8981;&#x505A;&#x521D;&#x7EA7;&#x8BBE;&#x8BA1;&#xFF0C;&#x63A5;&#x53E3;&#x6587;&#x6863;&#xFF0C;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x4E4B;&#x7C7B;&#x7684;&#x3002;&#x4E0D;&#x518D;&#x57CB;&#x5934;&#x7F16;&#x7801;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x51C6;&#x5907;&#x5165;&#x884C;&#x7684;&#x83DC;&#x9E1F;&#x548C;&#x5DF2;&#x5165;&#x884C;&#x7684;&#x5F31;&#x9E21;&#x7684;&#x533A;&#x522B;&#x3002; &#x8BBE;&#x8BA1;&#x9636;&#x6BB5;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5751;&#xFF1A; &#x4E0D;&#x77E5;&#x9053;&#x6293;&#x91CD;&#x70B9; &#x4E0D;&#x77E5;&#x9053;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x5DE5;&#x5177;&#xFF0F;&#x6D41;&#x7A0B;&#x56FE;&#x8868;&#x8FBE; &#x7B2C;1&#x70B9;&#x5728;&#x53BB;&#x5E74;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4E5F;&#x6CA1;&#x6709;&#x6E05;&#x6670;&#x7684;&#x8BA4;&#x8BC6;&#xFF0C;&#x4F46;&#x662F;&#x4ECA;&#x5E74;&#x770B;&#x5B8C;&#x300A;DDIA&#x300B;&#xFF0C;&#x7ED3;&#x5408;&#x4E00;&#x4E9B;&#x5B9E;&#x8DF5;&#x4E0A;&#x7684;&#x601D;&#x8003;&#xFF0C;&#x5F97;&#x51FA;&#x4E00;&#x4E9B;&#x81EA;&#x5DF1;&#x7684;&#x7ECF;&#x9A8C;&#x89C4;&#x5F8B;&#x3002; &#x6BD4;&#x5982;&#x5BF9;&#x4E8E;&#x63A5;&#x53E3;&#xFF0C;&#x6216;&#x8005;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8981;&#x660E;&#x786E;&#x597D;&#x8D1F;&#x8F7D;&#xFF0C;&#x8D1F;&#x8F7D;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x9AD8;&#x5E76;&#x53D1;&#x573A;&#x666F;&#x4E0B;&#x7684;QPS&#x8FD9;&#x4E2A;&#x6307;&#x6807;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;feed&#x5173;&#x6CE8;&#x5173;&#x7CFB;&#x7684;&#x8BFB;&#x5199;&#x6269;&#x6563;&#x5BFC;&#x81F4;&#x7684;&#x8BFB;&#x5199;&#x653E;&#x5927;&#x3002;&#x4E4B;&#x540E;&#x8981;&#x660E;&#x786E;&#x597D;&#x6027;&#x80FD;&#xFF0C;&#x6027;&#x80FD;&#x4E3B;&#x8981;&#x662F;&#x54CD;&#x5E94;&#x65F6;&#x95F4;&#x7B49;&#x4E00;&#x4E9B;&#x6211;&#x4EEC;&#x671F;&#x671B;&#x8FBE;&#x5230;&#x7684;&#x76EE;&#x6807;&#x3002;&#x6293;&#x91CD;&#x70B9;&#x9996;&#x5148;&#x8981;&#x7B80;&#x5316;&#x9700;&#x6C42;&#x6A21;&#x578B;&#xFF0C;&#x8111;&#x6D77;&#x91CC;&#x6709;&#x4E00;&#x4E2A;MVP&#xFF08;&#x6700;&#x5C0F;&#x53EF;&#x884C;&#x6027;&#xFF09;&#x6A21;&#x578B;&#xFF0C;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x5BF9;&#x75C7;&#x4E0B;&#x836F;&#x3002; &#x4E0D;&#x77E5;&#x9053;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x5DE5;&#x5177;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x4EEC;&#x5BF9;&#x4E8E;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x4F17;&#x591A;UML&#x5DE5;&#x5177;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x4E86;&#x89E3;&#x3002;&#x4F46;&#x662F;&#x5728;&#x5B66;&#x4E60;&#x5B8C;&#x300A;&#x8F6F;&#x4EF6;&#x65B9;&#x6CD5;&#x300B;&#x8BFE;&#x7A0B;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x4E0D;&#x592A;&#x5E94;&#x8BE5;&#x4E86;&#x3002;&#x6211;&#x89C9;&#x5F97;&#xFF0C;&#x6700;&#x5E94;&#x8BE5;&#x719F;&#x6089;&#x7684;&#x662F;&#xFF1A; &#x7528;&#x4F8B;&#x56FE; &#x7CFB;&#x7EDF;&#x65F6;&#x5E8F;&#x56FE; &#x5176;&#x4ED6;&#x7684;&#x90FD;&#x662F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x518D;&#x53BB;&#x601D;&#x8003;&#x54EA;&#x79CD;&#x5408;&#x9002;&#x5C31;&#x597D;&#xFF0C;&#x6C38;&#x8FDC;&#x90FD;&#x4E0D;&#x8981;&#x505A;&#x5DE5;&#x5177;&#x7684;&#x5974;&#x96B6;&#xFF0C;&#x62FF;&#x8D77;&#x9524;&#x5B50;&#xFF0C;&#x770B;&#x5230;&#x4EC0;&#x4E48;&#x90FD;&#x662F;&#x9489;&#x5B50;&#x3002; &#x9AD8;&#x7EA7;&#x8BBE;&#x8BA1;&#x4E4B;&#x5751;&#x5728;&#x534E;&#x4E3A;&#x6211;&#x89C1;&#x8FC7;&#x6700;&#x5389;&#x5BB3;&#x7684;14&#x7EA7;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x4E5F;&#x5F88;&#x5C11;&#x53BB;&#x5F88;&#x597D;&#x7684;&#x601D;&#x8003;&#x4EE5;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF1A; &#x8D23;&#x4EFB;&#x662F;&#x5426;&#x5F97;&#x5230;&#x4E86;&#x826F;&#x597D;&#x7684;&#x5B9A;&#x4E49; &#x534F;&#x4F5C;&#x662F;&#x5426;&#x5F97;&#x5230;&#x4E86;&#x826F;&#x597D;&#x7684;&#x5B9A;&#x4E49; &#x8026;&#x5408;&#x662F;&#x5426;&#x5F97;&#x4EE5;&#x6700;&#x5C0F;&#x5316; &#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x548C;&#x5404;&#x9879;&#x7EA6;&#x675F;&#x662F;&#x5426;&#x53EF;&#x63A5;&#x53D7; &#x8FD9;&#x4E9B;&#x90FD;&#x6D89;&#x53CA;&#x4E00;&#x5B9A;&#x7684;&#x7ECF;&#x9A8C;&#x548C;&#x4E00;&#x5B9A;&#x7684;&#x6280;&#x672F;&#x76F4;&#x89C9;&#x3002;&#x7ECF;&#x9A8C;&#x6709;&#x5F97;&#x5230;&#x9700;&#x8981;&#x7684;&#x662F;3&#x5E74;&#xFF0F;5&#x5E74;&#xFF0C;&#x5BF9;&#x4E8E;&#x5584;&#x4E8E;&#x601D;&#x8003;&#x7684;&#x4EBA;&#xFF0C;&#x5F80;&#x5F80;&#x66F4;&#x77ED;&#x3002; &#x5B9E;&#x8DF5;&#x662F;&#x6700;&#x597D;&#x7684;&#x8001;&#x5E08;&#xFF0C;&#x4F46;&#x667A;&#x8005;&#x8FD8;&#x80FD;&#x4ECE;&#x5176;&#x4ED6;&#x7684;&#x5730;&#x65B9;&#x6709;&#x6240;&#x6536;&#x83B7; &#x2014; &#x300A;&#x7A77;&#x67E5;&#x7406;&#x5E74;&#x9274;&#x300B; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8BBE;&#x8BA1;&#x548C;&#x522B;&#x4EBA;&#x7684;&#x8BBE;&#x8BA1;&#x4E2D;&#x4E0D;&#x65AD;&#x601D;&#x8003;&#x53CD;&#x601D;&#x4E0A;&#x9762;&#x7684;4&#x70B9;&#x662F;&#x5982;&#x4F55;&#x8FED;&#x4EE3;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x5728;&#x5B66;&#x4E60;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#x4E2D;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x62BD;&#x8C61;&#x5BF9;&#x8C61;&#x548C;&#x7ED3;&#x6784;&#xFF0C;&#x5728;&#x4E1A;&#x52A1;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x66F4;&#x4F73;&#x7075;&#x6D3B;&#x7684;&#x6839;&#x636E;&#x5404;&#x79CD;&#x9700;&#x6C42;&#x6765;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#xFF0C;&#x628A;&#x9605;&#x8BFB;&#x5F00;&#x6E90;&#x4EE3;&#x7801;&#x5B66;&#x4E60;&#x5230;&#x8BBE;&#x8BA1;&#x7075;&#x6D3B;&#x5E94;&#x7528;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x771F;&#x6B63;&#x8F6C;&#x5316;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x4E1C;&#x897F;&#x3002; &#x6280;&#x672F;&#x76F4;&#x89C9;&#x9700;&#x8981;&#x6E90;&#x6E90;&#x4E0D;&#x65AD;&#x7684;&#x5B66;&#x4E60;&#xFF0C;&#x4FDD;&#x6301;&#x597D;&#x5947;&#x5FC3;&#xFF0C;&#x4FDD;&#x6301;&#x5174;&#x8DA3;&#x3002; &#x6BD4;&#x5982;&#x901A;&#x8FC7;DDIA&#x5BF9;&#x6570;&#x636E;&#x7CFB;&#x7EDF;&#x7684;&#x9AD8;&#x5C4B;&#x5EFA;&#x74F4;&#x822C;&#x7684;&#x603B;&#x7ED3;&#xFF0C;&#x4ECE;&#x800C;&#x5BF9;&#x5E38;&#x7528;&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x5EFA;&#x7ACB;&#x4E00;&#x5B9A;&#x7684;&#x6280;&#x672F;&#x76F4;&#x89C9;&#x3002; &#x5F53;&#x7136;&#xFF0C;&#x597D;&#x5947;&#x5FC3;&#x548C;&#x5174;&#x8DA3;&#x5F80;&#x5F80;&#x56E0;&#x4E3A;&#x538B;&#x529B;&#x6253;&#x538B;&#x53D8;&#x5C0F;&#xFF0C;&#x8FD9;&#x79CD;&#x65F6;&#x5019;&#x5C31;&#x8BE5;&#x53CD;&#x601D;&#x81EA;&#x5DF1;&#x6700;&#x8FD1;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x7684;&#x72B6;&#x6001;&#x4E86;&#x3002;&#x800C;&#x4E0D;&#x662F;&#x628A;&#x8FD9;&#x79CD;&#x72B6;&#x6001;&#x89C6;&#x4E3A;&#x7406;&#x6240;&#x5F53;&#x7136;&#x3002;&#x4E0D;&#x8981;&#x9003;&#x907F;&#x95EE;&#x9898;&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x80FD;&#x906D;&#x81F4;&#x66F4;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002; &#x603B;&#x7ED3;&#x548C;&#x52C9;&#x52B1;&#x6709;&#x65F6;&#x5019;&#xFF0C;&#x5FC3;&#x91CC;&#x603B;&#x4F1A;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x58F0;&#x97F3;&#x53CD;&#x590D;&#x95EE;&#x81EA;&#x5DF1;&#xFF1A;&#x201D;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x603B;&#x7ED3;&#x8FD9;&#x4E9B;&#x4E1C;&#x897F;&#xFF0C;&#x518D;&#x600E;&#x4E48;&#x603B;&#x7ED3;&#xFF0C;&#x4EE5;&#x81EA;&#x5DF1;&#x7684;&#x7ECF;&#x9A8C;&#xFF0C;&#x90FD;&#x662F;&#x505A;&#x4E0D;&#x5230;&#x6BD4;&#x4E66;&#x672C;&#x66F4;&#x5B8C;&#x7F8E;&#x7684;&#x201D;&#x3002;&#x6211;&#x60F3;&#xFF0C;&#x6709;&#x4E86;&#x4E24;&#x5E74;&#x7684;&#x5DE5;&#x4F5C;&#x7ECF;&#x9A8C;&#x4E4B;&#x540E;&#x7684;&#x4ECA;&#x5E74;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x627E;&#x5230;&#x4E86;&#x539F;&#x56E0;&#xFF1A; &#x4E0D;&#x628A;&#x4FE1;&#x606F;&#x5F53;&#x77E5;&#x8BC6;&#xFF0C;&#x4E0D;&#x628A;&#x6536;&#x85CF;&#x5F53;&#x5B66;&#x4E60;&#xFF0C;&#x4E0D;&#x628A;&#x9605;&#x8BFB;&#x5F53;&#x601D;&#x8003;&#xFF0C;&#x4E0D;&#x628A;&#x5B58;&#x50A8;&#x5F53;&#x638C;&#x63E1; &#x5F53;&#x6211;&#x4EEC;&#x751F;&#x642C;&#x786C;&#x5957;&#x6559;&#x79D1;&#x4E66;&#x7684;&#x77E5;&#x8BC6;&#xFF0F;&#x522B;&#x4EBA;&#x7684;&#x7ECF;&#x9A8C;&#xFF0C;&#x90A3;&#x662F;&#x6C38;&#x8FDC;&#x90FD;&#x6CA1;&#x6709;&#x771F;&#x6B63;&#x53BB;&#x638C;&#x63E1;&#x5E76;&#x8F6C;&#x5316;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x80FD;&#x529B;&#x7684;&#x3002; &#x6BD4;&#x5982;&#x7F51;&#x7EDC;5&#x5C42;&#x534F;&#x8BAE;&#x6CA1;&#x6709;&#x751F;&#x642C;&#x786C;&#x5957;OSI7&#x5C42;&#x7F51;&#x7EDC;&#x6A21;&#x578B; &#x6BD4;&#x5982;&#x4E1C;&#x65BD;&#x6548;&#x98A6; &#x7F16;&#x7801;&#x5DE5;&#x4F5C;&#x662F;&#x7406;&#x6027;&#x7684;&#xFF0C;&#x67AF;&#x71E5;&#x548C;&#x521B;&#x9020;&#x6027;&#x5E76;&#x5B58;&#xFF0C;&#x8BA9;&#x5176;&#x6210;&#x4E3A;&#x8FD1;&#x767E;&#x5E74;&#x6765;&#x6539;&#x53D8;&#x4E16;&#x754C;&#x6700;&#x660E;&#x663E;&#x7684;&#x5DE5;&#x4F5C;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6B63;&#x662F;&#x5343;&#x767E;&#x5E74;&#x6765;&#x65E0;&#x6570;&#x6570;&#x5B66;&#x5BB6;&#x601D;&#x8003;&#x7684;&#x7ED3;&#x6676;&#x3002;&#x5F88;&#x591A;&#x4E1C;&#x897F;&#x548C;&#x751F;&#x6D3B;&#x4E5F;&#x662F;&#x76F8;&#x901A;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x751F;&#x6D3B;&#x4E2D;&#x600E;&#x4E48;&#x7BA1;&#x7406;&#x597D;&#x5927;&#x5927;&#x5C0F;&#x5C0F;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x548C;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x4E5F;&#x6CA1;&#x5565;&#x533A;&#x522B;&#x3002; &#x613F;&#x6211;&#x80FD;&#x7EE7;&#x7EED;&#x62E5;&#x6709;&#x611F;&#x6027;&#x7684;&#x7CBE;&#x795E;&#x4E16;&#x754C;&#xFF0C;&#x7406;&#x6027;&#x7684;&#x751F;&#x6D3B;&#x65B9;&#x5F0F;&#x3002;&#x7EE7;&#x7EED;&#x77EB;&#x60C5;&#x4E0B;&#x53BB;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x80FD;&#x7406;&#x6027;&#x7684;&#x53BB;&#x638C;&#x63A7;&#x597D;&#x81EA;&#x5DF1;&#x7684;&#x751F;&#x6D3B;&#x3002;","categories":[],"tags":[]},{"title":"分布式系统入门","slug":"分布式系统入门","date":"2019-01-06T12:26:51.000Z","updated":"2019-03-15T17:32:40.000Z","comments":true,"path":"2019/01/06/分布式系统入门/","link":"","permalink":"http://lqczzz.github.io/2019/01/06/分布式系统入门/","excerpt":"","text":"&#x5206;&#x5E03;&#x5F0F;&#x57FA;&#x7840;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x662F;&#x300A;Distributed systems for fun and profit&#x300B;&#x7684;&#x7B14;&#x8BB0; &#x4E00;.&#x57FA;&#x7840;&#x8BA1;&#x7B97;&#x673A;&#x4E3B;&#x8981;&#x505A;&#x4E24;&#x4E2A;&#x4E8B;&#x60C5;&#xFF1A; &#x8BA1;&#x7B97; &#x5B58;&#x50A8; 1. &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x5F53;&#x5355;&#x53F0;&#x673A;&#x5668;&#x7684;&#x786C;&#x4EF6;&#x5347;&#x7EA7;&#x4E5F;&#x6CA1;&#x6CD5;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x3002;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x7EBF;&#x6027;&#x63D0;&#x5347;&#x6027;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5B9E;&#x4E2D;&#xFF0C;&#x591A;&#x53F0;&#x673A;&#x5668;&#x8FD8;&#x6D89;&#x53CA;&#x5230;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#xFF0C;&#x4EFB;&#x52A1;&#x5408;&#x4F5C;&#x7B49;&#x95EE;&#x9898;&#x3002; 1.1 &#x76EE;&#x6807;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#xFF1A;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x2014;&#x2014;&#x6570;&#x636E;&#x6216;&#x8005;&#x95EE;&#x9898;&#x89C4;&#x6A21;&#x53D8;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x5355;&#x7EAF;&#x7684;&#x901A;&#x8FC7;&#x589E;&#x52A0;&#x8282;&#x70B9;&#x89E3;&#x51B3;&#x3002; &#x6269;&#x5C55;&#x6027;&#xFF0C;&#x5C31;&#x8981;&#x6C42;&#x89C4;&#x6A21;&#xFF0C;&#x8282;&#x70B9;&#x89C4;&#x6A21;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#xFF0C;&#x5C31;&#x4F1A;&#x9047;&#x5230;&#x4EE5;&#x4E0B;&#x95EE;&#x9898;&#xFF1A; &#x6027;&#x80FD; &#x4F4E;&#x65F6;&#x5EF6; &#x9AD8;&#x541E;&#x5410; &#x8D44;&#x6E90;&#x6D88;&#x8017;&#x4F4E; &#x53EF;&#x7528; &#x5BB9;&#x9519;&#x6027;&#xFF1A;&#x5141;&#x8BB8;&#x67D0;&#x4E9B;&#x8282;&#x70B9;&#x5931;&#x8D25; &#x5EF6;&#x65F6;&#x4E0D;&#x80FD;&#x8FC7;&#x9AD8; Availability = uptime / (uptime + downtime) | Availability % | How much downtime is allowed per year? || &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;- | &#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2013; || 90% (&#x201C;one nine&#x201D;) | More than a month || 99% (&#x201C;two nines&#x201D;) | Less than 4 days || 99.9% (&#x201C;three nines&#x201D;) | Less than 9 hours || 99.99% (&#x201C;four nines&#x201D;) | Less than an hour || 99.999% (&#x201C;five nines&#x201D;) | ~ 5 minutes || 99.9999% (&#x201C;six nines&#x201D;) | ~ 31 seconds | 1.2 &#x963B;&#x788D; &#x8282;&#x70B9;&#x6570;&#x91CF; &#x8282;&#x70B9;&#x7684;&#x8DDD;&#x79BB; &#x5149;&#x901F;&#x4F20;&#x64AD;&#x901F;&#x5EA6;&#x548C;cpu&#x9891;&#x7387;&#x51B3;&#x5B9A;&#x4E86;&#x6700;&#x4F4E;&#x65F6;&#x5EF6; 2. &#x5982;&#x4F55;&#x7814;&#x7A76;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;2.1 &#x62BD;&#x8C61;&#x548C;&#x6A21;&#x578B;&#x62BD;&#x8C61;&#x53EF;&#x4EE5;&#x4ECE;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x7684;&#x590D;&#x6742;&#x4E2D;&#x5F97;&#x5230;&#x672C;&#x8D28;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x8FD9;&#x79CD;&#x672C;&#x8D28;&#x5C31;&#x662F;&#x6A21;&#x578B; &#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x7684;&#x672C;&#x8D28;&#x53EF;&#x4EE5;&#x5F52;&#x7EB3;&#x4E3A;&#x4E09;&#x4E2A;&#x6A21;&#x578B;&#xFF1A; &#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#xFF08;&#x540C;&#x6B65;&#xFF0F;&#x5F02;&#x6B65;&#xFF09; &#x5BB9;&#x9519;&#x6A21;&#x578B;&#xFF08;crash-fail/partition/&#x62DC;&#x5360;&#x5EAD;&#x95EE;&#x9898;&#xFF09; &#x4E00;&#x81F4;&#x6027;&#x6A21;&#x578B;&#xFF08;&#x5F3A;&#x4E00;&#x81F4;&#xFF0F;&#x5F31;&#x4E00;&#x81F4;&#xFF09; &#x62BD;&#x8C61;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x5BF9;&#x5916;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x77DB;&#x76FE;&#xFF0C;&#x8FC7;&#x5206;&#x5F3A;&#x8C03;&#x4E00;&#x81F4;&#xFF0C;&#x4F1A;&#x4F7F;&#x5F97;&#x4F7F;&#x7528;&#x8005;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x5BFC;&#x81F4;&#x6027;&#x80FD;&#x4E0D;&#x597D;&#xFF0C;&#x53EF;&#x7528;&#x6027;&#x964D;&#x4F4E;&#xFF0C;&#x9002;&#x5F53;&#x66B4;&#x9732;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x4F1A;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x589E;&#x52A0;&#x4E86;&#x7CFB;&#x7EDF;&#x7684;&#x7406;&#x89E3;&#x6210;&#x672C;&#x3002; 3 &#x5206;&#x5E03;&#x5F0F;&#x5B9E;&#x73B0;&#x672C;&#x8D28;&#x4E0A;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x624B;&#x6BB5;&#xFF1A; &#x6570;&#x636E;&#x5206;&#x533A;&#xFF08;partition&#xFF09; &#x6570;&#x636E;&#x590D;&#x5236;&#xFF08;replication&#xFF09; partition&#x53EF;&#x4EE5;&#x628A;&#x6570;&#x636E;&#x5206;&#x6210;&#x51E0;&#x5757;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x5355;&#x4E00;&#x8282;&#x70B9;&#x7684;&#x5B58;&#x50A8;&#x9650;&#x5236; replication&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x53EF;&#x6269;&#x5C55;&#xFF0C;&#x5BB9;&#x9519;&#xFF0C;&#x4F46;&#x662F;&#x6D89;&#x53CA;&#x5230;&#x6570;&#x636E;&#x7684;&#x540C;&#x6B65;&#xFF0C;&#x662F;&#x5F88;&#x591A;&#x95EE;&#x9898;&#x7684;&#x6E90;&#x6CC9;&#xFF0C;&#x4E00;&#x81F4;&#x6027;&#x6A21;&#x578B;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x63CF;&#x8FF0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x800C;&#x5B58;&#x5728;&#x7684; &#x4E8C;.&#x7406;&#x8BBA;&#x62BD;&#x8C61;&#x53EF;&#x4EE5;&#x63D0;&#x53D6;&#x5B9E;&#x7269;&#x7684;&#x672C;&#x8D28;&#xFF0C;&#x518D;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x672C;&#x8D28;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#x67D0;&#x79CD;&#x516C;&#x7406;&#x6027;&#x7684;&#x4E1C;&#x897F; &#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#x5C31;&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x7684;&#x62BD;&#x8C61; 1. &#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#x7684;&#x62BD;&#x8C61;&#x53D6;&#x51B3;&#x4E8E;&#x5047;&#x8BBE;&#x7684;&#x591A;&#x5C11;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x5047;&#x8BBE;&#x8D8A;&#x5C11;&#x8D8A;&#x597D;&#xFF0C;&#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#x6709;&#x4E09;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x5047;&#x8BBE; &#x8282;&#x70B9;&#x72EC;&#x7ACB;&#x8FD0;&#x884C; &#x8282;&#x70B9;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5; &#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x5185;&#x5B58;&#x548C;&#x65F6;&#x949F;&#x4E0D;&#x5171;&#x4EAB; &#x5047;&#x8BBE;&#x8D8A;&#x5C11;&#xFF0C;&#x63A8;&#x6F14;&#x51FA;&#x6765;&#x7684;&#x7406;&#x8BBA;&#x548C;&#x7B97;&#x6CD5;&#x7684;&#x9002;&#x7528;&#x8303;&#x56F4;&#x8D8A;&#x5E7F;&#xFF0C;&#x5982;&#x589E;&#x52A0;&#x5047;&#x8BBE;&#xFF1A;&#x8282;&#x70B9;&#x4ECE;&#x6765;&#x4E0D;&#x4F1A;&#x5931;&#x7075;&#xFF0C;&#x5219;&#x63A8;&#x6F14;&#x51FA;&#x6765;&#x7684;&#x7B97;&#x6CD5;&#x4F1A;&#x5FFD;&#x7565;&#x6389;&#x8282;&#x70B9;&#x5931;&#x7075;&#x7684;&#x9519;&#x8BEF;&#x5904;&#x7406;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C31;&#x4F1A;&#x53D8;&#x5F97;&#x4E0D;&#x5065;&#x58EE;&#x3002; &#x5173;&#x4E8E;&#x8282;&#x70B9;&#x2014;&#x2014;&#x8282;&#x70B9;&#x63D0;&#x4F9B;&#x4E86;&#xFF1A; &#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F; &#x6570;&#x636E;&#x5B58;&#x50A8;&#x5230;&#x5185;&#x5B58;&#x548C;&#x78C1;&#x76D8; &#x672C;&#x5730;&#x65F6;&#x949F; &#x8282;&#x70B9;&#x7684;&#x72B6;&#x6001;&#xFF1A; &#x5931;&#x7075;&#xFF08;fail&#xFF09; crash &#x62DC;&#x5360;&#x5EAD;&#x5C06;&#x519B;&#x95EE;&#x9898;&#xFF1A;(&#x53DB;&#x5F92;) &#x8282;&#x70B9;&#x901A;&#x4FE1;&#x7684;&#x4E24;&#x79CD;&#x5F02;&#x5E38;&#xFF1A;&#x5DE6;&#x8FB9;&#x662F;&#x8282;&#x70B9;&#x5931;&#x7075;&#xFF0C;&#x53F3;&#x8FB9;&#x662F;&#x7F51;&#x7EDC; 2. &#x516C;&#x7406;&#x6709;&#x4E86;&#x7CFB;&#x7EDF;&#x6A21;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x63A8;&#x6F14;&#x51FA;&#x4E86;&#x4E00;&#x4E9B;&#x516C;&#x7406; 2.1 FLP&#x7406;&#x8BBA;&#x5047;&#x8BBE;&#xFF1A; &#x8282;&#x70B9; Fail by crash &#xFF08;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x62DC;&#x5360;&#x5EAD;&#x5C06;&#x519B;&#x95EE;&#x9898;&#xFF09; &#x7F51;&#x7EDC;&#x53EF;&#x9760; &#x5F02;&#x6B65;&#x7CFB;&#x7EDF;&#x6A21;&#x578B; &#x6D88;&#x606F;&#x53EF;&#x80FD;&#x65E0;&#x9650;delay &#x7ED3;&#x8BBA; &#x200B; &#x5728;&#x5F02;&#x6B65;&#x901A;&#x4FE1;&#x573A;&#x666F;&#xFF0C;&#x5373;&#x4F7F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5931;&#x8D25;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7B97;&#x6CD5;&#x80FD;&#x4FDD;&#x8BC1;&#x975E;&#x5931;&#x8D25;&#x8FDB;&#x7A0B;&#x8FBE;&#x5230;&#x4E00;&#x81F4;&#x6027; &#x8BC1;&#x660E;&#x89C1;&#x53C2;&#x8003; 2.2 CAP&#x7406;&#x8BBA; consistency: &#x6240;&#x6709;&#x8282;&#x70B9;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x770B;&#x5230;&#x540C;&#x6837;&#x7684;&#x503C; availability&#xFF1A;&#x67D0;&#x4E9B;&#x8282;&#x70B9;&#x5931;&#x6548;&#x5E76;&#x4E0D;&#x5F71;&#x54CD;&#x5269;&#x4F59;&#x8282;&#x70B9;&#x8FD0;&#x884C; Partition tolerance&#xFF1A;&#x5373;&#x4F7F;&#x56E0;&#x4E3A;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#x6216;&#x8005;&#x8282;&#x70B9;&#x5931;&#x6548;&#x9020;&#x6210;&#x7684;&#x6D88;&#x606F;&#x4E22;&#x5931;&#xFF0C;&#x7CFB;&#x7EDF;&#x6B63;&#x5E38;&#x8FD0;&#x884C; &#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x4E09;&#x4E2A;&#x6027;&#x8D28;&#x7684;&#x7CFB;&#x7EDF;&#x662F;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x3002; &#x6BD4;&#x5982;&#x4F60;&#x8981;&#x5F3A;&#x4E00;&#x81F4;&#xFF0C;&#x5E76;&#x4E14;&#x4FDD;&#x8BC1;&#x9AD8;&#x53EF;&#x7528;&#x6027;&#xFF0C;&#x4EFB;&#x4F55;&#x8282;&#x70B9;&#x5931;&#x6548;&#x7CFB;&#x7EDF;&#x90FD;&#x4E0D;&#x5931;&#x6548;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#x5C31;&#x6CA1;&#x529E;&#x6CD5;&#x5BB9;&#x5FCD;&#x4E86;&#xFF0C;&#x6BCF;&#x6761;&#x6D88;&#x606F;&#x90FD;&#x4E0D;&#x80FD;&#x4E22;&#x5931;&#x3002; CA&#xFF08;Consistency + Availability&#xFF09;&#x5982;two-phase commit CP&#xFF08;Consistency + Partition tolerance&#xFF09;&#x5982;Paxos&#xFF0C;raft AP (Availibity + Partition tolerance) &#x5F31;&#x4E00;&#x81F4;&#x7CFB;&#x7EDF;&#xFF0C;&#x5982;gossip &#x901A;&#x5E38;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4FDD;&#x8BC1;P&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x5728;CA&#x4F5C;&#x53D6;&#x820D; &#x5B9E;&#x8DF5;&#x4E2D;&#x6211;&#x4EEC;&#x5927;&#x591A;&#x5DF2;&#x7ECF;&#x91C7;&#x53D6;&#x4E86;&#x5F31;&#x4E00;&#x81F4;&#x6027;&#x7684;&#x5F02;&#x6B65;&#x5EF6;&#x65F6;&#x540C;&#x6B65;&#x65B9;&#x6848;&#xFF0C;&#x4EE5;&#x63D0;&#x9AD8;&#x53EF;&#x7528;&#x6027; 2.2.1 &#x4E00;&#x81F4;&#x6027;&#x7684;&#x6269;&#x5C55;&#x8FD9;&#x91CC;&#xFF0C;CAP&#x7684;C&#x7406;&#x89E3;&#x4E3A;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x526F;&#x672C;&#x7684;&#x8BFB;&#x5199;&#x4E00;&#x81F4;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x5B9E;C&#x53EF;&#x4EE5;&#x5728;&#x5F88;&#x591A;&#x573A;&#x666F;&#x62D3;&#x5C55; &#x591A;&#x4E2A;&#x6570;&#x636E;&#x526F;&#x672C;&#x7684;&#x8BFB;&#x5199; &#x4E8B;&#x52A1; &#x5173;&#x8054; &#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x5173;&#x4E8E;&#x4E8B;&#x52A1;&#x64CD;&#x4F5C;&#xFF0C;&#x5FC5;&#x987B;&#x9075;&#x5FAA;ACID&#x539F;&#x5219;&#xFF1A;&#x539F;&#x5B50;&#x6027;&#xFF08;Atomicity&#xFF0C;&#x6216;&#x79F0;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x6027;&#xFF09;&#x3001;&#x4E00;&#x81F4;&#x6027;&#xFF08;Consistency&#xFF09;&#x3001;&#x9694;&#x79BB;&#x6027;&#xFF08;Isolation&#xFF0C;&#x53C8;&#x79F0;&#x72EC;&#x7ACB;&#x6027;&#xFF09;&#x548C;&#x6301;&#x4E45;&#x6027;&#xFF08;Durability&#xFF09; &#x8FD9;&#x91CC;&#x7684;C&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x4E2D;&#x591A;&#x4E2A;&#x64CD;&#x4F5C;&#x6210;&#x529F;&#x5931;&#x8D25;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x4F17;&#x6240;&#x5468;&#x77E5;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x4E00;&#x822C;&#x91C7;&#x7528;&#x4E24;&#x9636;&#x6BB5;&#x63D0;&#x4EA4;&#x7B56;&#x7565;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x8017;&#x65F6;&#x7684;&#x590D;&#x6742;&#x8FC7;&#x7A0B;&#xFF0C;&#x4F1A;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x7CFB;&#x7EDF;&#x6548;&#x7387;&#xFF0C;&#x5728;&#x5B9E;&#x8DF5;&#x4E2D;&#x6211;&#x4EEC;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x5B83;&#x3002;&#x5728;&#x5B9E;&#x8DF5;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4E3A;&#x4E86;&#x6269;&#x5C55;&#x6570;&#x636E;&#x5BB9;&#x91CF;&#x5C06;&#x6570;&#x636E;&#x5206;&#x5E03;&#x5F0F;&#x5B58;&#x50A8;&#xFF0C;&#x800C;&#x4E8B;&#x52A1;&#x7684;&#x8981;&#x6C42;&#x53C8;&#x5B8C;&#x5168;&#x4E0D;&#x80FD;&#x964D;&#x4F4E;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x7CFB;&#x7EDF;&#x7684;&#x53EF;&#x7528;&#x6027;&#x4E00;&#x5B9A;&#x4F1A;&#x5927;&#x5927;&#x964D;&#x4F4E;&#xFF0C;&#x5728;&#x73B0;&#x5B9E;&#x4E2D;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x90FD;&#x91C7;&#x7528;&#x5BF9;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x4E0D;&#x5206;&#x6563;&#x5B58;&#x50A8;&#x7684;&#x7B56;&#x7565;&#x3002; nosql&#x6570;&#x636E;&#x5E93;&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;P&#xFF0C;&#x727A;&#x7272;&#x4E86;C&#xFF0C;&#x4E5F;&#x5373;&#x727A;&#x7272;&#x4E86;&#x4E8B;&#x52A1;&#xFF0C;&#x4E8B;&#x52A1;&#x9075;&#x5FAA;BASE&#x800C;&#x4E0D;&#x662F;ACID &#x4E09;.&#x65F6;&#x95F4;&#x548C;&#x987A;&#x5E8F;3.1 &#x5168;&#x5E8F;&#x548C;&#x504F;&#x5E8F;&#x5168;&#x5E8F;&#x5C31;&#x662F;&#x5728;&#x96C6;&#x5408;&#x91CC;&#x4EFB;&#x4F55;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x53EF;&#x4EE5;&#x6BD4;&#x8F83;&#xFF0C;&#x5206;&#x51FA;&#x5927;&#x5C0F;&#x3002;&#x504F;&#x5E8F;&#x4E2D;&#xFF0C;&#x67D0;&#x4E9B;&#x5143;&#x7D20;&#x662F;&#x6CA1;&#x529E;&#x6CD5;&#x6BD4;&#x8F83;&#x5927;&#x5C0F;&#x7684;&#x3002; &#x5728;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x7CFB;&#x7EDF;&#x91CC;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x6307;&#x4EE4;&#x8FD0;&#x884C;&#x987A;&#x5E8F;&#x90FD;&#x53D6;&#x51B3;&#x4E8E;&#x672C;&#x5730;&#x8282;&#x70B9;&#x7684;&#x65F6;&#x949F;&#xFF0C;&#x6240;&#x4EE5;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x662F;&#x504F;&#x5E8F;&#x3002; 3.2 &#x65F6;&#x95F4;&#x5300;&#x901F;&#x6D41;&#x901D;&#x65F6;&#x95F4;&#x662F;&#x987A;&#x5E8F;&#x7684;&#x6765;&#x6E90;&#xFF0C;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x6709;&#x72EC;&#x7ACB;&#x7684;&#x672C;&#x5730;&#x65F6;&#x95F4;&#x548C;&#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x4E8E;&#x662F;&#x4E8B;&#x4EF6;&#x7684;&#x53D1;&#x751F;&#x6709;&#x672C;&#x5730;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x987A;&#x5E8F;&#x548C;&#x5176;&#x4ED6;&#x8282;&#x70B9;&#x5B8C;&#x5168;&#x72EC;&#x7ACB;&#xFF0C;&#x5F88;&#x96BE;&#x505A;&#x5230;&#x5168;&#x90E8;&#x8282;&#x70B9;&#x6709;&#x5E8F;&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x4E0D;&#x662F;&#x505A;&#x4E0D;&#x5230;&#x5168;&#x5E8F;&#xFF0C;&#x7EF4;&#x6301;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x65F6;&#x949F;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x662F;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x4EF7;&#x592A;&#x5927;&#x3002; &#x5168;&#x5C40;&#x65F6;&#x949F;&#xFF08;Global Clock&#xFF09; &#x672C;&#x5730;&#x65F6;&#x949F;&#xFF08;Local Clock&#xFF09; &#x6CA1;&#x6709;&#x65F6;&#x949F;&#x5B58;&#x5728;&#xFF08;No Clock&#xFF09; 3.2.1 &#x5168;&#x5C40;&#x65F6;&#x949F; &#x5B8C;&#x7F8E;&#x7684;&#x65F6;&#x949F;&#xFF0C;&#x8D70;&#x65F6;&#x540C;&#x6B65;&#xFF0C;&#x5B58;&#x5728;&#x4E8E;&#x6240;&#x6709;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x662F;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x7684;&#x7406;&#x60F3;&#x5047;&#x8BBE;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x65F6;&#x949F;&#x540C;&#x6B65;&#x53EA;&#x80FD;&#x4FDD;&#x8BC1;&#x6709;&#x9650;&#x7684;&#x7CBE;&#x5EA6;&#x3002;&#x7528;&#x6237;&#x53EF;&#x80FD;&#x968F;&#x673A;&#x5730;&#x6539;&#x53D8;&#x672C;&#x673A;&#x65F6;&#x95F4;&#xFF0C;&#x65B0;&#x8282;&#x70B9;&#x52A0;&#x5165;&#xFF0C;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x7834;&#x574F;&#x5168;&#x5C40;&#x65F6;&#x949F;&#x7684;&#x5047;&#x8BBE;&#x3002; &#x73B0;&#x5B9E;&#x7CFB;&#x7EDF;&#x4E5F;&#x6709;&#x505A;&#x51FA;&#x8FD9;&#x4E2A;&#x5047;&#x8BBE;&#x7684;&#x3002;FB&#x7684;Cassandra&#xFF0C;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x65F6;&#x95F4;&#x6233;&#x6765;&#x89E3;&#x51B3;write&#x7684;&#x51B2;&#x7A81;&#x7684; 3.2.2 &#x672C;&#x5730;&#x65F6;&#x949F; &#x672C;&#x5730;&#x65F6;&#x949F;&#x65E0;&#x6CD5;&#x4FDD;&#x8BC1;&#x5168;&#x5C40;&#x6709;&#x5E8F; 3.2.3 &#x6CA1;&#x6709;&#x65F6;&#x949F;&#x5B8C;&#x5168;&#x4E0D;&#x4F7F;&#x7528;&#x201D;&#x65F6;&#x949F;&#x201D;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x53D6;&#x800C;&#x4EE3;&#x4E4B;&#xFF0C;&#x201C;&#x903B;&#x8F91;&#x65F6;&#x95F4;&#x201D;&#x3002;&#x56E0;&#x4E3A;&#x65F6;&#x95F4;&#x6233;&#x4E48;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5F53;&#x524D;&#x4E16;&#x754C;&#x72B6;&#x6001;&#x7684;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x7528;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF08;Counter&#xFF09;&#xFF0C;&#x5E76;&#x548C;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x4EA4;&#x6D41;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x4E86;&#x3002; &#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x51B3;&#x5B9A;&#x4E8B;&#x4EF6;&#x987A;&#x5E8F;&#x3002;&#x4E0D;&#x8FC7;&#x6709;&#x4E2A;&#x574F;&#x5904;&#xFF0C;&#x56E0;&#x4E3A;&#x7F3A;&#x4E4F;&#x65F6;&#x949F;&#xFF0C;&#x6CA1;&#x529E;&#x6CD5;&#x51B3;&#x5B9A;timeout&#x3002; &#x201C;&#x6CA1;&#x6709;&#x65F6;&#x949F;&#x201D;&#x7684;&#x5047;&#x8BBE;&#x7684;&#x5B9E;&#x73B0;&#x6709;&#xFF1A; Lamport&#x65F6;&#x949F; Vector clocks Cassandra&#x7684;cousin Riak &#x548C; Vodemort&#xFF08;LinkedIn&#xFF09;&#x662F;&#x5B83;&#x7684;&#x5E94;&#x7528;&#x3002;&#x8FD9;&#x4E9B;&#x7CFB;&#x7EDF;&#x907F;&#x514D;&#x4E86;&#x5168;&#x5C40;or&#x672C;&#x5730;&#x65F6;&#x949F;&#x6F02;&#x79FB;&#x5E26;&#x6765;&#x7684;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x3002; 3.2.4 &#x903B;&#x8F91;&#x65F6;&#x949F;Lamport&#x65F6;&#x949F;&#x548C;&#x5411;&#x91CF;&#x65F6;&#x949F;&#x901A;&#x8FC7;&#x8BA1;&#x6570;&#x5668;&#x548C;&#x901A;&#x4FE1;&#x6765;&#x51B3;&#x5B9A;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x987A;&#x5E8F;&#x7684;&#x3002;&#x8BA1;&#x6570;&#x5668;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x8282;&#x70B9;&#x4E4B;&#x524D;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002; 3.2.4.1 Lamport&#x65F6;&#x949F;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x8BA1;&#x65F6;&#x5668;&#x3002; &#x5F53;&#x8FDB;&#x7A0B;&#x505A;&#x4E86;&#x4EFB;&#x610F;&#x4E00;&#x4EF6;&#x4E8B;&#xFF0C;&#x589E;&#x52A0;&#x8BA1;&#x65F6;&#x5668;&#x8BA1;&#x6570;&#x3002; &#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x7684;&#x6D88;&#x606F;&#x4E2D;&#x5305;&#x542B;&#x8BA1;&#x65F6;&#x5668;&#x8BA1;&#x6570;&#x3002; &#x5F53;&#x6536;&#x5230;&#x6D88;&#x606F;&#x4EE5;&#x540E;&#xFF0C;&#x8BA1;&#x6570;&#x5668;&#x8BBE;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A;max(local_counter, received_counter) + 1 Lamport&#x65F6;&#x949F;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x504F;&#x5E8F;&#xFF0C;&#x5982;&#x679C; timestamp(a) &lt; timestamp(b): a &#x53EF;&#x80FD;&#x53D1;&#x751F;&#x5728;b&#x4E4B;&#x524D; a&#x548C;b&#x538B;&#x6839;&#x6CA1;&#x6CD5;&#x6BD4;&#x8F83; &#x7B2C;&#x4E8C;&#x79CD;&#x60C5;&#x51B5;&#x53D1;&#x751F;&#x5728;a&#x548C;b&#x6240;&#x5728;&#x7684;Partition&#x6CA1;&#x6709;&#x53D1;&#x9001;&#x901A;&#x4FE1;&#x3002; 3.2.4.2 Vector clocks&#x5411;&#x91CF;&#x65F6;&#x949F;&#x662F;Lamport&#x65F6;&#x949F;&#x7684;&#x4E00;&#x79CD;&#x6269;&#x5C55;&#x3002;&#x5B83;&#x7EF4;&#x62A4;&#x5927;&#x5C0F;&#x4E3A;N&#x7684;&#x6570;&#x5217;[t1, t2, &#x2026;.]&#xFF0C;N&#x4E3A;&#x8282;&#x70B9;&#x6570;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x66F4;&#x65B0;&#x81EA;&#x5DF1;&#x7684;&#x65F6;&#x949F;&#x3002; &#x6BCF;&#x5F53;&#x8FDB;&#x7A0B;&#x505A;&#x4E86;&#x4E8B;&#x60C5;&#xFF0C;&#x66F4;&#x65B0;&#x8BE5;node&#x7684;&#x65F6;&#x949F;&#x3002; &#x8FDB;&#x7A0B;&#x53D1;&#x9001;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x5305;&#x542B;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6570;&#x7EC4;&#x3002; &#x5F53;&#x6536;&#x5230;&#x6D88;&#x606F;&#x4EE5;&#x540E;&#xFF0C;&#x66F4;&#x65B0;&#x672C;&#x5730;&#x7684;&#x6570;&#x7EC4;&#x91CC;&#x9762;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;max(local, received)&#xFF1B;&#x4E3A;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;counter&#x52A0;1 &#x5982;&#x56FE;&#xFF1A; 3.3 &#x5931;&#x7075;&#x68C0;&#x6D4B;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x4E0A;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x8FDC;&#x7A0B;&#x67D0;&#x4E2A;&#x8282;&#x70B9;&#x5931;&#x6548;&#x4E86;&#x5462;&#xFF1F;&#x5728;&#x7F3A;&#x4E4F;&#x6709;&#x6548;&#x51C6;&#x786E;&#x7684;&#x5168;&#x5C40;&#x4FE1;&#x606F;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x5408;&#x7406;&#x7684;timeout&#x503C;&#x6765;&#x786E;&#x5B9A;&#x3002;&#x4F46;&#x662F;&#x5408;&#x7406;&#x7684;timeout&#x503C;&#x8BE5;&#x600E;&#x4E48;&#x786E;&#x5B9A;&#x5462;&#xFF1F; &#x5931;&#x7075;&#x68C0;&#x6D4B;&#x5668;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5FC3;&#x8DF3;&#x6D88;&#x606F;&#x6765;&#x5B9E;&#x73B0;timeout&#x3002;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x4EA4;&#x6362;&#x5FC3;&#x8DF3;&#x6D88;&#x606F;&#x3002;&#x5982;&#x679C;&#x6D88;&#x606F;&#x5728;timeout&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x6536;&#x5230;&#x54CD;&#x5E94;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x51FA;&#x73B0;&#x5931;&#x6548;&#x3002;&#x8FD9;&#x79CD;&#x68C0;&#x6D4B;&#x8981;&#x4E48;&#x592A;&#x51B2;&#x52A8;(&#x628A;&#x6B63;&#x5E38;&#x7684;&#x8282;&#x70B9;&#x7B97;&#x6210;&#x5931;&#x6548;&#xFF09;&#xFF0C;&#x8981;&#x4E48;&#x592A;&#x4FDD;&#x5B88;&#xFF0C;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x80FD;&#x68C0;&#x6D4B;&#x51FA;&#x9519;&#x8BEF;&#x3002; &#x8BBA;&#x6587; &#x8BA8;&#x8BBA;&#x4E86;&#x5931;&#x7075;&#x68C0;&#x6D4B;&#x5728;&#x89E3;&#x51B3;&#x4E00;&#x81F4;&#x6027;&#x95EE;&#x9898;&#x4E2D;&#x7684;&#x4E24;&#x5927;&#x5C5E;&#x6027;&#xFF1A;&#x5B8C;&#x6574;&#x6027;&#x548C;&#x7CBE;&#x51C6;&#x6027; 3.4 &#x603B;&#x7ED3;&#x5728;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#x5E94;&#x5047;&#x8BBE;&#x504F;&#x5E8F;&#x800C;&#x4E0D;&#x662F;&#x5168;&#x5E8F;&#x3002;&#x800C;&#x8981;&#x627F;&#x8BFA;&#x5168;&#x5E8F;&#x4E5F;&#x662F;&#x53EF;&#x80FD;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4EE3;&#x4EF7;&#x975E;&#x5E38;&#x5927;&#x3002; &#x65F6;&#x95F4;&#xFF0C;&#x987A;&#x5E8F;&#x548C;&#x540C;&#x6B65;&#x771F;&#x7684;&#x5FC5;&#x8981;&#x4E48;&#xFF1F;&#x770B;&#x60C5;&#x51B5;&#x3002;&#x6709;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x4F60;&#x53EA;&#x4E0D;&#x8FC7;&#x9700;&#x8981;&#x6700;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x800C;&#x4E0D;&#x5173;&#x7CFB;&#x4E2D;&#x95F4;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x987A;&#x5E8F;&#x3002; &#x56DB;.replication&#x62F7;&#x8D1D;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x7EC4;&#x901A;&#x4FE1;&#x95EE;&#x9898;&#xFF0C;&#x4E3A;&#x4E00;&#x4E9B;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x4F8B;&#x5982;&#x9009;&#x4E3E;&#xFF0C;&#x5931;&#x7075;&#x68C0;&#x6D4B;&#xFF0C;&#x4E00;&#x81F4;&#x6027;&#x548C;&#x539F;&#x5B50;&#x5E7F;&#x64AD;&#x63D0;&#x4F9B;&#x4E86;&#x4E0A;&#x4E0B;&#x6587; &#x62F7;&#x8D1D;&#x672C;&#x8D28;&#x5C31;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#xFF1A; &#x540C;&#x6B65;&#x62F7;&#x8D1D; &#x5F02;&#x6B65;&#x62F7;&#x8D1D; 4.1 &#x62F7;&#x8D1D;&#x8303;&#x5F0F;4.1.1 &#x540C;&#x6B65;&#x62F7;&#x8D1D; &#x9996;&#x5148;client&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x3002;&#x7136;&#x540E;&#x540C;&#x6B65;&#x62F7;&#x8D1D;&#xFF0C;&#x540C;&#x6B65;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x65F6;&#x5019;client&#x8FD8;&#x5728;&#x7B49;&#x5F85;&#x7740;&#x8BF7;&#x6C42;&#x8FD4;&#x56DE;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x3002; &#x8FD9;&#x5C31;&#x662F;N-of-N write&#xFF0C;&#x53EA;&#x6709;&#x7B49;&#x6240;&#x6709;N&#x4E2A;&#x8282;&#x70B9;&#x6210;&#x529F;&#x5199;&#xFF0C;&#x624D;&#x8FD4;&#x56DE;&#x5199;&#x6210;&#x529F;&#x7ED9;client&#x3002;&#x7CFB;&#x7EDF;&#x4E0D;&#x5BB9;&#x5FCD;&#x4EFB;&#x4F55;&#x670D;&#x52A1;&#x5668;&#x4E0B;&#x7EBF;&#x3002;&#x4ECE;&#x6027;&#x80FD;&#x4E0A;&#x8BF4;&#xFF0C;&#x6700;&#x6162;&#x7684;&#x670D;&#x52A1;&#x5668;&#x51B3;&#x5B9A;&#x4E86;&#x5199;&#x7684;&#x901F;&#x5EA6; 4.1.2 &#x5F02;&#x6B65;&#x62F7;&#x8D1D; master&#x8282;&#x70B9;&#x7ACB;&#x5373;&#x8FD4;&#x56DE;&#x3002;&#x8BE5;&#x8282;&#x70B9;&#x53EF;&#x80FD;&#x5728;&#x672C;&#x5730;&#x505A;&#x4E86;&#x590D;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x4F1A;&#x5411;&#x5176;&#x4ED6;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x62F7;&#x8D1D;&#x3002;&#x53EA;&#x6709;&#x5728;&#x8FD4;&#x56DE;&#x4EE5;&#x540E;&#xFF0C;&#x5F02;&#x6B65;&#x7684;&#x4EFB;&#x52A1;&#x5728;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x3002; &#x76F8;&#x5BF9;&#x5730;&#xFF0C;&#x8FD9;&#x662F;1-of-N write&#x3002;&#x6027;&#x80FD;&#x4E0A;&#x8BF4;&#xFF0C;&#x5FEB;&#x3002;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x5F3A;&#x4E00;&#x81F4;&#x6027;&#x4FDD;&#x8BC1;&#x3002; 4.2 &#x62F7;&#x8D1D;&#x7B97;&#x6CD5;4.2.1 overview&#x4E00;&#x81F4;&#x6027;&#x7684;&#x5F3A;&#x5F31;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x533A;&#x5206;&#x62F7;&#x8D1D;&#x7B97;&#x6CD5; &#x4E00;&#x81F4;&#x6027;&#x5C31;&#x662F;&#x6240;&#x6709;&#x7684;&#x8282;&#x70B9;&#x90FD;&#x540C;&#x610F;&#x67D0;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x8BF4;&#xFF0C;&#x4E00;&#x81F4;&#x6027;&#x5305;&#x62EC;&#xFF1A; &#x534F;&#x8BAE;&#xFF1A;&#x6BCF;&#x4E2A;&#x6B63;&#x786E;&#x7684;&#x6D41;&#x7A0B;&#x5FC5;&#x987B;&#x5C31;&#x76F8;&#x540C;&#x7684;&#x4EF7;&#x503C;&#x8FBE;&#x6210;&#x4E00;&#x81F4;&#x3002;&#x5B8C;&#x6574;&#x6027;&#xFF1A;&#x6BCF;&#x4E2A;&#x6B63;&#x786E;&#x7684;&#x8FC7;&#x7A0B;&#x6700;&#x591A;&#x51B3;&#x5B9A;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x51B3;&#x5B9A;&#x67D0;&#x4E2A;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5FC5;&#x987B;&#x7531;&#x67D0;&#x4E2A;&#x8FC7;&#x7A0B;&#x63D0;&#x51FA;&#x3002;&#x7EC8;&#x6B62;&#xFF1A;&#x6240;&#x6709;&#x6D41;&#x7A0B;&#x6700;&#x7EC8;&#x90FD;&#x4F1A;&#x505A;&#x51FA;&#x51B3;&#x5B9A;&#x3002;&#x6709;&#x6548;&#x6027;&#xFF1A;&#x5982;&#x679C;&#x6240;&#x6709;&#x6B63;&#x786E;&#x7684;&#x8FC7;&#x7A0B;&#x63D0;&#x51FA;&#x76F8;&#x540C;&#x7684;&#x503C;V&#xFF0C;&#x90A3;&#x4E48;&#x6240;&#x6709;&#x6B63;&#x786E;&#x7684;&#x8FC7;&#x7A0B;&#x51B3;&#x5B9A;V &#x4E92;&#x65A5;&#xFF0C;leader&#x9009;&#x4E3E;&#xFF0C;&#x591A;&#x64AD;&#x548C;&#x539F;&#x5B50;&#x5E7F;&#x64AD;&#x90FD;&#x662F;&#x66F4;&#x666E;&#x904D;&#x7684;&#x4E00;&#x81F4;&#x6027;&#x95EE;&#x9898; &#x5355;&#x62F7;&#x8D1D;&#x7CFB;&#x7EDF;&#x6309;&#x7167;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x4E2D;&#x4F20;&#x9012;&#x7684;&#x6D88;&#x606F;&#x6570;&#x76EE;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E0B;&#x5206;&#x7C7B;&#xFF1A; 1n messages&#xFF08;&#x5F02;&#x6B65; &#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#xFF09; 2n messages&#xFF08;&#x540C;&#x6B65; &#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#xFF09; 4n messages&#xFF08;2-phase commit&#xFF0C;Multi-Paxos) 6n messages &#xFF08;3-phase commit&#xFF0C;Paxos with repeated leader election&#xFF09; &#x4E0A;&#x56FE;&#x5217;&#x51FA;&#x7684;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;&#x4E00;&#x81F4;&#x6027;&#x5F3A;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x5EF6;&#x65F6;&#x9AD8;&#xFF0C;&#x6027;&#x80FD;&#x4F4E;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x53D6;&#x820D;&#xFF0C;&#x5F97;&#x6B64;&#x5931;&#x5F7C;&#x3002; 4.2.2 &#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#x62F7;&#x8D1D;&#x6700;&#x5E38;&#x89C1;&#x6700;&#x57FA;&#x672C;&#x7684;&#x62F7;&#x8D1D;&#x65B9;&#x5F0F;&#x3002;&#x6240;&#x6709;&#x7684;update&#x53D1;&#x751F;&#x5728;primary&#xFF0C;&#x5E76;&#x4E14;&#x4EE5;log&#x7684;&#x5F62;&#x5F0F;&#x62F7;&#x8D1D;&#x5230;backup &#x670D;&#x52A1;&#x5668;&#x3002;&#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#x4E5F;&#x5206;&#x540C;&#x6B65;&#x548C;&#x5F02;&#x6B65;&#x4E24;&#x79CD;&#x3002; MySQL&#x548C;MongoDB&#x90FD;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#x3002;&#x540C;&#x6B65;&#x4E3B;&#x4ECE;&#x5907;&#x4EFD;&#x4FDD;&#x8BC1;&#x5728;&#x8FD4;&#x56DE;&#x7ED9;client&#x4E4B;&#x524D;&#xFF0C;backup&#x8282;&#x70B9;&#x6210;&#x529F;&#x5B58;&#x50A8;&#x4E86;&#x62F7;&#x8D1D;&#xFF08;Replica&#xFF09;&#x3002;&#x4E0D;&#x8FC7;&#x5373;&#x4F7F;&#x8FD9;&#x6837;&#xFF0C;&#x540C;&#x6B65;&#x65B9;&#x5F0F;&#x4E5F;&#x4EC5;&#x80FD;&#x4FDD;&#x8BC1;&#x8F83;&#x5F31;&#x7684;&#x627F;&#x8BFA;&#x3002;&#x8003;&#x8651;&#x4E0B;&#x9762;&#x7684;&#x573A;&#x666F;&#xFF1A; &#x4E3B;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;write&#xFF0C;&#x53D1;&#x9001;&#x5230;backup backup &#x5199;&#x6210;&#x529F;&#x3002;&#x8FD4;&#x56DE;ACK &#x4E3B;&#x670D;&#x52A1;&#x5668;fail&#xFF0C;client&#x8D85;&#x65F6;&#xFF0C;&#x8BA4;&#x4E3A;&#x5199;&#x5931;&#x8D25;&#x3002; client&#x73B0;&#x5728;&#x8BA4;&#x4E3A;&#x5199;&#x5931;&#x8D25;&#xFF0C;&#x4F46;&#x662F;backup&#x5176;&#x5B9E;&#x6210;&#x529F;&#x3002;&#x5982;&#x679C;backup promote&#x6210;&#x4E3A;primary&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4E0D;&#x5BF9;&#x4E86; 4.2.3 &#x4E24;&#x9636;&#x6BB5;&#x63D0;&#x4EA4;&#xFF08;2PC&#xFF09;2PC&#x5728;&#x5F88;&#x591A;&#x7ECF;&#x5178;&#x7684;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x90FD;&#x4F7F;&#x7528;&#x5230;&#x4E86;&#x3002;&#x4F8B;&#x5982;MySQL &#x96C6;&#x7FA4;&#x4F7F;&#x7528;2PC&#x63D0;&#x4F9B;&#x540C;&#x6B65;&#x62F7;&#x8D1D;&#x3002;&#x4E0B;&#x9762;&#x662F;2PC&#x7684;&#x57FA;&#x672C;&#x6D41;&#x7A0B; 12345[ Coordinator ] -&gt; OK to commit? [ Peers ] &lt;- Yes / No[ Coordinator ] -&gt; Commit / Rollback [ Peers ] &lt;- ACK &#x5728;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF0C;&#x6295;&#x7968;&#xFF0C;&#x534F;&#x8C03;&#x8005;&#xFF08;Coordinator&#xFF09;&#x7ED9;&#x6240;&#x6709;&#x53C2;&#x4E0E;&#x8005;&#x53D1;&#x9001;update&#x3002;&#x6BCF;&#x4E2A;&#x53C2;&#x4E0E;&#x8005;&#x6295;&#x7968;&#x51B3;&#x5B9A;&#x662F;&#x5426;commit&#x3002;&#x5982;&#x679C;&#x9009;&#x62E9;commit&#xFF0C;&#x7ED3;&#x679C;&#x9996;&#x5148;&#x5B58;&#x653E;&#x5728;&#x4E34;&#x65F6;&#x533A;&#x57DF;&#xFF08;the write-ahead log&#xFF09;&#x3002;&#x9664;&#x975E;&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#x5B8C;&#x6210;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x90FD;&#x53EA;&#x7B97;&#x201C;&#x4E34;&#x65F6;&#x201D;&#x7684;update&#x3002; &#x5728;&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#xFF0C;&#x51B3;&#x7B56;&#xFF0C;&#x534F;&#x8C03;&#x8005;&#x51B3;&#x5B9A;&#x7ED3;&#x679C;&#xFF0C;&#x5E76;&#x901A;&#x77E5;&#x53C2;&#x4E0E;&#x8005;&#x3002;&#x5982;&#x679C;&#x6240;&#x6709;&#x53C2;&#x4E0E;&#x8005;&#x90FD;&#x9009;&#x62E9;commit&#xFF0C;&#x90A3;&#x7ED3;&#x679C;&#x4ECE;&#x4E34;&#x65F6;&#x533A;&#x57DF;&#x79FB;&#x9664;&#xFF0C;&#x800C;&#x6210;&#x4E3A;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x3002; 2PC&#x5728;&#x6700;&#x540E;commit&#x4E4B;&#x524D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x533A;&#x57DF;&#xFF0C;&#x5C31;&#x80FD;&#x591F;&#x5728;&#x8282;&#x70B9;&#x5931;&#x6548;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ECE;&#x800C;&#x5141;&#x8BB8;&#x56DE;&#x6EDA;&#x3002; &#x4E4B;&#x524D;&#x8BA8;&#x8BBA;&#x8FC7;&#xFF0C;2PC&#x5C5E;&#x4E8E;CA&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x6CA1;&#x6709;&#x8003;&#x8651;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#xFF0C;&#x5BF9;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#x5E76;&#x6CA1;&#x6709;&#x5BB9;&#x9519;&#x3002;&#x540C;&#x65F6;&#x7531;&#x4E8E;&#x662F;N-of-N write&#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x4E0A;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x6298;&#x6263; 4.2.4 &#x5BF9;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#x5BB9;&#x9519;&#x7684;&#x4E00;&#x81F4;&#x6027;&#x7B97;&#x6CD5;&#xFF1A;gossip/raft&#x548C;ZAB&#x5BF9;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#x5BB9;&#x9519;&#x7684;&#x4E00;&#x81F4;&#x6027;&#x7B97;&#x6CD5;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86;CAP&#x7684;CP&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x91CD;&#x4E86;&#x4E00;&#x5B9A;&#x7684;A&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x7F51;&#x7EDC;&#x5206;&#x5272;&#xFF08;Network Partition&#xFF09;&#x8282;&#x70B9;&#x672C;&#x8EAB;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x7F51;&#x7EDC;&#x94FE;&#x8DEF;&#x53D1;&#x751F;&#x95EE;&#x9898;&#x3002;&#x4E0D;&#x540C;&#x7684;Partition&#x751A;&#x81F3;&#x8FD8;&#x80FD;&#x63A5;&#x6536;client&#x7684;&#x8BF7;&#x6C42;&#x3002; 2&#x8282;&#x70B9;&#xFF0C;&#x8282;&#x70B9;&#x5931;&#x6548; vs &#x7F51;&#x7EDC;&#x5206;&#x5272; 3&#x8282;&#x70B9;&#xFF0C;&#x8282;&#x70B9;&#x5931;&#x6548; vs&#x7F51;&#x7EDC;&#x5206;&#x5272; &#x5BF9;&#x8FD9;&#x7C7B;&#x7B97;&#x6CD5;&#x4F1A;&#x5728;&#x5B66;&#x4E60;MIT6.824&#x516C;&#x5F00;&#x8BFE;&#x6DF1;&#x5165;&#x5B66;&#x4E60;&#xFF0C;to be continues&#x2026; 4.3 &#x603B;&#x7ED3;&#x603B;&#x7ED3;&#x4E0B;&#x5404;&#x7C7B;&#x7B97;&#x6CD5;&#x7684;&#x4E00;&#x4E9B;&#x5173;&#x952E;&#x7279;&#x5F81;&#x3002; &#x4E3B;&#x4ECE;&#x5907;&#x4EFD; &#x5355;&#x72EC;&#x7684;&#xFF0C;&#x9759;&#x6001;&#x7684;master&#x8282;&#x70B9; &#x590D;&#x5236;&#x65E5;&#x5FD7;&#xFF0C;slaves&#x8282;&#x70B9;&#x5E76;&#x4E0D;&#x53C2;&#x4E0E;&#x6267;&#x884C;&#x5177;&#x4F53;&#x64CD;&#x4F5C; &#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x7684;&#x5EF6;&#x65F6;&#x6CA1;&#x6709;&#x4E0A;&#x9650; &#x65E0;&#x6CD5;&#x5BB9;&#x9519;&#x7F51;&#x7EDC;&#x5206;&#x5272; &#x5728;&#x4E0D;&#x4E00;&#x81F4;&#x548C;&#x9519;&#x8BEF;&#x53D1;&#x751F;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9700;&#x8981;&#x624B;&#x5DE5;&#x5E72;&#x6D89; 2PC &#x7EDF;&#x4E00;&#x6295;&#x7968;&#xFF1A;&#x63D0;&#x4EA4;&#x6216;&#x8005;&#x653E;&#x5F03; &#x9759;&#x6001;&#x7684;master&#x8282;&#x70B9; &#x534F;&#x8C03;&#x8005;&#x548C;&#x666E;&#x901A;&#x8282;&#x70B9;&#x540C;&#x65F6;&#x6302;&#x6389;&#x60C5;&#x51B5;&#x4E0B;&#x65E0;&#x6CD5;&#x4FDD;&#x8BC1;&#x4E00;&#x81F4;&#x6027; &#x65E0;&#x6CD5;&#x5BB9;&#x9519;&#x7F51;&#x7EDC;&#x5206;&#x5272; Paxos like &#x591A;&#x6570;&#x6295;&#x7968; &#x52A8;&#x6001;master&#x8282;&#x70B9; &#x5141;&#x8BB8;n/2-1&#x8282;&#x70B9;&#x6302; &#x5BF9;&#x5EF6;&#x65F6;&#x5E76;&#x4E0D;&#x592A;&#x654F;&#x611F; &#x9057;&#x7559;&#x7684;&#x95EE;&#x9898; &#x62DC;&#x5360;&#x5EAD;&#x5C06;&#x519B;&#x95EE;&#x9898; 2PC flp&#x5B9E;&#x73B0; &#x53C2;&#x8003;1. ebook 2. &#x533A;&#x5757;&#x94FE;&#x65F6;&#x4EE3;&#x7684;&#x62DC;&#x5360;&#x5EAD;&#x5C06;&#x519B;&#x4EEC; 3. FLP impossible 4. &#x5982;&#x4F55;&#x6B63;&#x786E;&#x7406;&#x89E3;CAP","categories":[],"tags":[]},{"title":"怎样设计golang友好的api","slug":"怎样设计golang友好的api","date":"2018-12-23T17:08:47.000Z","updated":"2018-12-23T17:13:28.000Z","comments":true,"path":"2018/12/24/怎样设计golang友好的api/","link":"","permalink":"http://lqczzz.github.io/2018/12/24/怎样设计golang友好的api/","excerpt":"","text":"&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x662F;Dave Cheney&#x5728;2014&#x5E74;&#x53D1;&#x8868;&#x7684;&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x5728;go&#x8BED;&#x8A00;&#x7684;&#x63A5;&#x53E3;&#x8BBE;&#x8BA1;&#x4E0A;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x8D77;&#x5230;&#x4E86;&#x6307;&#x660E;&#x706F;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x5305;&#x62EC;Micro&#x5728;&#x5185;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x90FD;&#x4F7F;&#x7528;&#x4E86;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x63D0;&#x4F9B;API&#x3002;&#x539F;&#x6587;&#x770B;&#x8FD9;&#x91CC; &#x6B63;&#x6587;&#x5F00;&#x59CB;&#xFF1A; &#x4E0B;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x6211;&#x7684;&#x4E00;&#x6B21;&#x6F14;&#x793A;&#x7684;&#x6587;&#x5B57;&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x5728;dotGo&#x4E0A;&#x6F14;&#x8BB2;&#x7684;&#x300E;Functional options for friendly APIs&#x300F;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x5DF2;&#x7ECF;&#x7F16;&#x8F91;&#x7684;&#x53EF;&#x8BFB;&#x4E86;&#x3002; &#x6211;&#x60F3;&#x7528;&#x4E00;&#x4E2A;&#x6545;&#x4E8B;&#x4F5C;&#x4E3A;&#x5F00;&#x5934;&#x3002; &#x5728;2014&#x5E74;&#x7684;&#x665A;&#x4E9B;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x7684;&#x516C;&#x53F8;&#x53D1;&#x5E03;&#x4E86;&#x4E00;&#x6B3E;&#x9769;&#x547D;&#x6027;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x793E;&#x4EA4;&#x7F51;&#x7EDC;&#x5DE5;&#x5177;&#xFF0C;&#x5F88;&#x660E;&#x667A;&#x7684;&#xFF0C;&#x4F60;&#x9009;&#x62E9;&#x4E86;Go&#x6765;&#x5F00;&#x53D1;&#x4F60;&#x7684;&#x4EA7;&#x54C1;&#x3002; &#x4F60;&#x5206;&#x914D;&#x5230;&#x7684;&#x4EFB;&#x52A1;&#x662F;&#x7F16;&#x5199;&#x6781;&#x4E3A;&#x91CD;&#x8981;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x7EC4;&#x4EF6;&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x53EF;&#x80FD;&#x50CF;&#x8FD9;&#x6837; &#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E9B;&#x4E0D;&#x53EF;&#x5BFC;&#x51FA;&#x7684;&#x5B57;&#x6BB5;&#x9700;&#x8981;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;goroutine&#x8FD0;&#x884C;&#x8D77;&#x6765;&#xFF0C;&#x54CD;&#x5E94;&#x8BF7;&#x6C42;&#x3002; &#x8FD9;&#x4E2A;&#x5305;&#x6709;&#x5F88;&#x7B80;&#x5355;&#x7684;API&#xFF0C;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x4F7F;&#x7528;&#x3002; &#x4F46;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x4F60;&#x53D1;&#x5E03;&#x4E86;&#x4F60;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x540E;&#xFF0C;&#x65B0;&#x7684;&#x9700;&#x6C42;&#x4E0D;&#x65AD;&#x7684;&#x88AB;&#x63D0;&#x51FA;&#x6765;&#x3002; &#x624B;&#x673A;&#x5BA2;&#x6237;&#x7AEF;&#x7ECF;&#x5E38;&#x662F;&#x54CD;&#x5E94;&#x7684;&#x5F88;&#x6162;&#xFF0C;&#x751A;&#x81F3;&#x505C;&#x6B62;&#x54CD;&#x5E94;&#x3002;&#x4F60;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x652F;&#x6301;&#x6765;&#x5BF9;&#x6162;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4E3B;&#x52A8;&#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#x3002; &#x4E3A;&#x4E86;&#x589E;&#x52A0;&#x5B89;&#x5168;&#xFF0C;&#x65B0;&#x7684;&#x9700;&#x6C42;&#x662F;&#x589E;&#x52A0;&#x5B89;&#x5168;&#x8FDE;&#x63A5;&#xFF08;TLS&#xFF09;&#x3002; &#x7136;&#x540E;&#xFF0C;&#x4F60;&#x7684;&#x67D0;&#x4E9B;&#x7528;&#x6237;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x5F88;&#x5C0F;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x8FD0;&#x884C;&#x670D;&#x52A1;&#xFF0C;&#x4ED6;&#x4EEC;&#x9700;&#x8981;&#x9650;&#x5236;&#x5BA2;&#x6237;&#x7AEF;&#x6570;&#x91CF;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x60F3;&#x8981;&#x5BF9;&#x5E76;&#x53D1;&#x6570;&#x8FDB;&#x884C;&#x9650;&#x5236;&#x3002; &#x4E0D;&#x65AD;&#x7684;&#x65B0;&#x9700;&#x6C42;&#x2026; &#x9650;&#x5236;&#x4F60;&#x9700;&#x8981;&#x8C03;&#x6574;&#x4F60;&#x7684;API&#x6765;&#x6EE1;&#x8DB3;&#x8FD9;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x65B0;&#x9700;&#x6C42; &#x8FD8;&#x9700;&#x8981;&#x8003;&#x8651;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x76F4;&#x63A5;&#x63A5;&#x53E3;&#x7684;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#x3002; &#x5B9E;&#x8BDD;&#x8BF4;&#xFF0C;&#x8C01;&#x7528;&#x8FC7;&#x8FD9;&#x6837;&#x7684;API&#xFF1F; &#x8C01;&#x7F16;&#x5199;&#x8FC7;&#x8FD9;&#x6837;&#x7684;API? &#x8C01;&#x7684;&#x4EE3;&#x7801;&#x4EE5;&#x4E3A;&#x4F9D;&#x8D56;&#x4E86;&#x8FD9;&#x6837;&#x7684;&#x5305;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#x4E86;&#xFF1F; &#x660E;&#x663E;&#x7684;&#x8FD9;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;&#x662F;&#x7B28;&#x91CD;&#x800C;&#x8106;&#x5F31;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x4E0D;&#x5BB9;&#x6613;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#x3002; &#x4F60;&#x7684;&#x5305;&#x7684;&#x65B0;&#x7528;&#x6237;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x54EA;&#x4E9B;&#x53C2;&#x6570;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x54EA;&#x4E9B;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x3002; &#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x60F3;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x7684;&#x5B9E;&#x4F8B;&#x4F5C;&#x4E3A;&#x6D4B;&#x8BD5;&#xFF0C;&#x6211;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x771F;&#x5B9E;&#x7684;TLS&#x8BC1;&#x4E66;&#x5417;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x9700;&#x8981;&#xFF0C;&#x6211;&#x9700;&#x8981;&#x5728;&#x63A5;&#x53E3;&#x4E2D;&#x63D0;&#x4F9B;&#x4EC0;&#x4E48;&#xFF1F; &#x5982;&#x679C;&#x6211;&#x4E0D;&#x5173;&#x5FC3;&#x6700;&#x5927;&#x8FDE;&#x63A5;&#x6570;&#xFF0C;&#x6216;&#x8005;&#x6700;&#x5927;&#x5E76;&#x53D1;&#x6570;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x5728;&#x53C2;&#x6570;&#x4E2D;&#x8BBE;&#x7F6E;&#x4EC0;&#x4E48;&#x503C;&#xFF0C;&#x6211;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;0&#xFF1F;0&#x542C;&#x8D77;&#x6765;&#x662F;&#x5408;&#x7406;&#x7684;&#xFF0C;&#x4F46;&#x8FD9;&#x4F9D;&#x8D56;&#x4E8E;&#x5177;&#x4F53;&#x7684;&#x63A5;&#x53E3;&#x662F;&#x600E;&#x6837;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x8BB8;&#x771F;&#x7684;&#x4F1A;&#x5BFC;&#x81F4;&#x5E76;&#x53D1;&#x6570;&#x9650;&#x5236;&#x4E3A;0&#x3002; &#x5728;&#x6211;&#x770B;&#x6765;&#xFF0C;&#x8FD9;&#x6837;&#x5199;API&#x662F;&#x5BB9;&#x6613;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#x4F60;&#x628A;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x63A5;&#x53E3;&#x7684;&#x8D23;&#x4EFB;&#x629B;&#x7ED9;&#x4E86;&#x4F7F;&#x7528;&#x8005;&#x3002; &#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x751A;&#x81F3;&#x4EE3;&#x7801;&#x5199;&#x7684;&#x5F88;&#x7CDF;&#x7CD5;&#xFF0C;&#x6587;&#x6863;&#x4E5F;&#x4E0D;&#x53CB;&#x597D;&#xFF0C;&#x6211;&#x60F3;&#x8FD9;&#x793A;&#x8303;&#x4E86;&#x4E00;&#x4E2A;&#x770B;&#x8D77;&#x6765;&#x534E;&#x4E3D;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x8106;&#x5F31;&#x7684;API&#x8BBE;&#x8BA1;&#x3002; &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5B9A;&#x4F4D;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; &#x4E0E;&#x5176;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x63A5;&#x53E3;&#x5904;&#x7406;&#x591A;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#x63D0;&#x4F9B;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x63A5;&#x53E3;&#x3002; &#x7528;&#x6237;&#x6309;&#x9700;&#x8C03;&#x7528;&#x5373;&#x53EF;&#x3002; &#x4F46;&#x4F60;&#x5F88;&#x5FEB;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x63D0;&#x4F9B;&#x5982;&#x6B64;&#x5927;&#x91CF;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5F88;&#x5FEB;&#x4F1A;&#x8BA9;&#x4F60;&#x4E0D;&#x582A;&#x91CD;&#x8D1F;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x3002; &#x4E00;&#x79CD;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x7ED3;&#x6784;&#x4F53;&#x3002; &#x8FD9;&#x6709;&#x4E00;&#x4E9B;&#x4F18;&#x52BF;&#x3002; &#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x65B0;&#x7684;&#x9700;&#x6C42;&#x52A0;&#x5165;&#xFF0C;&#x5728;&#x7ED3;&#x6784;&#x4F53;&#x4E2D;&#x589E;&#x52A0;&#x9009;&#x9879;&#x5373;&#x53EF;&#x3002;&#x5BF9;&#x5916;&#x7684;&#x516C;&#x5171;API&#x4ECD;&#x7136;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002;&#x8FD9;&#x4E5F;&#x80FD;&#x8BA9;&#x6587;&#x6863;&#x66F4;&#x52A0;&#x53CB;&#x597D;&#x3001;&#x53EF;&#x8BFB;&#x3002; &#x5728;&#x7ED3;&#x6784;&#x4F53;&#x4E0A;&#x6CE8;&#x660E;&#x8FD9;&#x662F;NewServer&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6587;&#x6863;&#x4E0A;&#x4E5F;&#x5F88;&#x5BB9;&#x6613;&#x8BC6;&#x522B;&#x3002; &#x6F5C;&#x5728;&#x7684;&#x5B83;&#x4E5F;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x4F7F;&#x7528;0&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x503C;&#x3002; &#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x5E76;&#x4E0D;&#x5B8C;&#x7F8E;&#x3002; &#x5BF9;&#x4E8E;&#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x6709;&#x6B67;&#x4E49;&#x7684;&#xFF0C;&#x7279;&#x522B;&#x662F;0&#x7684;&#x503C;&#x5982;&#x679C;&#x6709;&#x7279;&#x522B;&#x7684;&#x542B;&#x4E49;&#x3002; &#x6BD4;&#x5982;&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x914D;&#x7F6E;&#x7ED3;&#x6784;&#x4E2D;&#xFF0C;&#x5982;&#x679C;port&#x6CA1;&#x6709;&#x88AB;&#x8BBE;&#x7F6E;&#xFF0C;NewServer&#x4F1A;&#x76D1;&#x542C;8080&#x7AEF;&#x53E3;&#x3002; &#x4F46;&#x662F;&#x8FD9;&#x6709;&#x4E00;&#x4E2A;&#x8D1F;&#x9762;&#x5F71;&#x54CD;&#xFF0C;&#x4F60;&#x4E5F;&#x8BB8;&#x60F3;&#x8BBE;&#x7F6E;&#x4E3A;0&#xFF0C;&#x7136;&#x540E;&#x670D;&#x52A1;&#x7AEF;&#x9ED8;&#x8BA4;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x7AEF;&#x53E3;&#xFF0C;&#x4F46;&#x4F60;&#x8BBE;&#x7F6E;&#x7684;0&#x4E0E;&#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x5927;&#x90E8;&#x5206;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x7684;API&#x7528;&#x6237;&#x53EA;&#x662F;&#x60F3;&#x4F7F;&#x7528;&#x4F60;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x3002; &#x5373;&#x4F7F;&#x4ED6;&#x4EEC;&#x4E0D;&#x60F3;&#x6539;&#x53D8;&#x4F60;&#x7684;&#x914D;&#x7F6E;&#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#xFF0C;&#x4ECD;&#x7136;&#x4E0D;&#x5F97;&#x4E0D;&#x4F20;&#x5165;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#x3002; &#x5F53;&#x4F60;&#x7684;&#x7528;&#x6237;&#x8BFB;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x6216;&#x8005;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x5728;&#x60F3;&#x7740;&#x600E;&#x6837;&#x4F7F;&#x7528;&#x4F60;&#x7684;&#x5305;&#xFF0C;&#x4ED6;&#x4EEC;&#x4F1A;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x9B54;&#x5E7B;&#x7684;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x53C2;&#x6570;&#x3002; &#x5BF9;&#x6211;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x8BA9;&#x6211;&#x611F;&#x89C9;&#x5F88;&#x7CDF;&#x7CD5;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x4F60;&#x7684;API&#x7684;&#x7528;&#x6237;&#x9700;&#x8981;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x503C;&#xFF0C;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x8BA9;&#x4F60;&#x7684;&#x51FD;&#x6570;&#x6EE1;&#x8DB3;&#x58F0;&#x660E;&#x9700;&#x6C42;&#xFF1F; &#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7684;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x662F;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x8BA9;&#x8C03;&#x7528;&#x8005;&#x53EF;&#x4EE5;&#x4F20;&#x5165;nil&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x7A7A;&#x503C;&#x7684;&#x95EE;&#x9898;&#x3002; &#x5728;&#x6211;&#x770B;&#x6765;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;&#x6709;&#x524D;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x751A;&#x81F3;&#x8BA9;&#x95EE;&#x9898;&#x66F4;&#x590D;&#x6742;&#x4E86;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x4ECD;&#x7136;&#x9700;&#x8981;&#x5728;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x70B9;&#x4EC0;&#x4E48;&#xFF0C;&#x4F46;&#x76EE;&#x524D;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x662F;nil&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x5927;&#x90E8;&#x5206;&#x65F6;&#x5019;&#xFF0C;&#x5BF9;&#x4E8E;&#x9ED8;&#x8BA4;&#x7684;&#x4F7F;&#x7528;&#x8005;&#xFF0C;&#x5B83;&#x5C31;&#x662F;nil&#x3002; &#x4F7F;&#x7528;&#x6307;&#x9488;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5305;&#x7684;&#x4F5C;&#x8005;&#x548C;&#x4F7F;&#x7528;&#x8005;&#x90FD;&#x4F1A;&#x62C5;&#x5FC3;&#x7684;&#x662F;&#xFF0C;&#x4ED6;&#x4EEC;&#x5F15;&#x7528;&#x4E86;&#x540C;&#x4E00;&#x4EFD;&#x6570;&#x636E;&#xFF0C;&#x968F;&#x65F6;&#x6709;&#x53EF;&#x80FD;&#x5728;&#x8FD0;&#x884C;&#x4E2D;&#x8FD9;&#x4EFD;&#x6570;&#x636E;&#x88AB;&#x4FEE;&#x6539;&#x800C;&#x53D1;&#x751F;&#x7A81;&#x53D8;&#x3002; &#x6211;&#x60F3;&#x8BBE;&#x8BA1;&#x7CBE;&#x826F;&#x7684;API&#x4E0D;&#x5E94;&#x8BE5;&#x8981;&#x6C42;&#x7528;&#x6237;&#x4F20;&#x9012;&#x8FD9;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x5E94;&#x5BF9;&#x4E00;&#x4E9B;&#x7F55;&#x89C1;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x6211;&#x8BA4;&#x4E3A;&#x6211;&#x4EEC;&#xFF0C;Go&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x5E94;&#x8BE5;&#x52AA;&#x529B;&#x786E;&#x4FDD;&#x4E0D;&#x8981;&#x6C42;&#x7528;&#x6237;&#x4F20;&#x9012;&#x4E00;&#x4E2A;nil&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4F20;&#x9012;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x65F6;&#xFF0C;&#x8FD9;&#x5E94;&#x8BE5;&#x662F;&#x81EA;&#x89E3;&#x91CA;&#x7684;&#xFF0C;&#x5C3D;&#x91CF;&#x7684;&#x6709;&#x8868;&#x8FBE;&#x6027;&#x3002; &#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x6000;&#x7740;&#x8FD9;&#x6837;&#x7684;&#x7406;&#x5FF5;&#xFF0C;&#x6211;&#x8BA8;&#x8BBA;&#x4E00;&#x4E0B;&#x6211;&#x8BA4;&#x4E3A;&#x66F4;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9;API&#x628A;&#x4E0D;&#x5FC5;&#x987B;&#x7684;&#x53C2;&#x6570;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x53D8;&#x53C2;&#x3002; &#x4E0D;&#x662F;&#x4F20;&#x5165;nil&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x4E9B;&#x503C;&#x4E3A;0&#x7684;&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x8FD9;&#x79CD;&#x51FD;&#x6570;&#x7684;&#x8BBE;&#x8BA1;&#x53D1;&#x51FA;&#x4E86;&#x8FD9;&#x6837;&#x7684;&#x4FE1;&#x53F7;&#xFF1A;&#x4F60;&#x4E0D;&#x9700;&#x8981;&#x5728;config&#x4E0A;&#x4F20;&#x5165;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#x3002; &#x5728;&#x6211;&#x770B;&#x6765;&#x8FD9;&#x89E3;&#x51B3;&#x4E86;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x5F0F;&#x53D8;&#x5F97;&#x7B80;&#x4ECB;&#x547D;&#x4E86;&#x3002; &#x5176;&#x6B21;&#xFF0C;NewServer&#x73B0;&#x5728;&#x53EA;&#x63A5;&#x53D7;config&#x7684;&#x503C;&#xFF0C;&#x4E0D;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x79FB;&#x9664;&#x4E86;nil&#x548C;&#x5176;&#x4ED6;&#x53EF;&#x80FD;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x786E;&#x4FDD;&#x7528;&#x6237;&#x4E0D;&#x4F1A;&#x4FEE;&#x6539;&#x5DF2;&#x7ECF;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x3002; &#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x4E2A;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x63D0;&#x5347;&#x3002; &#x4F46;&#x6211;&#x4EEC;&#x6DF1;&#x7A76;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x4ECD;&#x7136;&#x6709;&#x95EE;&#x9898;&#x3002; &#x660E;&#x663E;&#x5BF9;&#x4F60;&#x7684;&#x9884;&#x671F;&#x662F;&#x63D0;&#x4F9B;&#x6700;&#x591A;&#x4E00;&#x4E2A;config&#x503C;&#xFF0C;&#x4F46;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x53D8;&#x53C2;&#xFF0C;&#x5B9E;&#x73B0;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x8003;&#x8651;&#x7528;&#x6237;&#x4F20;&#x5165;&#x591A;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x65E2;&#x80FD;&#x4F7F;&#x7528;&#x53D8;&#x53C2;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x80FD;&#x63D0;&#x9AD8;&#x6211;&#x4EEC;&#x7684;&#x53C2;&#x6570;&#x7684;&#x8868;&#x8FBE;&#x6027;&#x5417;&#xFF1F; &#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x5C31;&#x662F;&#x7ED3;&#x5C40;&#x65B9;&#x6848;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#x6211;&#x60F3;&#x8981;&#x8BF4;&#x6E05;&#x695A;&#xFF0C;&#x51FD;&#x6570;&#x5F0F;&#x53C2;&#x6570;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#x6765;&#x81EA;&#x4E8E;Rob Pike&#x7684;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;Self referential functions and design &#xFF0C;&#x6211;&#x9F13;&#x52B1;&#x6BCF;&#x4E2A;&#x4EBA;&#x90FD;&#x53BB;&#x770B;&#x770B;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0E;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5173;&#x952E;&#x7684;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#xFF0C;&#x670D;&#x52A1;&#x7684;&#x5B9A;&#x5236;&#x5316;&#x5E76;&#x4E0D;&#x662F;&#x901A;&#x8FC7;&#x4F20;&#x9012;&#x53C2;&#x6570;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x51FD;&#x6570;&#x6765;&#x76F4;&#x63A5;&#x4FEE;&#x6539;server&#x7684;&#x914D;&#x7F6E;&#x672C;&#x8EAB;&#x3002; &#x6B63;&#x5982;&#x524D;&#x9762;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x4E0D;&#x4F20;&#x9012;&#x53D8;&#x53C2;&#x8BA9;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x5F53;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;server&#x7684;&#x914D;&#x7F6E;&#x7684;&#x51FD;&#x6570;&#x3002; &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;timeout&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x7528;&#x4E8E;&#x6539;&#x53D8;server&#x7684;&#x914D;&#x7F6E;&#x4E2D;&#x7684;timeout&#x5B57;&#x6BB5;&#x3002; &#x5728;NewServer&#x7684;&#x5B9E;&#x73B0;&#x5185;&#x90E8;&#xFF0C;&#x76F4;&#x63A5;&#x5E94;&#x7528;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x5373;&#x53EF;&#x3002; &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8C03;&#x7528;&#x4E86;&#x4E00;&#x4E2A; net.Listener&#xFF0C;&#x5728;server&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;&#x8FD9;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;listener&#x3002; &#x7136;&#x540E;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x4F20;&#x5165;&#x7684;option&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x8C03;&#x7528;&#x5B83;&#xFF0C;&#x628A;&#x6211;&#x4EEC;&#x7684;&#x914D;&#x7F6E;&#x4F20;&#x5165;&#x8FDB;&#x53BB;&#x3002; &#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;option&#x4F20;&#x9012;&#x8FDB;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x9ED8;&#x8BA4;&#x7684;server. &#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9;API&#x6709;&#x8FD9;&#x6837;&#x7684;&#x7279;&#x6027; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x662F;&#x5B9E;&#x7528;&#x7684; &#x9AD8;&#x5EA6;&#x53EF;&#x914D;&#x7F6E; &#x914D;&#x7F6E;&#x53EF;&#x4EE5;&#x4E0D;&#x65AD;&#x589E;&#x957F; &#x81EA;&#x89E3;&#x91CA;&#x7684;&#x6587;&#x6863; &#x5BF9;&#x65B0;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x5F88;&#x5B89;&#x5168; &#x4E0D;&#x4F1A;&#x8981;&#x6C42;&#x4F20;&#x5165;&#x4E00;&#x4E2A;nil&#x7684;&#x6216;&#x8005;&#x7A7A;&#x503C;&#xFF08;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#xFF09;","categories":[],"tags":[]},{"title":"可插拔式代码结构思考","slug":"可插拔式代码结构思考","date":"2018-12-12T11:10:36.000Z","updated":"2018-12-23T17:04:23.000Z","comments":true,"path":"2018/12/12/可插拔式代码结构思考/","link":"","permalink":"http://lqczzz.github.io/2018/12/12/可插拔式代码结构思考/","excerpt":"","text":"&#x4EC0;&#x4E48;&#x662F;&#x53EF;&#x63D2;&#x62D4;&#x5F0F;&#x6846;&#x67B6;&#x6700;&#x65E9;&#x63A5;&#x89E6;&#x53EF;&#x63D2;&#x62D4;&#x5F0F;&#x7684;&#x6846;&#x67B6;&#x662F;python&#x7684;flask&#xFF0C;&#x5F53;&#x65F6;&#x89C9;&#x5F97;&#x8FD9;&#x73A9;&#x610F;&#x8001;&#x725B;&#x903C;&#x4E86;&#xFF0C;&#x4EFB;&#x4F55;&#x7EC4;&#x4EF6;&#x90FD;&#x80FD;&#x66FF;&#x6362;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7528;jinja2/mako&#x6765;&#x505A;&#x6A21;&#x7248;&#x5F15;&#x64CE;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x9009;&#x62E9;SQLAlchemy&#x6216;&#x8005;&#x5176;&#x4ED6;orm&#x6846;&#x67B6;&#x6765;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x3002; &#x601D;&#x8003;&#x4E86;&#x5F88;&#x4E45;&#xFF0C;pluggable&#x7684;&#x672C;&#x8D28;&#x5728;&#x4E8E;&#x53EF;&#x66FF;&#x6362;&#x3002;&#x53EF;&#x66FF;&#x6362;&#x5728;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x5904;&#x5904;&#x90FD;&#x53EF;&#x4EE5;&#x4F53;&#x73B0;&#xFF0C;&#x6BD4;&#x5982;mysql&#x9A71;&#x52A8;&#x548C;mysql&#x9A71;&#x52A8;&#x5B9E;&#x73B0;&#xFF0C;orm&#x6846;&#x67B6;&#x548C;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;&#x540C;&#x6837;&#x7684;orm&#x6846;&#x67B6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x8FDE;&#x63A5;&#x6C60;&#x3002;&#x800C;&#x8FD9;&#x79CD;&#x53EF;&#x66FF;&#x6362;&#x5728;&#x4E8E;&#x62BD;&#x8C61;&#xFF0C;golang&#x6807;&#x51C6;&#x5E93;&#x7ED9;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x5957;&#x6807;&#x51C6;&#x7684;sql&#x64CD;&#x4F5C;&#x63A5;&#x53E3;&#xFF0C;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x3002; &#x8FD9;&#x6837;&#x60F3;&#xFF0C;pluggable&#x4E5F;&#x662F;&#x79BB;&#x4E0D;&#x5F00;&#x62BD;&#x8C61;&#x7684;&#x3002;&#x62BD;&#x7A7A;&#x7814;&#x7A76;&#x4E86;&#x4E00;&#x4E0B;micro&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#xFF0C;&#x786E;&#x5B9E;&#x5982;&#x6B64;&#x3002; &#x53EF;&#x9ED8;&#x8BA4;&#xFF0C;&#x53EF;&#x66FF;&#x6362;1. &#x9ED8;&#x8BA4;&#x53C2;&#x6570;pluggable,&#x6700;&#x76F4;&#x89C2;&#x7684;&#x7406;&#x89E3;&#x5927;&#x6982;&#x5C31;&#x662F;&#x201C;&#x53EF;&#x4EE5;&#x66FF;&#x6362;&#xFF0C;&#x4E0D;&#x66FF;&#x6362;&#x4E5F;&#x884C;&#x201D;&#x3002;&#x5728;&#x7F16;&#x7801;&#x4E2D;&#xFF0C;&#x5F88;&#x591A;&#x8BED;&#x8A00;&#x5929;&#x751F;&#x6709;&#x4E00;&#x9879;&#x80FD;&#x529B;&#x548C;&#x8FD9;&#x4E2A;&#x7C7B;&#x4F3C;&#x2014;&#x2014;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF1A; # python def test(name=&quot;lqczzz&quot;): print(name) test() # &quot;lqczzz&quot; test(&quot;jack&quot;) # &quot;jack&quot; &#x8FD9;&#x91CC;&#xFF0C;name&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x662F;&#x53EF;&#x4EE5;&#x66FF;&#x6362;&#x7684;&#xFF0C;&#x67D0;&#x79CD;&#x610F;&#x4E49;&#x4E0A;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x201C;pluggable&#x201D; 2. &#x53EF;&#x9009;&#x53C2;&#x6570; + &#x9ED8;&#x8BA4;&#x503C;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x5F88;&#x65B9;&#x4FBF;&#xFF0C;golang&#x6CA1;&#x6709;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;,&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x548C;&#x9ED8;&#x8BA4;&#x503C;&#x6765;&#x5B9E;&#x73B0; const DefaultName = &quot;lqczzz&quot; func test(args ...string) { name := DefaultName if len(args) != 0 { name = args[0] } fmt.Println(name) } // &#x4E0D;&#x4F20;&#x53C2;&#x6570; test() // &quot;lqczzz&quot; // &#x4F20;&#x53C2;&#x6570; test(&quot;jack&quot;) // &quot;jack&quot; micro&#x7684;&#x53EF;&#x63D2;&#x62D4;&#x5F0F;&#x7684;&#x5B9E;&#x73B0;&#x672C;&#x8D28;&#x4E0A;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x3002; // eg: type iBE interface { FeatureImpl() } type beOption struct { pm iPM } type qczzzl struct { opts beOption } func (qc *qczzzl) FeatureImpl() { qc.opts.pm.AddFeature() fmt.Println(&quot;qczzzl will implement it!&quot;) } pm = &amp;defaultPM{} be = &amp;qczzzl{opts: beOption{pm: pm}} be.FeatureImpl() // output: // zhangiaolong add feature // qczzzl will implement it! // &#x6362;pm newPm := &amp;pmLiyunlong{} be.opts.pm = newPm be.FeatureImpl() // output: // liyunlong add feature // qczzzl will implement it! 3. &#x63A5;&#x53E3;&#x51FD;&#x6570;&#x5F0F;&#x53C2;&#x6570;&#x6A21;&#x5757;&#x7684;&#x62BD;&#x8C61;&#x53D8;&#x5316;&#x548C;&#x4E0D;&#x53D8; &#x63A5;&#x53E3;&#x5951;&#x7EA6;&#x4E0D;&#x53D8;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x53D8;&#x5316; struct&#x5C01;&#x88C5;&#x4F9D;&#x8D56;&#x7684;&#x53D8;&#x5316;&#xFF08;&#x4E0D;&#x53D8;&#x7684;&#x5951;&#x7EA6;&#x4F9D;&#x8D56;&#xFF09;&#x5C01;&#x88C5;&#x901A;&#x7528;&#x6570;&#x636E;&#xFF08;&#x4E0D;&#x53D8;&#x7684;&#x6570;&#x636E;&#x4F9D;&#x8D56;&#xFF09;","categories":[],"tags":[]},{"title":"[转]go服务监控指标(metric)上报open-falcon","slug":"转-go服务监控指标-metric-上报open-falcon","date":"2018-11-26T05:20:30.000Z","updated":"2018-11-26T05:38:22.000Z","comments":true,"path":"2018/11/26/转-go服务监控指标-metric-上报open-falcon/","link":"","permalink":"http://lqczzz.github.io/2018/11/26/转-go服务监控指标-metric-上报open-falcon/","excerpt":"","text":"&#x51FA;&#x5904; 1. &#x6982;&#x8FF0;&#x6307;&#x6807;&#x7EDF;&#x8BA1;&#x662F;&#x5B9E;&#x73B0;APM&#xFF08;Application performance management)&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x901A;&#x5E38;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x6307;&#x6807;&#x7684;&#x7EDF;&#x8BA1;&#x4EE5;&#x53CA;&#x4E0A;&#x62A5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E86;&#x89E3;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x72B6;&#x51B5;&#xFF0C;&#x53CA;&#x65F6;&#x53D1;&#x73B0;&#x7A0B;&#x5E8F;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x63D0;&#x524D;&#x9884;&#x4F30;&#x7CFB;&#x7EDF;&#x74F6;&#x9888;&#xFF0E;&#x6307;&#x6807;(metric)&#x76EE;&#x524D;&#x7684;&#x5B9E;&#x73B0;&#x6709;metrics,&#x8FD9;&#x662F;java&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5F15;&#x5165;&#x7A0B;&#x5E8F;&#x4F5C;&#x4E3A;&#x5E93;&#x4F7F;&#x7528;&#xFF0E;go&#x8BED;&#x8A00;&#x7684;&#x5B9E;&#x73B0;&#x89C1;go-metrics.&#x53E6;&#x5916;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x5C06;&#x6307;&#x6807;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x53CA;&#x8BA1;&#x7B97;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x5C55;&#x793A;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x6570;&#x636E;&#x629B;&#x51FA;&#x6765;&#xFF0C;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x629B;&#x5230;&#x65E5;&#x5FD7;&#x91CC;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x629B;&#x5230;&#x65F6;&#x5E8F;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x505A;&#x6CD5;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x629B;&#x5230;&#x76D1;&#x63A7;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x7ED8;&#x56FE;&#x6216;&#x8005;&#x62A5;&#x8B66;&#xFF0E;&#x56E0;&#x6B64;&#x672C;&#x6587;&#x540E;&#x9762;&#x5C06;&#x8BB2;&#x89E3;&#x5404;&#x6307;&#x6807;&#x7684;&#x542B;&#x4E49;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x5C06;&#x8BA1;&#x7B97;&#x597D;&#x7684;&#x6570;&#x636E;&#x629B;&#x5230;&#x76D1;&#x63A7;open-falcon 2.&#x6307;&#x6807;&#x7EDF;&#x8BA1;&#x65B9;&#x5F0F;2.1 Meters&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x7684;&#x8BA1;&#x91CF;&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x63A5;&#x53E3;&#x8C03;&#x7528;&#x9891;&#x7387;&#xFF0C;&#x5982;QPS(&#x6BCF;&#x79D2;&#x7684;&#x6B21;&#x6570;)&#xFF0C;&#x4E3B;&#x8981;&#x5206;&#x4E3A;rateMean,Rate1/Rate5/Rate15&#x7B49;&#x6307;&#x6807;&#xFF0E; RateMean&#x5355;&#x4F4D;&#x65F6;&#x95F4;&#x5185;&#x53D1;&#x751F;&#x7684;&#x6B21;&#x6570;&#xFF0C;&#x5982;&#x4E00;&#x5206;&#x949F;&#x53D1;&#x9001;100&#x6B21;&#xFF0C;&#x5219;&#x8BE5;&#x503C;&#x4E3A;100/60. Rate1/Rate5/Rate151&#x5206;&#x949F;/5&#x5206;&#x949F;/15&#x5206;&#x949F;&#x5185;&#x7684;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C;(moving average), 2.2 Gauges&#x7528;&#x4E8E;&#x5BF9;&#x77AC;&#x65F6;&#x503C;&#x7684;&#x6D4B;&#x91CF;&#xFF0C;&#x5982;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FC7;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5C31;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x91CF;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#xFF0C;&#x5E76;&#x4E0A;&#x62A5;&#xFF0C;&#x90A3;&#x4E48;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x70B9;&#x96C6;&#x5C31;&#x662F;&#x5BF9;&#x5E94;&#x65F6;&#x95F4;&#x70B9;&#x7684;&#x5185;&#x5B58;&#x503C;&#xFF0C;Gauges&#x53EA;&#x6709;value&#x6307;&#x6807;&#xFF0E;&#x4E5F;&#x5C31;&#x662F;&#x4E0A;&#x62A5;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x5C31;&#x662F;&#x4EC0;&#x4E48;&#xFF0E; 2.3 Counter&#x8BA1;&#x6570;&#x7C7B;&#x7EDF;&#x8BA1;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x52A0;&#x6216;&#x51CF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5F52;&#x96F6;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;&#x65E7;&#x503C;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x8FDB;&#x884C;&#x7684;&#xFF0E;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6BCF;&#x5929;&#x5F52;&#x96F6;&#xFF0C;&#x7136;&#x540E;&#x65B0;&#x589E;&#x6CE8;&#x518C;&#x7528;&#x6237;&#x65F6;&#x52A0;1&#x6765;&#x7EDF;&#x8BA1;&#x6BCF;&#x5929;&#x7684;&#x6CE8;&#x518C;&#x7528;&#x6237;&#xFF0E; 2.4 Histograms&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x7684;&#x503C;&#x5206;&#x5E03;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x4E3A;&#x63A5;&#x53E3;&#x8017;&#x65F6;&#xFF0C;&#x63A5;&#x53E3;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x8017;&#x65F6;&#xFF0C;&#x8BB0;&#x5F55;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x8017;&#x65F6;&#x6765;&#x5BF9;&#x63A5;&#x53E3;&#x8017;&#x65F6;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x663E;&#x7136;&#x4E0D;&#x73B0;&#x5B9E;&#xFF0E;&#x56E0;&#x6B64;&#x5C06;&#x63A5;&#x53E3;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x7684;&#x8017;&#x65F6;&#x770B;&#x505A;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x5E76;&#x91C7;&#x96C6;Count&#xFF0C;Min, Max, Mean, Median, 75%, 95%, 99%&#x7B49;&#x6307;&#x6807;&#xFF0E;&#x4EE5;&#x76F8;&#x5BF9;&#x8F83;&#x5C0F;&#x7684;&#x8D44;&#x6E90;&#x6D88;&#x8017;&#xFF0C;&#x6765;&#x5C3D;&#x53EF;&#x80FD;&#x53CD;&#x5E94;&#x6570;&#x636E;&#x96C6;&#x7684;&#x771F;&#x5B9E;&#x60C5;&#x51B5;&#xFF0E; Count&#x8DDD;&#x79BB;&#x4E0A;&#x6B21;&#x6E05;&#x7406;&#x540E;&#x4EA7;&#x751F;&#x7684;&#x6837;&#x672C;&#x6570;&#x91CF;&#xFF0E; Min&#x6837;&#x672C;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x503C; Max&#x6837;&#x672C;&#x4E2D;&#x7684;&#x6700;&#x5927;&#x503C; Mean&#x6240;&#x6709;&#x6837;&#x672C;&#x7684;&#x6C42;&#x5F97;&#x7684;&#x5E73;&#x5747;&#x503C; Median&#x6837;&#x672C;&#x4E2D;&#x7684;&#x4E2D;&#x95F4;&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#xFF0E; 75%&#x6837;&#x672C;&#x4E2D;&#x7684;%75&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#xFF0E; 95%&#x6837;&#x672C;&#x4E2D;&#x7684;%95&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#xFF0E; 99%&#x6837;&#x672C;&#x4E2D;&#x7684;%99&#x4F4D;&#x7F6E;&#x7684;&#x503C;&#xFF0E; 2.5 Timers&#x5BF9;&#x67D0;&#x4E2A;&#x4EE3;&#x7801;&#x6A21;&#x5757;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#x7EDF;&#x8BA1;&#x8C03;&#x7528;&#x9891;&#x7387;&#x4EE5;&#x53CA;&#x8C03;&#x7528;&#x8017;&#x65F6;&#x7EDF;&#x8BA1;&#xFF0E;&#x6307;&#x6807;&#x5C31;&#x662F;Histograms&#x4EE5;&#x53CA;Meters&#x4E24;&#x79CD;&#x7EDF;&#x8BA1;&#x65B9;&#x5F0F;&#x7684;&#x5408;&#x96C6;&#xFF0E; 3.&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x66F4;&#x5BF9;&#x8BE6;&#x7EC6;&#x7528;&#x6CD5;&#x89C1;go-metric&#x6587;&#x6863; 3.1 Counterc := metrics.NewCounter() metrics.Register(&quot;foo&quot;, c) //&#x8FDB;&#x884C;&#x52A0;&#x64CD;&#x4F5C; c.Inc(47) //&#x8FDB;&#x884C;&#x51CF;&#x64CD;&#x4F5C; c.Dec(1) //&#x83B7;&#x53D6;&#x51FA;&#x503C; c.Count() 3.2 Gaugeg := metrics.NewGauge() metrics.Register(&quot;bar&quot;, g) //&#x66F4;&#x65B0;&#x77AC;&#x65F6;&#x503C; g.Update(47) //&#x83B7;&#x53D6;&#x51FA;&#x77AC;&#x65F6;&#x503C; g.Value() 3.3 Metersm := metrics.NewMeter() metrics.Register(&quot;quux&quot;, m) //&#x5199;&#x5165;&#x6570;&#x636E;&#x96C6; m.Mark(47) //&#x83B7;&#x53D6;&#x6570;&#x636E;&#x96C6;&#x53EA;&#x8BFB;&#x5FEB;&#x7167; m := metric.Snapshot() //&#x6570;&#x636E;&#x96C6;&#x5927;&#x5C0F; m.Count() //1&#x5206;&#x949F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C; m.Rate1() //5&#x5206;&#x949F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C; m.Rate5() //15&#x5206;&#x949F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C; m.Rate15() //&#x5E73;&#x5747;&#x503C; m.RateMean() 3.4 Histograms h := metrics.NewHistogram(s) metrics.Register(&quot;baz&quot;, h) //&#x5199;&#x5165;&#x6570;&#x636E;&#x96C6; h.Update(47) //&#x83B7;&#x53D6;&#x6570;&#x636E;&#x96C6;&#x53EA;&#x8BFB;&#x5FEB;&#x7167; h := metric.Snapshot() //&#x6570;&#x636E;&#x96C6;&#x5927;&#x5C0F; h.Count() //&#x6700;&#x5C0F;&#x503C; h.Min() //&#x6700;&#x5927;&#x503C; h.Max() //&#x5E73;&#x5747;&#x503C; h.Mean() ps := h.Percentiles([]float64{0.5, 0.75, 0.95, 0.99}) //&#x4E2D;&#x4F4D;&#x6570; ps[0] //75%&#x7684;&#x6570; ps[1] //95%&#x7684;&#x6570; ps[2] //99%&#x7684;&#x6570; ps[3] 3.5 Timer t := metrics.NewTimer() metrics.Register(&quot;bang&quot;, t) t.Time(func() { //do some thing }) t.Update(47) //&#x83B7;&#x53D6;&#x65B9;&#x5F0F;&#x540C;meter&#x4EE5;&#x53CA;Histograms 4. &#x6307;&#x6807;&#x4E0A;&#x62A5;&#x5230;open-falcon4.1 &#x4E0A;&#x62A5;&#x65B9;&#x5F0F;&#x4EE3;&#x7801;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x89C1; go-metrics-falcon &#x5B9E;&#x73B0;&#x6570;&#x636E;&#x4E0A;&#x62A5;open-falcon&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x6240;&#x6709;&#x6570;&#x636E;&#x53D6;&#x51FA;&#xFF0C;&#x6309;open-falcon&#x683C;&#x5F0F;&#x4E0A;&#x62A5;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x6D89;&#x53CA;&#x5230;&#x4E0A;&#x62A5;json&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#xFF0E; { &quot;endpoint&quot;: &quot;$endpoint&quot;, &quot;metric&quot;: &quot;$name&quot;, &quot;value&quot;: 2.2, &quot;step&quot;: 60, &quot;counterType&quot;: &quot;GAUGE&quot;, &quot;tags&quot;: &quot;project=$projectName,metricType=meter,valueType=ratemean&quot;, &quot;timestamp&quot;: 1524724608 } endpoint: &#x8FD9;&#x4E00;&#x4E2A;&#x4E00;&#x822C;&#x662F;&#x4E3B;&#x673A;hostname&#xFF0C;&#x7528;&#x4E8E;&#x6807;&#x6CE8;&#x662F;&#x54EA;&#x53F0;&#x673A;&#x5668;&#xFF0E; metric: &#x6307;&#x6807;&#x540D;&#xFF0C;&#x7531;&#x7528;&#x6237;&#x5B9A;&#x4E49; value: &#x6307;&#x6807;&#x7684;&#x503C; step: &#x4E0A;&#x62A5;&#x7684;&#x65F6;&#x95F4;&#x5468;&#x671F; counterType: &#x4E0A;&#x62A5;&#x7684;&#x7C7B;&#x578B;,&#x8FD9;&#x91CC;open-falcon&#x53EA;&#x652F;&#x6301;GAUGE&#x4EE5;&#x53CA;COUNTER,&#x56E0;&#x6B64;&#x7EDF;&#x4E00;&#x4F7F;&#x7528;GAUGE. tags: &#x6807;&#x7B7E;&#xFF0C;&#x7528;&#x4E8E;&#x5374;&#x522B;&#x6307;&#x6807;&#xFF0C;&#x5305;&#x542B;&#x6307;&#x6807;&#x7C7B;&#x578B;&#xFF0C;&#x503C;&#x7C7B;&#x578B;&#xFF0C;&#x9879;&#x76EE;&#x540D;&#x4E09;&#x9879;&#xFF0E; timestamp: &#x6307;&#x6807;&#x4E0A;&#x62A5;&#x7684;&#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x5355;&#x4F4D;&#x79D2;&#xFF0E; 4.2 &#x6548;&#x679C;&#x5982;&#x56FE;&#xFF0C;&#x8F93;&#x5165;endpoint, &#x7136;&#x540E;&#x5728;counter&#x90E8;&#x5206;&#x8F93;&#x5165;&#x9879;&#x76EE;&#x540D;&#x5C31;&#x53EF;&#x4EE5;&#x8FC7;&#x6EE4;&#x51FA;&#x8BE5;&#x9879;&#x76EE;&#x4E0A;&#x62A5;&#x7684;&#x6240;&#x6709;&#x6307;&#x6807;&#xFF0E;&#x70B9;&#x51FB;&#x6307;&#x6807;&#xFF0C;&#x8FDB;&#x5165;&#x67E5;&#x8BE2;&#x8BE5;&#x6307;&#x6807;&#x7684;&#x5927;&#x56FE;&#xFF0E; &#x540C;&#x65F6;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5BF9;&#x6307;&#x6807;&#x8BBE;&#x7F6E;&#x76D1;&#x63A7;&#xFF0C;&#x5177;&#x4F53;&#x89C1;open-falcon&#x6587;&#x6863;&#xFF0E;","categories":[],"tags":[]},{"title":"linux查看日志常用命令","slug":"linux查看日志常用命令","date":"2018-11-11T07:45:27.000Z","updated":"2018-11-20T06:07:32.000Z","comments":true,"path":"2018/11/11/linux查看日志常用命令/","link":"","permalink":"http://lqczzz.github.io/2018/11/11/linux查看日志常用命令/","excerpt":"","text":"&#x547D;&#x4EE4;&#x5FC5;&#x987B;&#x638C;&#x63E1; cat grep awk tail head wc (word count) less sort[todo] uniq[todo] &#x4E0D;&#x592A;&#x5E38;&#x7528;&#x4F46;&#x662F;&#x6709;&#x7528; sed tac nl &#x8BE6;&#x7EC6;&#x66F4;&#x8BE6;&#x7EC6;&#x7528;&#x6CD5;&#x53EF;&#x4EE5; man command 1. cat &#x529F;&#x80FD;&#xFF1A; &#x67E5;&#x770B;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6240;&#x6709;&#x4FE1;&#x606F;&#xFF08;&#x7ECF;&#x5E38;&#x548C;grep&#x7ED3;&#x5408;&#xFF09; &#x9ECF;&#x5408;&#x6587;&#x4EF6; &#x7528;&#x6CD5;&#xFF1A; cat [-benstuv] [file &#x2026;] &#x5E38;&#x7528;&#x53C2;&#x6570;: &#x5171;7&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5E38;&#x7528;&#x7684;&#x662F;-n -n &#x5E26;&#x4E0A;&#x884C;&#x6570; demo &#x5408;&#x5E76;&#x6587;&#x4EF6; cat test1 test2 &gt; test3 (&gt; &#x8868;&#x793A;&#x8986;&#x76D6;&#x5199;&#xFF0C;&#x521B;&#x5EFA;&#x7684;&#x610F;&#x601D;) cat test1 test2 &gt;&gt; test3 (&gt;&gt; &#x8868;&#x793A;&#x8FFD;&#x52A0;&#x5199;) &#x5E26;&#x884C;&#x6570;&#x7684;&#x67E5;&#x770B;&#x6587;&#x4EF6; cat -n filename 2. grep &#x529F;&#x80FD;&#xFF1A; &#x6B63;&#x5219;&#x5339;&#x914D;&#x7684;&#x67E5;&#x627E;&#x6587;&#x4EF6;&#x5185;&#x5BB9; &#x7528;&#x6CD5;&#xFF1A; grep [-abcdDEFGHhIiJLlmnOopqRSsUVvwxZ] [-A num] [-B num] [-C[num]] [-e pattern] [-f file] [--binary-files=value] [--color[=when]] [--colour[=when]] [--context[=num]] [--label] [--line-buffered] [--null] [pattern] [file ...] &#x5E38;&#x7528;&#x53C2;&#x6570;: -a &#x2013;text #&#x4E0D;&#x8981;&#x5FFD;&#x7565;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x6570;&#x636E;&#x3002; -A&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; &#x2013;after-context=&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; #&#x9664;&#x4E86;&#x663E;&#x793A;&#x7B26;&#x5408;&#x8303;&#x672C;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x5217;&#x4E4B;&#x5916;&#xFF0C;&#x5E76;&#x663E;&#x793A;&#x8BE5;&#x884C;&#x4E4B;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x3002; -b &#x2013;byte-offset #&#x5728;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x6807;&#x793A;&#x51FA;&#x8BE5;&#x884C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x7F16;&#x53F7;&#x3002; -B&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; &#x2013;before-context=&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; #&#x9664;&#x4E86;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x5916;&#xFF0C;&#x5E76;&#x663E;&#x793A;&#x8BE5;&#x884C;&#x4E4B;&#x524D;&#x7684;&#x5185;&#x5BB9;&#x3002; -c &#x2013;count #&#x8BA1;&#x7B97;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x5217;&#x6570;&#x3002; -C&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; &#x2013;context=&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt;&#x6216;-&lt;&#x663E;&#x793A;&#x884C;&#x6570;&gt; #&#x9664;&#x4E86;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x5916;&#xFF0C;&#x5E76;&#x663E;&#x793A;&#x8BE5;&#x884C;&#x4E4B;&#x524D;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x3002; -d &lt;&#x52A8;&#x4F5C;&gt; &#x2013;directories=&lt;&#x52A8;&#x4F5C;&gt; #&#x5F53;&#x6307;&#x5B9A;&#x8981;&#x67E5;&#x627E;&#x7684;&#x662F;&#x76EE;&#x5F55;&#x800C;&#x975E;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x8FD9;&#x9879;&#x53C2;&#x6570;&#xFF0C;&#x5426;&#x5219;grep&#x6307;&#x4EE4;&#x5C06;&#x56DE;&#x62A5;&#x4FE1;&#x606F;&#x5E76;&#x505C;&#x6B62;&#x52A8;&#x4F5C;&#x3002; -e&lt;&#x8303;&#x672C;&#x6837;&#x5F0F;&gt; &#x2013;regexp=&lt;&#x8303;&#x672C;&#x6837;&#x5F0F;&gt; #&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x4E32;&#x505A;&#x4E3A;&#x67E5;&#x627E;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x7684;&#x6837;&#x5F0F;&#x3002; -E &#x2013;extended-regexp #&#x5C06;&#x6837;&#x5F0F;&#x4E3A;&#x5EF6;&#x4F38;&#x7684;&#x666E;&#x901A;&#x8868;&#x793A;&#x6CD5;&#x6765;&#x4F7F;&#x7528;&#x3002; -F &#x2013;fixed-regexp #&#x5C06;&#x6837;&#x5F0F;&#x89C6;&#x4E3A;&#x56FA;&#x5B9A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5217;&#x8868;&#x3002; -G &#x2013;basic-regexp #&#x5C06;&#x6837;&#x5F0F;&#x89C6;&#x4E3A;&#x666E;&#x901A;&#x7684;&#x8868;&#x793A;&#x6CD5;&#x6765;&#x4F7F;&#x7528;&#x3002; -h &#x2013;no-filename #&#x5728;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x4E0D;&#x6807;&#x793A;&#x8BE5;&#x884C;&#x6240;&#x5C5E;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x3002; -H &#x2013;with-filename #&#x5728;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x884C;&#x6240;&#x5C5E;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x3002; -i &#x2013;ignore-case #&#x5FFD;&#x7565;&#x5B57;&#x7B26;&#x5927;&#x5C0F;&#x5199;&#x7684;&#x5DEE;&#x522B;&#x3002; -l &#x2013;file-with-matches #&#x5217;&#x51FA;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x7B26;&#x5408;&#x6307;&#x5B9A;&#x7684;&#x6837;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x3002; -L &#x2013;files-without-match #&#x5217;&#x51FA;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x4E0D;&#x7B26;&#x5408;&#x6307;&#x5B9A;&#x7684;&#x6837;&#x5F0F;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x3002; -n &#x2013;line-number #&#x5728;&#x663E;&#x793A;&#x7B26;&#x5408;&#x6837;&#x5F0F;&#x7684;&#x90A3;&#x4E00;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x6807;&#x793A;&#x51FA;&#x8BE5;&#x884C;&#x7684;&#x5217;&#x6570;&#x7F16;&#x53F7;&#x3002; -q &#x2013;quiet&#x6216;&#x2013;silent #&#x4E0D;&#x663E;&#x793A;&#x4EFB;&#x4F55;&#x4FE1;&#x606F;&#x3002; -r &#x2013;recursive #&#x6B64;&#x53C2;&#x6570;&#x7684;&#x6548;&#x679C;&#x548C;&#x6307;&#x5B9A;&#x201C;-d recurse&#x201D;&#x53C2;&#x6570;&#x76F8;&#x540C;&#x3002; -s &#x2013;no-messages #&#x4E0D;&#x663E;&#x793A;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002; -v &#x2013;revert-match #&#x663E;&#x793A;&#x4E0D;&#x5305;&#x542B;&#x5339;&#x914D;&#x6587;&#x672C;&#x7684;&#x6240;&#x6709;&#x884C;&#x3002; -V &#x2013;version #&#x663E;&#x793A;&#x7248;&#x672C;&#x4FE1;&#x606F;&#x3002; -w &#x2013;word-regexp #&#x53EA;&#x663E;&#x793A;&#x5168;&#x5B57;&#x7B26;&#x5408;&#x7684;&#x5217;&#x3002; -x &#x2013;line-regexp #&#x53EA;&#x663E;&#x793A;&#x5168;&#x5217;&#x7B26;&#x5408;&#x7684;&#x5217;&#x3002; -y #&#x6B64;&#x53C2;&#x6570;&#x7684;&#x6548;&#x679C;&#x548C;&#x6307;&#x5B9A;&#x201C;-i&#x201D;&#x53C2;&#x6570;&#x76F8;&#x540C;&#x3002; &#x6B63;&#x5219;&#x5339;&#x914D;&#x89C4;&#x5219; grep&#x7684;&#x89C4;&#x5219;&#x8868;&#x8FBE;&#x5F0F;: ^ #&#x951A;&#x5B9A;&#x884C;&#x7684;&#x5F00;&#x59CB; &#x5982;&#xFF1A;&apos;^grep&apos;&#x5339;&#x914D;&#x6240;&#x6709;&#x4EE5;grep&#x5F00;&#x5934;&#x7684;&#x884C;&#x3002; $ #&#x951A;&#x5B9A;&#x884C;&#x7684;&#x7ED3;&#x675F; &#x5982;&#xFF1A;&apos;grep$&apos;&#x5339;&#x914D;&#x6240;&#x6709;&#x4EE5;grep&#x7ED3;&#x5C3E;&#x7684;&#x884C;&#x3002; . #&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x975E;&#x6362;&#x884C;&#x7B26;&#x7684;&#x5B57;&#x7B26; &#x5982;&#xFF1A;&apos;gr.p&apos;&#x5339;&#x914D;gr&#x540E;&#x63A5;&#x4E00;&#x4E2A;&#x4EFB;&#x610F;&#x5B57;&#x7B26;&#xFF0C;&#x7136;&#x540E;&#x662F;p&#x3002; * #&#x5339;&#x914D;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5148;&#x524D;&#x5B57;&#x7B26; &#x5982;&#xFF1A;&apos;*grep&apos;&#x5339;&#x914D;&#x6240;&#x6709;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x7A7A;&#x683C;&#x540E;&#x7D27;&#x8DDF;grep&#x7684;&#x884C;&#x3002; .* #&#x4E00;&#x8D77;&#x7528;&#x4EE3;&#x8868;&#x4EFB;&#x610F;&#x5B57;&#x7B26;&#x3002; [] #&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x6307;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&apos;[Gg]rep&apos;&#x5339;&#x914D;Grep&#x548C;grep&#x3002; [^] #&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x4E0D;&#x5728;&#x6307;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#xFF1A;&apos;[^A-FH-Z]rep&apos;&#x5339;&#x914D;&#x4E0D;&#x5305;&#x542B;A-R&#x548C;T-Z&#x7684;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x7D27;&#x8DDF;rep&#x7684;&#x884C;&#x3002; \\(..\\) #&#x6807;&#x8BB0;&#x5339;&#x914D;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&apos;\\(love\\)&apos;&#xFF0C;love&#x88AB;&#x6807;&#x8BB0;&#x4E3A;1&#x3002; \\&lt; #&#x951A;&#x5B9A;&#x5355;&#x8BCD;&#x7684;&#x5F00;&#x59CB;&#xFF0C;&#x5982;:&apos;\\&lt;grep&apos;&#x5339;&#x914D;&#x5305;&#x542B;&#x4EE5;grep&#x5F00;&#x5934;&#x7684;&#x5355;&#x8BCD;&#x7684;&#x884C;&#x3002; \\&gt; #&#x951A;&#x5B9A;&#x5355;&#x8BCD;&#x7684;&#x7ED3;&#x675F;&#xFF0C;&#x5982;&apos;grep\\&gt;&apos;&#x5339;&#x914D;&#x5305;&#x542B;&#x4EE5;grep&#x7ED3;&#x5C3E;&#x7684;&#x5355;&#x8BCD;&#x7684;&#x884C;&#x3002; x\\{m\\} #&#x91CD;&#x590D;&#x5B57;&#x7B26;x&#xFF0C;m&#x6B21;&#xFF0C;&#x5982;&#xFF1A;&apos;0\\{5\\}&apos;&#x5339;&#x914D;&#x5305;&#x542B;5&#x4E2A;o&#x7684;&#x884C;&#x3002; x\\{m,\\} #&#x91CD;&#x590D;&#x5B57;&#x7B26;x,&#x81F3;&#x5C11;m&#x6B21;&#xFF0C;&#x5982;&#xFF1A;&apos;o\\{5,\\}&apos;&#x5339;&#x914D;&#x81F3;&#x5C11;&#x6709;5&#x4E2A;o&#x7684;&#x884C;&#x3002; x\\{m,n\\} #&#x91CD;&#x590D;&#x5B57;&#x7B26;x&#xFF0C;&#x81F3;&#x5C11;m&#x6B21;&#xFF0C;&#x4E0D;&#x591A;&#x4E8E;n&#x6B21;&#xFF0C;&#x5982;&#xFF1A;&apos;o\\{5,10\\}&apos;&#x5339;&#x914D;5--10&#x4E2A;o&#x7684;&#x884C;&#x3002; \\w #&#x5339;&#x914D;&#x6587;&#x5B57;&#x548C;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;[A-Za-z0-9]&#xFF0C;&#x5982;&#xFF1A;&apos;G\\w*p&apos;&#x5339;&#x914D;&#x4EE5;G&#x540E;&#x8DDF;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6587;&#x5B57;&#x6216;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#xFF0C;&#x7136;&#x540E;&#x662F;p&#x3002; \\W #\\w&#x7684;&#x53CD;&#x7F6E;&#x5F62;&#x5F0F;&#xFF0C;&#x5339;&#x914D;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x975E;&#x5355;&#x8BCD;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x70B9;&#x53F7;&#x53E5;&#x53F7;&#x7B49;&#x3002; \\b #&#x5355;&#x8BCD;&#x9501;&#x5B9A;&#x7B26;&#xFF0C;&#x5982;: &apos;\\bgrep\\b&apos;&#x53EA;&#x5339;&#x914D;grep demo &#x67E5;&#x770B;&#x8FDB;&#x7A0B; ps -ef|grep svn &#x7EDF;&#x8BA1;&#x8FDB;&#x7A0B;&#x6570; ps -ef|grep svn -c &#x7BA1;&#x9053;&#x67E5;&#x770B;&#x5173;&#x952E;&#x5B57;&#x7684;&#x884C; cat test.txt | grep -F keyword &#x7BA1;&#x9053;&#x67E5;&#x770B;&#x5173;&#x952E;&#x5B57;&#x7684;&#x884C;&#x5E76;&#x4E14;&#x6253;&#x5370;&#x884C;&#x53F7;cat test.txt | grep -nf keyword &#x76F4;&#x63A5;\b&#x6839;&#x636E;&#x5173;&#x952E;&#x5B57;&#x67E5;&#x770B;&#x884C; grep keyword filename &#x591A;&#x6587;&#x4EF6; grep keyword filename1 filename2 &#x6240;&#x6709;&#x6587;&#x4EF6; grep keyword * &#x67E5;&#x770B;&#x4EE5;**&#x5F00;&#x5934;&#x7684;&#x884C; cat test.txt |grep ^u &#x67E5;&#x770B;&#x4EE5;**&#x7ED3;&#x5C3E;&#x7684;&#x884C; cat test.txt |grep hat$ &#x67E5;&#x770B;&#x4E0D;&#x4EE5;**&#x5F00;&#x5934;&#x7684;&#x884C; cat test.txt |grep ^[^u] &#x67E5;&#x770B;&#x6709;**&#x6216;&#x8005;**&#x7684;&#x884C;cat test.txt |grep -E &quot;ed|at&quot; awk &#x529F;&#x80FD;&#xFF1A; awk&#x5C31;&#x662F;&#x628A;&#x6587;&#x4EF6;&#x9010;&#x884C;&#x7684;&#x8BFB;&#x5165;&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x4E3A;&#x9ED8;&#x8BA4;&#x5206;&#x9694;&#x7B26;&#x5C06;&#x6BCF;&#x884C;&#x5207;&#x7247;&#xFF0C;&#x5207;&#x5F00;&#x7684;&#x90E8;&#x5206;&#x518D;&#x8FDB;&#x884C;&#x5404;&#x79CD;&#x5206;&#x6790;&#x5904;&#x7406;&#x3002; &#x7279;&#x522B;&#x9002;&#x5408;&#x4E00;&#x884C;&#x6587;&#x672C;&#x7279;&#x522B;&#x957F;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x663E;&#x793A;&#x5904;&#x7406; &#x7528;&#x6CD5;&#xFF1A; awk &#x2018;{pattern + action}&#x2019; {filenames} &#x5176;&#x4E2D;action&#x652F;&#x6301;&#x591A;&#x79CD;&#x64CD;&#x4F5C;&#xFF0C;&#x5F3A;&#x5927;&#x53C8;&#x590D;&#x6742; &#x5E38;&#x7528;&#x53C2;&#x6570;: -F&#xFF1A;&#x5206;&#x5272;&#x7B26; demo &#x67E5;&#x770B;&#x67D0;&#x4E00;&#x884C;&#x7684;&#x524D;&#x9762;&#x90E8;&#x5206;&#xFF1A;cat filename | awk -F &apos;|&apos; &apos;{print $1, $2}&apos; tail/head &#x529F;&#x80FD;&#xFF1A; tail &#x663E;&#x793A;&#x6587;&#x4EF6;&#x672B;&#x5C3E;/&#x5F00;&#x59CB;&#x7684;&#x5185;&#x5BB9; &#x7528;&#x6CD5;&#xFF1A; tail [-F | -f | -r] [-q] [-b number | -c number | -n number] [file &#x2026;] head [-n count | -c bytes] [file &#x2026;] &#x5E38;&#x7528;&#x53C2;&#x6570;: -f&#xFF1A;&#x5FAA;&#x73AF;&#x8BFB;&#x53D6; -n&lt;&#x884C;&#x6570;&gt;&#xFF1A; &#x663E;&#x793A;&#x884C;&#x6570; demo &#x76D1;&#x63A7;&#x65E5;&#x5FD7;&#xFF1A;tail -f filename &#x4ECE;&#x7B2C;n&#x884C;&#x5F00;&#x59CB;&#x67E5;&#x770B;&#x6587;&#x4EF6;&#xFF1A;tail -n +100 filename (&#x5FC5;&#x987B;&#x6709;+) &#x67E5;&#x770B;&#x524D;n&#x884C;&#x7684;&#x5185;&#x5BB9;&#xFF1A;head -n 20 filename &#x67E5;&#x770B;n-m&#x884C;&#x4E4B;&#x95F4;&#x7684;&#x5185;&#x5BB9;&#xFF1A;cat -n info.log | tail -n +140 | head -n 2 wc &#x529F;&#x80FD;&#xFF1A; wc &#x2013; word, line, character, and byte count &#x7528;&#x6CD5;&#xFF1A; wc [-clmw] [file &#x2026;] &#x5E38;&#x7528;&#x53C2;&#x6570;: -c &#x7EDF;&#x8BA1;&#x5B57;&#x8282;&#x6570;&#x3002; -l &#x7EDF;&#x8BA1;&#x884C;&#x6570;&#x3002; -m &#x7EDF;&#x8BA1;&#x5B57;&#x7B26;&#x6570;&#x3002;&#x8FD9;&#x4E2A;&#x6807;&#x5FD7;&#x4E0D;&#x80FD;&#x4E0E; -c &#x6807;&#x5FD7;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x3002; -w &#x7EDF;&#x8BA1;&#x5B57;&#x6570;&#x3002;&#x4E00;&#x4E2A;&#x5B57;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x7531;&#x7A7A;&#x767D;&#x3001;&#x8DF3;&#x683C;&#x6216;&#x6362;&#x884C;&#x5B57;&#x7B26;&#x5206;&#x9694;&#x7684;&#x5B57;&#x7B26;&#x4E32; demo &#x7EDF;&#x8BA1;&#x884C;&#x6570;: wc -l filename &#x7EDF;&#x8BA1;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x6570;: ls -l | wc -l lessless &#x547D;&#x4EE4;&#xFF08;&#x5206;&#x9875;&#x67E5;&#x770B;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#xFF09;&#x5206;&#x9875;&#x67E5;&#x770B;&#x65E5;&#x5FD7;&#xFF0C;&#x4F46;&#x662F;&#x4E2D;&#x6587;&#x6709;&#x4E71;&#x7801;less error.log&#x76F4;&#x63A5;&#x5B9A;&#x4F4D;&#x5230;&#x7B2C;100&#x884C;less +100g xx.log&#x5B9A;&#x4F4D;&#x5230;&#x6700;&#x540E;&#x4E00;&#x884C;less +GG xx.log&#x67E5;&#x627E;&#x5E76;&#x9AD8;&#x4EAE;&#x5173;&#x952E;&#x5B57;less fis.log.2018-05-20 | grep 2018052019004984219071028 -A 5 --color=auto&#x79FB;&#x52A8;&#x65E5;&#x5FD7; G &#xFF1A;&#x5230;&#x65E5;&#x5FD7;&#x6700;&#x540E; g &#xFF1A;&#x5230;&#x65E5;&#x5FD7;&#x6700;&#x524D;&#x9762; j/&#x2191; &#xFF1A;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x4E00;&#x884C; k/&#x2193; &#xFF1A;&#x5411;&#x540E;&#x79FB;&#x52A8;&#x4E00;&#x884C; pgup &#xFF1A;&#x5411;&#x4E0A;&#x7FFB;&#x9875; pgdn &#xFF1A;&#x5411;&#x4E0B;&#x7FFB;&#x9875; sed&#x67E5;&#x770B;n-m&#x884C;&#x4E4B;&#x95F4;&#x7684;&#x5185;&#x5BB9;&#xFF1A; sed -n &apos;5,10p&apos; filename tac&#x548C;cat&#x53CD;&#x7740;&#x6765;&#x7684; nl&#x52A0;&#x5F3A;&#x7248; cat -n,&#x4F7F;&#x7528;&#x53C2;&#x8003; man nl &#x5E38;&#x7528;&#x7EC4;&#x5408; &#x5B9E;&#x65F6;&#x76D1;&#x63A7;&#x65E5;&#x5FD7;&#xFF1A; tail -f 20 filename &#x663E;&#x793A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x67D0;&#x51E0;&#x884C; 1. `cat -n info.log | tail -n +140 | head -n 2` 2. `sed -n &quot;10,20p&quot; filename` &#x7EDF;&#x8BA1;&#x884C;&#x6570;&#xFF1A; 1. wc -l filename &#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E07;&#x591A;&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x6BCF;&#x6761;&#x8BB0;&#x5F55;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x95EE;&#x5982;&#x4F55;&#x4ECE;&#x8FD9;&#x4E9B;&#x8BB0;&#x5F55;&#x4E2D;&#x627E;&#x5230;&#x6570;&#x91CF;&#x6392;&#x540D;&#x524D;10&#x7684;&#x8BB0;&#x5F55;: sort data | uniq -c | sort -k 1 -n -r | head 10 1) sort data &#x8868;&#x793A;&#x5BF9;data&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;sort&#x547D;&#x4EE4;&#x662F;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x5185;&#x5BB9;&#x6839;&#x636E;&#x5B57;&#x5178;&#x5E8F;&#xFF08;ASCII&#x7801;&#xFF09;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#x65F6;&#x76F8;&#x90BB;&#x7684;&#x3002;2) sort data | uniq -c &#x8FD9;&#x91CC;&#xFF0C;&#x901A;&#x8FC7;&#x7BA1;&#x9053;&#xFF08;|&#xFF09;&#x5C06;&#x5DE6;&#x8FB9;&#x90E8;&#x5206;&#x7684;&#x547D;&#x4EE4;&#x7684;&#x8F93;&#x51FA;&#x4F5C;&#x4E3A;&#x53F3;&#x8FB9;&#x90E8;&#x5206;&#x7684;&#x8F93;&#x5165;&#x3002;uniq -c &#x8868;&#x793A;&#x5408;&#x5E76;&#x76F8;&#x90BB;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF0C;&#x5E76;&#x7EDF;&#x8BA1;&#x91CD;&#x590D;&#x6570;&#x3002;&#x56E0;&#x4E3A;uniq -c &#x53EA;&#x4F1A;&#x5408;&#x5E76;&#x76F8;&#x90BB;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x4F7F;&#x7528;&#x8BE5;&#x547D;&#x4EE4;&#x4E4B;&#x524D;&#x9700;&#x8981;&#x5148;&#x6392;&#x5E8F;&#x3002;3) sort data | uniq -c | sort -k 1 -n -r &#x7ECF;&#x8FC7;uniq -c &#x5904;&#x7406;&#x4E4B;&#x540E;&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x5F62;&#x5982;&#x201D;2 data&#x201D;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x662F;&#x6570;&#x5B57;&#xFF0C;&#x8868;&#x793A;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#x6570;&#xFF1B;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B57;&#x6BB5;&#x4E3A;&#x8BB0;&#x5F55;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x5BF9;&#x6B64;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;sort -k 1&#x8868;&#x793A;&#x5BF9;&#x4E8E;&#x6BCF;&#x884C;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x8FD9;&#x91CC;&#x5373;&#x6307;&#x4EE3;&#x8868;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x6570;&#x7684;&#x90A3;&#x4E2A;&#x5B57;&#x6BB5;&#x3002;&#x56E0;&#x4E3A;sort&#x547D;&#x4EE4;&#x7684;&#x9ED8;&#x8BA4;&#x6392;&#x5E8F;&#x662F;&#x6309;&#x7167;ASCII&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x6309;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x65F6;&#xFF0C;&#x6570;&#x503C;2&#x4F1A;&#x6392;&#x5728;&#x6570;&#x503C;11&#x7684;&#x524D;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x4F7F;&#x7528;-n &#x53C2;&#x6570;&#x6307;&#x5B9A;sort&#x547D;&#x4EE4;&#x6309;&#x7167;&#x6570;&#x503C;&#x5927;&#x5C0F;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;-r &#x8868;&#x793A;&#x9006;&#x5E8F;&#xFF0C;&#x5373;&#x6309;&#x7167;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x7684;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;4) sort data | uniq -c | sort -k 1 -n -r | head 10 head &#x547D;&#x4EE4;&#x8868;&#x793A;&#x9009;&#x53D6;&#x6587;&#x672C;&#x7684;&#x524D;x&#x884C;&#x3002;&#x901A;&#x8FC7;head 10 &#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x6392;&#x5E8F;&#x7ED3;&#x679C;&#x4E2D;&#x524D;&#x5341;&#x884C;&#x7684;&#x5185;&#x5BB9; &#x6765;&#x81EA;blog","categories":[],"tags":[]},{"title":"模版模式在golang的使用","slug":"golang组合和继承","date":"2018-10-27T10:05:57.000Z","updated":"2018-10-27T11:12:20.000Z","comments":true,"path":"2018/10/27/golang组合和继承/","link":"","permalink":"http://lqczzz.github.io/2018/10/27/golang组合和继承/","excerpt":"","text":"&#x4ECE;&#x9700;&#x6C42;&#x8BF4;&#x8D77;&#x8FD8;&#x662F;timeline&#xFF08;&#x5FAE;&#x535A;&#xFF0F;&#x670B;&#x53CB;&#x5708;etc&#xFF09;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x3002;timeline&#x4E1A;&#x52A1;&#x4ECE;\b&#x6B65;&#x9AA4;&#x4E0A;&#x8003;&#x8651;&#xFF0C;&#x65E0;&#x975E;&#x5C31;&#x662F;\b&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; &#x83B7;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x636E;&#x961F;&#x5217;&#xFF08;&#x901A;&#x5E38;&#x662F;meta&#x4FE1;&#x606F;) &#x6839;&#x636E;&#x4E00;&#x5B9A;&#x7684;&#x7B97;&#x6CD5;&#x5408;&#x5E76;&#x548C;&#x622A;&#x53D6;&#x6570;&#x636E; &#x6839;&#x636E;&#x5408;&#x5E76;&#x540E;&#x7684;meta&#x6570;&#x636E;&#x83B7;&#x53D6;&#x8BE6;&#x7EC6;&#x7684;&#x4FE1;&#x606F;&#xFF08;content&#x4FE1;&#x606F;) &#x8FD4;&#x56DE; &#x5982;&#x679C;&#x7B2C;&#x4E00;&#x6B65;&#x76F4;&#x63A5;&#x83B7;&#x53D6;meta&#x4FE1;&#x606F;&#x548C;content&#x4FE1;&#x606F;&#xFF0C;&#x5219;&#x4FE1;&#x606F;&#x592A;&#x5927;&#xFF0C;tcp&#x8017;&#x65F6;&#x548C;&#x5185;&#x5B58;&#x6D88;&#x8017;&#x4E5F;&#x5F88;&#x591A; &#x53E6;&#x5916;&#xFF0C;timeline&#x53EF;&#x80FD;&#x4F1A;&#x5206;&#x6210;&#x5F88;&#x591A;&#x7C7B;&#x578B;&#xFF1A; &#x7528;&#x6237;&#x672A;&#x767B;&#x5F55;&#x770B;&#x5230;&#x7684; &#x7528;&#x6237;&#x767B;&#x5F55;&#x770B;&#x5230;&#x7684; &#x63A8;&#x8350;&#x5217;&#x8868; etc &#x8FD9;&#x79CD;&#x573A;&#x666F;&#x6700;&#x9002;&#x5408;&#x7528;&#x6A21;&#x7248;&#x6A21;&#x5F0F;&#x5B9E;&#x73B0;&#x4E86;&#x5728;java&#x91CC;&#x9762;&#xFF1A; public asbtract class BaseTimeline { public void Do() { this.doRetrieve() this.doMerge() this.doGetContent() } abstract void doRetrieve() abstract void doMerge() abstract void doGetContent() } class LoginedTimeline extends BaseTimeline { public void doRetrieve() {} public void doMerge() {} public void doGetContent() {} } class UnLoginedTimeline extends BaseTimeline { public void doRetrieve() {} public void doMerge() {} public void doGetContent() {} } // &#x573A;&#x666F;&#x7C7B; public class Server { private BaseTimeline timeline public static void main([]string args) { if args[0] == &quot;&quot; { timeline = new LoginedTimeline() } else { timeline = new UnLoginedTimeline() } timeline.Do() } } &#x901A;&#x8FC7;&#x6A21;&#x7248;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x5B9E;&#x73B0;&#x5BF9;timeline&#x7684;&#x6269;&#x5C55;&#xFF0C;&#x65B0;&#x589E;&#x4E0D;&#x540C;&#x7684;&#x5C55;&#x793A;&#x65B9;&#x5F0F;&#x76F4;&#x63A5;&#x65B0;&#x589E;timeline\b&#x7C7B;&#x3002;&#x5728;java servlet&#x7F16;&#x7A0B;&#x548C;&#x56FE;&#x5F62;&#x754C;&#x9762;&#x5F00;&#x53D1;(android view, html5 vue .etc)&#x4E2D;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F; &#x53EF;&#x662F;golang&#x7684;&#x7EC4;&#x5408;&#x7684;&#x65B9;&#x5F0F;&#x6CA1;&#x529E;&#x6CD5;&#x652F;&#x6301;&#x62BD;&#x8C61;&#x65B9;&#x6CD5; type ITimeline interface { doRetrieve() // &#x83B7;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x961F;&#x5217; doMerge() // &#x5408;&#x5E76; doGetContent() // &#x83B7;&#x53D6;&#x8BE6;&#x60C5; Do() } type BaseTimeline struct{} func (bt *BaseTimeline) doRetrieve() { fmt.Println(&quot;base retrieve&quot;) } func (bt *BaseTimeline) doMerge() { fmt.Println(&quot;base merge&quot;) } func (bt *BaseTimeline) doGetContent() { fmt.Println(&quot;base content&quot;) } func (bt *BaseTimeline) Do() { bt.doRetrieve() bt.doMerge() bt.doGetContent() } type LoginedTimeline struct { BaseTimeline } func (bt *LoginedTimeline) doRetrieve() { fmt.Println(&quot;LoginedTimeline retrieve&quot;) } func (bt *LoginedTimeline) doMerge() { fmt.Println(&quot;LoginedTimeline merge&quot;) } func (bt *LoginedTimeline) doGetContent() { fmt.Println(&quot;LoginedTimeline content&quot;) } type UnLoginedTimeline struct { BaseTimeline } func (bt *UnLoginedTimeline) doRetrieve() { fmt.Println(&quot;UnLoginedTimeline retrieve&quot;) } func (bt *UnLoginedTimeline) doMerge() { fmt.Println(&quot;UnLoginedTimeline merge&quot;) } func (bt *UnLoginedTimeline) doGetContent() { fmt.Println(&quot;UnLoginedTimeline content&quot;) } // &#x4F7F;&#x7528; type GetTimelineRequest struct { UserID uint64 } func server(request, response interface{}) { // GetTimelineRequest is a struct var timeline ITimeline switch UserID := request.(*GetTimelineRequest).UserID; { case UserID != uint64(0): timeline = &amp;LoginedTimeline{} default: timeline = &amp;UnLoginedTimeline{} } timeline.Do() } func main() { req := &amp;GetTimelineRequest{} server(req, nil) } // &#x8F93;&#x51FA;&#xFF1A; // base retrieve // base merge // base content &#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;&#x7EC4;&#x5408;&#x65B9;&#x5F0F;&#x4E0D;&#x652F;&#x6301;&#x65B9;&#x6CD5;&#x8986;&#x76D6;&#x53EF;&#x4EE5;&#x628A;Do&#x5355;&#x72EC;&#x51FA;&#x6765;&#xFF1A; type ITimeline interface { doRetrieve() // &#x83B7;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x961F;&#x5217; doMerge() // &#x5408;&#x5E76; doGetContent() // &#x83B7;&#x53D6;&#x8BE6;&#x60C5; } type BaseTimeline struct{} func (bt *BaseTimeline) doRetrieve() { fmt.Println(&quot;base retrieve&quot;) } func (bt *BaseTimeline) doMerge() { fmt.Println(&quot;base merge&quot;) } func (bt *BaseTimeline) doGetContent() { fmt.Println(&quot;base content&quot;) } // !!! &#x8FD9;&#x91CC;Do&#x4E0D;&#x518D;&#x662F;&#x5177;&#x6709;&#x63A5;&#x6536;&#x8005;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#xFF0C;&#x8C03;&#x7528;&#x65B9;&#x5F0F;&#x4E5F;&#x4F1A;&#x4E0D;&#x4E00;&#x6837; func Do(bt ITimeline) { bt.doRetrieve() bt.doMerge() bt.doGetContent() } type LoginedTimeline struct { BaseTimeline } func (bt *LoginedTimeline) doRetrieve() { fmt.Println(&quot;LoginedTimeline retrieve&quot;) } func (bt *LoginedTimeline) doMerge() { fmt.Println(&quot;LoginedTimeline merge&quot;) } func (bt *LoginedTimeline) doGetContent() { fmt.Println(&quot;LoginedTimeline content&quot;) } type UnLoginedTimeline struct { BaseTimeline } func (bt *UnLoginedTimeline) doRetrieve() { fmt.Println(&quot;UnLoginedTimeline retrieve&quot;) } func (bt *UnLoginedTimeline) doMerge() { fmt.Println(&quot;UnLoginedTimeline merge&quot;) } func (bt *UnLoginedTimeline) doGetContent() { fmt.Println(&quot;UnLoginedTimeline content&quot;) } // &#x4F7F;&#x7528; type GetTimelineRequest struct { UserID uint64 } func server(request, response interface{}) { // GetTimelineRequest is a struct var timeline ITimeline switch UserID := request.(*GetTimelineRequest).UserID; { case UserID != uint64(0): timeline = &amp;LoginedTimeline{} default: timeline = &amp;UnLoginedTimeline{} } // &#x8FD9;&#x91CC;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x5F0F;&#x4E5F;&#x5C31;&#x53D8;&#x5316;&#x4E86; Do(timeline) } func main() { req := &amp;GetTimelineRequest{} server(req, nil) }","categories":[],"tags":[{"name":"golang","slug":"golang","permalink":"http://lqczzz.github.io/tags/golang/"}]},{"title":"break 和 continue","slug":"break-in-golang","date":"2018-10-26T10:49:42.000Z","updated":"2018-10-26T13:40:17.000Z","comments":true,"path":"2018/10/26/break-in-golang/","link":"","permalink":"http://lqczzz.github.io/2018/10/26/break-in-golang/","excerpt":"","text":"golang&#x7684;break&#x548C;continue&#x633A;&#x597D;&#x7528;&#x7684;&#xFF0C;&#x548C;&#x522B;&#x7684;&#x8BED;&#x8A00;&#x4E0D;&#x592A;\b&#x4E00;&#x6837; breakgolang&#x7684;break&#x5173;&#x952E;&#x5B57;for,switch,select&#x4F1A;&#x8DF3;&#x51FA;&#x4E09;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x7684;&#x5305;&#x88F9; A &#x201C;break&#x201D; statement terminates execution of the innermost &#x201C;for&#x201D;, &#x201C;switch&#x201D;, or &#x201C;select&#x201D; statement within the same function. &#x2014;&#x2014; &#x300A;The Go Programming Language Specification&#x300B; &#x4E0B;&#x9762;&#x4E00;&#x6BB5;&#x4EE3;&#x7801; for i := 0; i &lt; 6; i++ { switch i { case 2: break default: fmt.Println(i) } } // go run main.go&#xFF1A; // 0 // 1 // 3 // 4 // 5 &#x5982;&#x679C;&#x60F3;&#x8DF3;&#x51FA;&#x66F4;&#x4E0A;&#x4E00;&#x5C42;&#x7684;for&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x9700;&#x8981;&#x6307;&#x5B9A;label forLoop: for i := 0; i &lt; 6; i++ { switch i { case 2: break forLoop default: fmt.Println(i) } } // go run main.go: // 0 // 1 continuecontinue&#x4E5F;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;label forLoop: for i := 0; i &lt; 6; i++ { switch i { case 2: continue forLoop default: fmt.Println(i) } } // go run main.go // 0 // 1 // 3 // 4 // 5","categories":[],"tags":[{"name":"golang思考","slug":"golang思考","permalink":"http://lqczzz.github.io/tags/golang思考/"}]},{"title":"unix网络编程笔记-tcp编程基础","slug":"unix网络编程笔记-tcp编程基础","date":"2018-10-21T06:00:26.000Z","updated":"2018-10-24T15:24:33.000Z","comments":true,"path":"2018/10/21/unix网络编程笔记-tcp编程基础/","link":"","permalink":"http://lqczzz.github.io/2018/10/21/unix网络编程笔记-tcp编程基础/","excerpt":"","text":"\b&#x5173;&#x4E8E;&#x300A;unix&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x300B;unix&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x8FD9;&#x4E66;&#x5206;&#x4E3A;&#x4E24;&#x518C;&#xFF1A; &#x4E00;&#x518C;&#x8BB2;socket&#x7F16;&#x7A0B;&#xFF0C;700&#x591A;&#x9875;&#xFF0C;31&#x7AE0; &#x4E8C;&#x518C;&#x8BB2;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#xFF0C;400&#x9875;&#xFF0C;16&#x7AE0; &#x770B;&#x76EE;&#x5F55;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6700;&#x57FA;&#x7840;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x77E5;&#x8BC6;&#x5728;&#xFF1A; chapter1: &#x7B80;&#x4ECB; chapter2: tcp&#xFF0F;udp&#x548C;stcp(&#x8FD9;&#x73A9;&#x610F;&#x4E0D;&#x7BA1;) chapter3: &#x5957;&#x63A5;&#x5B57;&#x7F16;&#x7A0B;&#x7B80;&#x4ECB; chapter4: &#x57FA;&#x672C;tcp&#x5957;&#x63A5;&#x5B57;&#x7F16;&#x7A0B; chapter5: tcp&#x5BA2;&#x6237;&#xFF0F;&#x670D;&#x52A1;&#x7AEF;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F8B; chapter30: &#x5BA2;&#x6237;&#xFF0F;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x8303;&#x5F0F; &#x611F;&#x89C9;&#x8FD9;&#x51E0;&#x7AE0;&#x5B66;&#x5B8C;&#x4E86;&#x5C31;&#x5DEE;&#x4E0D;&#x591A;&#x591F;&#x4E86;&#xFF0C;&#x5176;&#x4ED6;&#x7AE0;&#x8282;\b&#x9700;&#x8981;&#x518D;&#x8BFB;&#xFF5E; &#x9605;&#x8BFB;&#x524D;&#x63D0;&#x5047;&#x8BBE;&#x4F60;&#x5BF9;OSI&#x4E03;&#x5C42;&#x6A21;&#x578B;&#x6709;&#x6240;&#x4E86;&#x89E3; chapter0:&#x7B80;&#x4ECB;&#x4ECE;&#x73B0;&#x4EE3;&#x4EA4;&#x6362;&#x6280;&#x672F;&#x8BF4;&#x8D77;&#x300A;&#x73B0;&#x4EE3;&#x4EA4;&#x6362;&#x6280;&#x672F;&#x300B;&#x662F;&#x901A;&#x4FE1;&#x4E13;&#x4E1A;&#x7684;&#x5FC5;&#x4FEE;&#x8BFE;&#xFF0C;&#x55EF;&#x55EF;&#xFF0C;&#x597D;&#x6B79;&#x6211;&#x4E5F;&#x662F;&#x901A;&#x4FE1;&#x4E13;&#x4E1A;&#x7684;&#x5B66;&#x751F;&#xFF0C;&#x5C31;&#x5148;&#x628A;&#x77E5;&#x8BC6;&#x8109;&#x7EDC;&#x62D3;&#x5C55;&#x4E00;&#x4E0B;&#xFF5E; &#x73B0;&#x4EE3;&#x4EA4;&#x6362;&#x6280;&#x672F;&#x7684;&#x5206;&#x7C7B;&#xFF1A; &#x7535;&#x8DEF;&#x4EA4;&#x6362; &#x5206;&#x7EC4;&#x4EA4;&#x6362; &#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x7684;&#x534F;&#x8BAE;&#x7528;&#x7684;&#x5C31;&#x662F;&#x5206;&#x7EC4;&#x4EA4;&#x6362;&#x6280;&#x672F;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x7684;&#x4FE1;&#x606F;&#x4F1A;&#x50CF;&#x5FEB;&#x9012;&#x5305;&#x88F9;&#x4E00;&#x6837;&#x4E00;&#x4E2A;&#x4E2A;&#x7684;&#x4F20;&#x9001;&#x5230;&#x63A5;&#x6536;&#x65B9;&#x3002;&#x800C;&#x7535;&#x8DEF;&#x4EA4;&#x6362;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x6BCF;&#x4E2A;&#x901A;&#x4FE1;&#x5B9E;&#x4F53;&#x90FD;&#x8FDE;&#x63A5;&#x5230;&#x4EA4;&#x6362;&#x673A;&#x4E0A;&#xFF0C;&#x800C;&#x4EA4;&#x6362;&#x673A;&#x4F7F;&#x7528;&#x4EA4;&#x6362;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8BA9;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x901A;&#x4FE1;&#xFF0C;&#x73B0;&#x5728;&#x6700;&#x5E7F;&#x6CDB;&#x7684;&#x5E94;&#x7528;&#x5C31;&#x662F;&#x7535;&#x8BDD;&#x7F51;&#x7EDC;&#x4E86;&#x3002;&#x4ECE;&#x6253;&#x7535;&#x8BDD;&#x4E5F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#xFF0C;&#x7535;&#x8DEF;&#x4EA4;&#x6362;&#x4E00;&#x5B9A;&#x662F;&#xFF1A; &#x9762;&#x5411;&#x8FDE;&#x63A5;&#xFF1B;(&#x5206;&#x7EC4;&#x4EA4;&#x6362;&#x5219;&#x4E0D;&#x4E00;&#x5B9A;&#xFF0C;&#x5982;udp&#x534F;&#x8BAE;) &#x540C;&#x6B65;&#x65F6;&#x5206;&#x590D;&#x7528;&#xFF1B; &#x4FE1;&#x606F;&#x4F20;&#x9001;&#x65E0;&#x5DEE;&#x9519;&#x63A7;&#x5236;&#xFF1B; chapter1:&#x5206;&#x7EC4;&#x4EA4;&#x6362;&#x534F;&#x8BAE; PDU: &#x534F;&#x8BAE;&#x6570;&#x636E;&#x5355;&#x5143;&#xFF0C;&#x5373;&#x5BF9;&#x7B49;&#x5B9E;&#x4F53;(&#x5904;&#x4E8E;&#x540C;&#x4E00;&#x5C42;)&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x6362;&#x5355;&#x5143;&#x4FE1;&#x606F; SDU: &#x4E0B;&#x4E00;&#x5C42;&#x627F;&#x8F7D;&#x4E0A;&#x4E00;&#x5C42;&#x6570;&#x636E;&#x7684;&#x5355;&#x5143;&#xFF0C;&#x6BD4;&#x5982;tcp&#x5C42;&#x4F20;&#x8F93;&#x7684;tcp&#x62A5;&#x6587;(&#x62A5;&#x6587;&#x5934;+&#x62A5;&#x6587;&#x4F53;)&#x6570;&#x636E;&#x5728;tcp&#x5C42;&#x5C31;&#x662F;&#x4E00;&#x4E2A;PDU&#xFF0C;&#x4F20;&#x7ED9;ip&#x5C42;&#x4E4B;&#x540E;&#xFF0C;ip&#x5C42;&#x8BA4;&#x4E3A;&#x5B83;&#x662F;SDU&#xFF08;ip&#x5C42;&#x5728;tcp&#x62A5;&#x6587;&#x4E4B;&#x5916;&#x52A0;&#x5165;ip&#x62A5;&#x6587;&#x5934;&#xFF0C;&#x7C7B;&#x4F3C;&#x4FC4;&#x7F57;&#x65AF;&#x5957;&#x5A03;&#xFF09; &#x4E0D;&#x540C;&#x534F;&#x8BAE;&#x4E4B;&#x95F4;&#x7684;&#x4E0D;&#x540C;&#x5B8C;&#x5168;&#x53D6;&#x51B3;&#x4E8E;&#x534F;&#x8BAE;&#x5934;&#xFF08;&#x5E9F;&#x8BDD;&#xFF5E;&#xFF09; tcp&#xFF0F;ip&#x7B80;&#x4ECB; &#x4E00;&#x822C;&#x8BA4;&#x4E3A;web&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x662F;&#x957F;&#x65F6;&#x95F4;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x5373;&#x6240;&#x8C13;&#x7684;&#x5B88;&#x62A4;&#x7A0B;&#x5E8F; &#x7528;&#x6237;&#x8FDB;&#x7A0B;&#x5B9A;&#x4E49;&#x5E94;&#x7528;&#x534F;&#x8BAE;&#xFF0C;tcp&#x548C;ip&#x534F;&#x8BAE;&#x7684;&#x8F6C;&#x6362;&#x548C;&#x5305;&#x88C5;&#x5728;&#x5185;&#x6838;&#x534F;&#x8BAE;&#x6808;&#x4E2D;&#xFF0C;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x652F;&#x6301; tcp&#x662F;&#x6CA1;&#x6709;&#x8BB0;&#x5F55;&#x8FB9;&#x754C;&#x7684;&#x5B57;&#x8282;&#x6D41;&#x534F;&#x8BAE; tcp\b&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;\u001c&#x662F;&#x6CA1;&#x6709;&#x957F;&#x5EA6;&#x9650;&#x5236;&#x7684;&#x5B57;&#x8282;&#x6D41;&#xFF0C;udp&#x8FDB;&#x7A0B;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x636E;&#x957F;&#x5EA6;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;udp&#x53D1;&#x9001;&#x7F13;&#x51B2;&#x533A;&#x5927;&#x5C0F;&#x7684;&#x5355;&#x4E2A;&#x8BB0;&#x5F55;(record) tcp\b&#x534F;&#x8BAE;&#xFF1A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E00;&#x6B21;&#x6B21;&#x8F93;&#x51FA;&#x64CD;&#x4F5C;&#x5199;&#x5230;socket&#x7684;&#x6570;&#x636E;&#x7ECF;&#x8FC7;&#x987A;&#x5E8F;&#x5206;&#x5272;&#xFF0C;&#x5F97;&#x5230;&#x5206;&#x8282;(segment)&#xFF0C;\b&#x6570;&#x636E;&#x91CF;&#x592A;&#x5927;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x786E;&#x4FDD;&#x4E00;&#x6B21;read&#x5230;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x8981;&#x628A;read&#x7F16;&#x5199;&#x5728;&#x67D0;&#x4E2A;&#x5FAA;&#x73AF;&#x4E2D; tcp&#x6CA1;&#x6709;&#x8FB9;&#x754C;,&#x6240;&#x4EE5;tcp&#x670D;&#x52A1;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x8868;&#x793A;&#x957F;&#x5EA6;&#x7684;&#x534F;&#x8BAE;&#x5934; ip&#x62A5;&#x6587;&#x7684;SDU&#x6700;&#x5927;&#x662F;65535&#xFF0C;&#x6240;&#x4EE5;tcp&#x4E00;&#x6B21;&#x53D1;&#x9001;&#x7684;&#x62A5;&#x6587;&#x5927;&#x5C0F;&#x4E0D;&#x4F1A;&#x8D85;&#x8FC7;64k &#x5BF9;&#x4E8E;\b&#x5E73;&#x5E38;&#x5B9E;&#x7528;&#x7684;conn.Write([]byte)&#xFF0C;&#x6211;&#x4EEC;&#x662F;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x8FD9;&#x4E9B;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4F1A;&#x5BF9;&#x8FD9;&#x7C7B;&#x963B;&#x585E;&#x5199;&#x64CD;&#x4F5C;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x5206;&#x7247;&#x5E76;&#x4E14;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x7F13;&#x51B2;&#x533A;&#x5199;&#x6EE1;&#x7684;&#x60C5;&#x51B5; &#x5957;&#x63A5;&#x5B57;&#x7F16;&#x7A0B;&#x662F;&#x5E94;&#x7528;&#x5C42;&#x8FDB;&#x5165;&#x4F20;&#x8F93;&#x5C42;&#x7684;&#x63A5;&#x53E3; &#x8FD9;&#x6837;&#x8BBE;&#x8BA1;&#x7531;&#x4E24;&#x4E2A;&#x7406;&#x7531;&#xFF1A; &#x5E94;&#x7528;&#x5C42;&#x5BF9;&#x901A;&#x4FE1;&#x7EC6;&#x8282;&#x5F88;&#x5C11;&#x5173;&#x5FC3;&#xFF0C;&#x800C;&#x5E95;&#x4E0B;&#x56DB;&#x5C42;&#x5BF9;&#x5E94;&#x7528;&#x534F;&#x8BAE;&#x4E0D;&#x5173;&#x5FC3;&#xFF0C;&#x53EA;&#x5173;&#x5FC3;&#x5982;&#x4F55;&#x901A;&#x4FE1; &#x5E94;&#x7528;&#x5C42;&#x5E38;&#x6784;&#x6210;&#x7528;&#x6237;&#x8FDB;&#x7A0B;&#xFF0C;&#x5730;&#x4E0B;&#x56DB;&#x5C42;&#x4F5C;&#x4E3A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x548C;&#x5185;&#x6838;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x5B58;&#x5728;&#x4E0E;&#x5185;&#x6838;&#x6001; socket&#x53EF;&#x4EE5;&#x7ED5;&#x8FC7;tcp&#x548C;udp&#x76F4;&#x63A5;&#x5B9E;&#x7528;ipv4/ipv6&#xFF0C;&#x8FD9;&#x79CD;socket&#x79F0;&#x4E3A;&#x539F;&#x59CB;&#x5957;&#x63A5;&#x5B57;(raw socket),&#x5F88;&#x5C11;&#x7528;&#x5230;&#xFF0C;&#x5728;&#x6574;&#x672C;&#x4E66;&#x91CC;&#x9762;&#x7B2C;28&#x7AE0;&#x4ECB;&#x7ECD;&#x4E86;&#x5B83;&#x7684;&#x4E24;&#x4E2A;&#x7528;&#x9014;&#xFF1A; ping traceroute&#x56E0;&#x6B64;&#x4E0D;&#x6253;&#x7B97;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x4E86; netstat&#x548C;ifconfig&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x67E5;&#x770B;&#x7F51;&#x7EDC;&#x7684;&#x7EC6;&#x8282; &#x6848;&#x4F8B;&#x5206;&#x6790;bug&#x8FD9;&#x91CC;&#x8BB0;&#x5F55;&#x4E00;&#x4E2A;&#x5DE5;&#x4F5C;&#x4E2D;&#x9047;&#x5230;&#x7684;bug&#xFF1A; // &#x6CA1;&#x6709;for&#x5FAA;&#x73AF;&#x8BFB;&#x53D6;&#x6570;&#x636E; func request(conn net.Conn, buffer bytes.Buffer, command []byte) error { // &#x8BFB;&#x534F;&#x8BAE;&#x5934;&#xFF0C;&#x5F97;&#x5230;body&#x7684;&#x957F;&#x5EA6; recvBuf := make([]byte, 4) resHead := binary.LittleEndian.Uint32(recvBuf) // \b&#x6307;&#x5B9A;\b&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;bug:&#x8BFB;&#x53D6;&#x4E0D;&#x5B8C;&#x6574; var resBody bytes.Buffer recvBuf = make([]byte, resHead) length, err := conn.Read(recvBuf) if err != nil { return err } return nil } bug&#x5206;&#x6790;&#xFF1A; &#x539F;&#x56E0; &#x539F;&#x56E0;1: \bsocket&#x4E0A;&#x7684;read&#x548C;write(&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;)&#x4E0D;&#x540C;&#x4E8E;&#x901A;&#x5E38;&#x7684;&#x6587;&#x4EF6;&#x8BFB;&#x5199;&#xFF0C;&#x53EF;&#x80FD;&#x7684;&#x5230;&#x7684;&#x5B57;&#x8282;&#x6570;&#x6BD4;&#x9884;&#x671F;&#x7684;\b&#x8981;&#x5C11;&#xFF0C;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#x5185;&#x6838;&#x7F13;&#x51B2;&#x533A;&#x53EF;&#x80FD;&#x6570;&#x636E;&#x4E0D;&#x591F;(read)&#x6216;&#x8005;&#x7F13;&#x51B2;&#x533A;&#x5DF2;&#x7ECF;&#x6EE1;&#x4E86;(non block write),&#x4E0A;&#x9762;&#x7684;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#x662F;read&#x7684;&#x65F6;&#x5019;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x591F;&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;&#x7F51;&#x7EDC;&#x539F;&#x56E0;&#xFF0C;&#x5F53;&#x6211;&#x4EEC; var recvData = make([]byte, Size) conn.Read(recvData) \b\b&#x8FD9;&#x6837;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x7531;&#x4E8E;&#x7F51;&#x7EDC;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x53EF;&#x80FD;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x6570;&#x636E;&#x8DB3;&#x591F;&#xFF0C;&#x53EF;&#x80FD;&#x4E0D;&#x591F;&#xFF0C;&#x6240;&#x4EE5;&#x51FA;&#x73B0;&#x4E86;&#x8C03;&#x7528;20&#x6B21;&#x6210;&#x529F;&#x4E00;&#x6B21;&#x7684;&#x60C5;&#x51B5;&#x65E2;&#x7136;&#x5982;&#x6B64;,&#x4E3A;&#x4EC0;&#x4E48;go&#x5B9E;&#x73B0;conn.Read()&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x5E2E;&#x6211;&#x4EEC;&#x963B;&#x585E;&#x53BB;&#x7B49;&#x5F85;&#x6570;&#x636E;&#x7684;&#x5230;&#x6765;&#x5462; &#x5F88;&#x9057;&#x61BE;Read&#x6CA1;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x80FD;&#x529B;&#xFF0C;go&#x4E5F;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x7C7B;&#x4F3C;c&#x7684;Readn&#x8FD9;&#x6837;&#x7684;&#x63A5;&#x53E3; If some data is available but not len(p) bytes, Read conventionally returns what is available instead of waiting for more.&#x6765;&#x81EA; go io&#x5305;Read&#x63A5;&#x53E3;&#x7684;&#x6CE8;&#x91CA; &#x539F;&#x56E0;2: &#x4E0D;&#x77E5;&#x9053;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x53D1;&#x9001;&#x7684;&#x903B;&#x8F91;(&#x4E5F;&#x4E0D;&#x5E94;&#x8BE5;&#x4F9D;&#x8D56;&#x5B83;)&#xFF0C;&#x53EF;&#x80FD;&#x662F; for { conn.Write() // &#x624B;&#x52A8;&#x5206;&#x7247; } &#x4E5F;&#x53EF;&#x80FD;&#x662F;&#xFF1A; conn.Write([]&#x6574;&#x4E2A;&#x6570;&#x636E;) &#x89E3;&#x51B3;&#x5957;&#x4E00;&#x5C42;for&#x5FAA;&#x73AF; // &#x4FEE;&#x6539;&#x6210;for&#x5FAA;&#x73AF;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;bug&#x89E3;&#x51B3; func request(conn net.Conn, buffer bytes.Buffer, command []byte) error { // &#x8BFB;&#x534F;&#x8BAE;&#x5934;&#xFF0C;&#x5F97;&#x5230;body&#x7684;&#x957F;&#x5EA6; recvBuf := make([]byte, 4) resHead := binary.LittleEndian.Uint32(recvBuf) // \b&#x6307;&#x5B9A;\b&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;bug:&#x8BFB;&#x53D6;&#x4E0D;&#x5B8C;&#x6574; var resBody bytes.Buffer recvBuf = make([]byte, resHead) for resBody.Len() &lt; int(resHead) { length, err := conn.Read(recvBuf) if err != nil { return err } resBody.Write(recvBuf[:length]) } return nil } chapter2:&#x4F20;&#x8F93;&#x5C42;&#xFF1A;tcp/udp/sctp&#x4E3B;&#x8981;&#x8BB2;&#x4E86;UDP&#xFF0F;TCP&#xFF0F;SCTP&#x4E09;&#x79CD;&#x534F;&#x8BAE;&#xFF0C;SCTP&#x65E5;&#x5E38;&#x7528;&#x7684;&#x5C11;&#xFF0C;&#x4EE5;&#x540E;&#x518D;&#x4E86;&#x89E3;&#xFF0C;&#x91CD;&#x70B9;&#x8BB2;&#x4E86;TCP&#x7F16;&#x7A0B;&#xFF0C;&#x90E8;&#x5206;&#x7B14;&#x8BB0;&#x6765;&#x81EA;&#x7B2C;&#x4E09;&#x7AE0;(&#x65B9;&#x4FBF;&#x603B;&#x7ED3;) TCP/UDP&#x534F;&#x8BAE;&#x65CF; ipv4/ipv6&#x5BF9;&#x4E0A;&#x5C42;&#x534F;&#x8BAE;&#x63D0;&#x4F9B;&#x4E86;&#x5206;&#x7EC4;&#x9012;&#x9001;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x4E0D;&#x5177;&#x6709;&#x53EF;&#x9760;&#x6027;(&#x4E22;&#x5305;&#x53EF;&#x80FD;) tcp&#x662F;&#x9762;&#x5411;&#x8FDE;&#x63A5;&#x7684;&#x6D41;&#x5F0F;&#x5957;&#x63A5;&#x5B57;(stream socket)&#xFF0C;&#x5173;&#x5FC3;&#x786E;&#x8BA4;&#xFF0F;&#x8D85;&#x65F6;&#xFF0F;&#x91CD;&#x4F20;&#x7684;&#x7EC6;&#x8282; &#x9700;&#x8981;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5; &#x6E90;&#x7AEF;&#x6570;&#x636E;&#x53D1;&#x9001;&#x9700;&#x8981;&#x5BF9;&#x7AEF;&#x786E;&#x8BA4;&#xFF0C;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;(&#x8D85;&#x65F6;&#x65F6;&#x95F4;:RTT)&#x6536;&#x4E0D;&#x5230;&#x786E;&#x8BA4;&#x5E94;&#x7B54;&#x5219;&#x91CD;&#x4F20;&#xFF0C;&#x591A;&#x6B21;&#x91CD;&#x4F20;&#x5931;&#x8D25;&#x5219;&#x7EC8;&#x6B62;&#x4F20;&#x8F93; RTT(round-trip time)&#x4E00;&#x6B21;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5F80;&#x8FD4;&#x65F6;&#x95F4; &#x6D41;&#x91CF;&#x63A7;&#x5236;&#xFF1A;&#x63A5;&#x6536;&#x65B9;&#x53EF;&#x4EE5;&#x544A;&#x8BC9;&#x53D1;&#x9001;&#x65B9;&#x4E0B;&#x4E00;&#x6B21;&#x6211;&#x80FD;&#x63A5;&#x53D7;&#x7684;&#x6570;&#x636E;&#x91CF;&#xFF0C;&#x9632;&#x6B62;&#x63A5;&#x6536;&#x65B9;&#x7F13;&#x51B2;&#x533A;&#x6EA2;&#x51FA; tcp&#x662F;&#x5168;&#x53CC;&#x5DE5;&#x7684; udp&#x662F;&#x4E00;&#x79CD;&#x65E0;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x636E;&#x5305;&#x62A5;&#x5957;&#x63A5;&#x5B57;(datagram socket)&#xFF1A; &#x4E0D;&#x4FDD;&#x8BC1;&#x662F;&#x5426;&#x5230;&#x8FBE; &#x4E0D;&#x4FDD;&#x8BC1;&#x5230;&#x8FBE;&#x987A;&#x5E8F; &#x6CA1;&#x6709;&#x81EA;&#x52A8;&#x91CD;&#x4F20; &#x6CA1;&#x6709;&#x8D85;&#x65F6;&#x6982;&#x5FF5; &#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x5305;&#x90FD;&#x90FD;&#x6709;&#x62A5;&#x6587;&#x5934;&#x6807;&#x793A;&#x957F;&#x5EA6;&#x7B49; &#x4E09;&#x6B21;&#x63E1;&#x624B;&#x548C;&#x56DB;&#x6B21;&#x6325;&#x624B;&#x4E09;&#x6B21;&#x63E1;&#x624B; &#x4E0A;&#x56FE;&#x6765;&#x81EA;&#x7B2C;&#x4E94;&#x7AE0;&#xFF0C;&#x5C55;&#x793A;&#x4E86;&#x57FA;&#x672C;&#x7684;&#x4E00;&#x4E2A;tcp&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x7684;socket&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5177;&#x4F53;&#x6BCF;&#x4E2A;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x7684;&#x4F5C;&#x7528;&#x5728;&#x4E0B;&#x9762;&#x603B;&#x7ED3;&#x3002;\b&#x8FD9;&#x91CC;&#x5173;&#x5FC3;&#x7684;&#x662F;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x89E6;&#x53D1;&#x7684;&#x65F6;&#x673A;:&#x670D;&#x52A1;&#x7AEF;&#x8C03;&#x7528;&#x4E86;accept&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8C03;&#x7528;connect&#x4E3B;&#x52A8;&#x6253;&#x5F00; &#x56DB;&#x6B21;&#x6325;&#x624B; &#x4E3B;&#x52A8;&#x5173;&#x95ED;&#x65B9;(&#x5BA2;&#x6237;&#x7AEF;)&#x53D1;&#x9001;fin&#x5206;&#x8282;&#xFF0C;&#x610F;&#x601D;&#x662F;&#x6211;&#x8BE5;&#x8BF4;&#x7684;&#x8BF4;&#x5B8C;&#x4E86;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x7ACB;&#x9A6C;&#x56DE;&#x590D;&#x8BF4;&#x6211;&#x6536;&#x5230;&#x4E86;,&#x7136;&#x540E;&#x8FD9;&#x4E2A;&#x5206;&#x8282;&#x653E;&#x5230;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x672B;&#x5C3E;&#xFF0C;&#x7B49;&#x5F85;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5904;&#x7406; &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5904;&#x7406;&#x5B8C;&#x4E86;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4E5F;&#x9700;&#x8981;&#x53D1;&#x4E00;&#x4E2A;fin&#x544A;&#x8BC9;&#x5BA2;&#x6237;&#x7AEF;&#x6211;&#x4E5F;&#x5B8C;&#x4E8B;&#x4E86; &#x5728;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;&#x8FD9;&#x4E24;&#x4E2A;&#x5206;&#x8282;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x6570;&#x636E; &#x7F13;&#x51B2;&#x961F;&#x5217;&#x6CA1;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4E5F;&#x4E0D;&#x9700;&#x8981;&#x53D1;&#x9001;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4F1A;\b&#x5408;&#x5E76;&#x53D1;&#x9001;ack m+1&#x548C;fin n&#x5206;&#x8282;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x662F;&#x4E09;&#x6B21;&#x6325;&#x624B;&#x4E86;&#x3002; &#x4E3B;&#x52A8;&#x5173;&#x95ED;&#x65B9;(&#x5BA2;&#x6237;&#x7AEF;)&#x54CD;&#x5E94;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x7684;fin&#x5206;&#x8282;&#x4E4B;&#x540E;&#xFF0C;&#x4F1A;&#x518D;&#x7B49;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x8FDB;&#x5165;time_wait&#x72B6;&#x6001;&#xFF0C; tcp&#x662F;&#x5168;&#x53CC;&#x5DE5;&#x7684;&#xFF0C;&#x4EFB;&#x4F55;&#x4E00;&#x65B9;&#x90FD;&#x53EF;&#x4EE5;\b&#x5173;&#x95ED;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x5173;&#x95ED; tcp&#x72B6;&#x6001;&#x8F6C;&#x6362; time_wait&#x72B6;&#x6001; &#x53EF;&#x9760;&#x7684;&#x5B9E;&#x73B0;&#x5168;&#x53CC;&#x5DE5;&#x8FDE;&#x63A5;&#x7684;&#x7EC8;&#x6B62;&#xFF1A; &#x5982;&#x679C;&#x6700;&#x540E;&#x4E00;&#x4E2A;ack n+1&#x6CA1;&#x6709;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x91CD;&#x65B0;&#x53D1;&#x9001;FIN N&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x81F3;&#x5C11;&#x82B1;&#x8D39;&#x4E00;&#x6B21;&#x6765;&#x56DE;(&gt;=2MSL)&#xFF0C;&#x56E0;&#x6B64;time_wait&#x9700;&#x8981;&#x6709;&#x81F3;&#x5C11;2MSL&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694; &#x5141;&#x8BB8;&#x8001;&#x7684;&#x91CD;&#x590D;&#x5206;&#x8282;&#x6D88;&#x901D;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x9632;&#x6B62;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#x5982;&#x679C;&#x7528;&#x4E86;&#x540C;&#x6837;&#x7684;ip&#x548C;&#x7AEF;&#x53E3;&#xFF0C;&#x88AB;&#x8BA4;&#x4E3A;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5; socket pairsocket pair&#x5373;(src_ip, src_port, dest_ip, dest_port)&#x552F;&#x4E00;&#x786E;&#x8BA4;&#x4E00;&#x4E2A;tcp&#x8FDE;&#x63A5; &#x5982;&#x4E0A;&#x56FE;&#xFF0C;&#x5F53;&#x4E24;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x540C;&#x4E00;&#x4E2A;socket&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x65E0;&#x6CD5;&#x901A;&#x8FC7;&#x670D;&#x52A1;&#x7AEF;socket&#x7684;ip&#x548C;port&#x552F;&#x4E00;&#x786E;&#x8BA4;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x3002;&#x8BE6;&#x7EC6;&#x539F;&#x56E0;&#x770B;chapter4 chapter3:&#x5957;&#x63A5;&#x5B57;&#x7F16;&#x7A0B;&#x7B80;&#x4ECB; &#x7F51;&#x9645;&#x534F;&#x8BAE;&#x91C7;&#x7528;&#x5927;&#x7AEF;&#x5B57;&#x8282;&#x4F20;&#x9012;&#x591A;&#x5B57;&#x8282;&#x6570;&#xFF08;&#x7F51;&#x7EDC;&#x5B57;&#x8282;&#x5E8F;&#xFF09; &#x5927;&#x7AEF;&#x5B57;&#x8282;&#x5E8F;&#xFF1A;&#x9AD8;&#x4F4D;&#x5185;&#x5B58;&#x5730;&#x5740;&#x5BF9;&#x5E94;&#x9AD8;&#x5E8F;&#x5B57;&#x8282; &#x5C0F;&#x7AEF;&#x5B57;&#x8282;&#x5E8F;&#xFF1A;&#x4F4E;&#x4F4D;&#x5185;&#x5B58;&#x5730;&#x5740;&#x5BF9;&#x5E94;&#x9AD8;&#x5E8F;&#x5B57;&#x8282; chapter4:&#x57FA;&#x672C;tcp&#x5957;&#x63A5;&#x5B57;&#x7F16;&#x7A0B;1. socket&#x51FD;&#x6570;// &#x6267;&#x884C;&#x7F51;&#x7EDC;io&#x524D;&#x7684;&#x7B2C;&#x4E00;&#x6B65;&#xFF1A;socket() #include&lt;sys/socket.h&gt; int socket(int family, int type, int protocol) family type protocol socket&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6210;&#x529F;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;\b&#x5957;&#x63A5;&#x5B57;&#x63CF;&#x8FF0;&#x7B26;(&#x7C7B;&#x4F3C;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;),&#x53EA;&#x8981;&#x6307;&#x5B9A;&#x534F;&#x8BAE;&#x65CF;&#x548C;&#x5957;&#x63A5;&#x5B57;&#x7C7B;&#x578B;&#x3002; &#x5957;&#x63A5;&#x5B57;(socket)&#x548C;&#x5957;&#x63A5;&#x5B57;&#x63CF;&#x8FF0;&#x7B26;(discriptor)&#x662F;&#x4E00;&#x5BF9;&#x591A;&#x7684;&#x5173;&#x7CFB;&#xFF08;&#x4E00;&#x4E2A;socket&#x53EF;&#x4EE5;&#x6709;&#x5BF9;&#x5E94;&#x591A;&#x4E2A;discriptor&#xFF09; 2. connect&#x51FD;&#x6570;&#x5BA2;&#x6237;&#x7AEF;&#x8C03;&#x7528;connect&#x51FD;&#x6570;&#x5EFA;&#x7ACB;tcp&#x8FDE;&#x63A5;&#xFF0C;&#x8C03;&#x7528;connect&#x4E4B;&#x524D;&#x4E0D;&#x5FC5;&#x8C03;&#x7528;bind&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x786E;&#x5B9A;&#x6E90;ip&#x5730;&#x5740;&#x5E76;&#x4E14;&#x9ED8;&#x8BA4;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x7AEF;&#x53E3;&#x4F5C;&#x4E3A;&#x6E90;&#x7AEF;&#x53E3;&#x3002; int connect(int sockfd, const struct sockaddr *servaddr, socklen_t addrlen) connect&#x89E6;&#x53D1;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x7684;&#x8FC7;&#x7A0B;,\b&#x8FD9;&#x65F6;&#x5019;&#x6709;&#x51E0;&#x79CD;&#x7ED3;&#x679C;&#xFF1A; &#x6210;&#x529F; &#x7B2C;&#x4E00;&#x4E2A;SYN&#x5206;&#x8282;&#x6CA1;&#x6709;&#x53D7;&#x5230;ACK&#xFF0C;&#x5219;&#x91CD;&#x8BD5;&#xFF0C;&#x91CD;&#x8BD5;&#x4E5F;&#x5931;&#x8D25;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;ETIMEOUT&#x9519;&#x8BEF; &#x8FD4;&#x56DE;&#x7684;&#x5206;&#x8282;&#x4E0D;&#x662F;ACK&#xFF0C;&#x662F;RST&#x3002;&#x8FD4;&#x56DE;ECONNREFUSED RST&#x51FA;&#x73B0;&#x6709;&#x4E09;&#x4E2A;&#x6761;&#x4EF6;&#xFF1A; &#x76EE;&#x6807;&#x4E3B;&#x673A;&#x6536;&#x5230;SYN&#x5206;&#x8282;,&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x76D1;&#x542C;&#x8FD9;&#x4E2A;&#x7AEF;&#x53E3;&#x7684;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x7A0B; tcp&#x60F3;&#x53D6;&#x6D88;&#x4E00;&#x4E2A;&#x5DF2;&#x6709;&#x7684;&#x8FDE;&#x63A5; tcp&#x6536;&#x5230;&#x7684;&#x5206;&#x8282;&#x4E0D;&#x5C5E;&#x4E8E;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5; ICMP&#x8DEF;&#x7531;&#x4E0D;&#x53EF;&#x8FBE;&#x9519;&#x8BEF;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x91CD;&#x8BD5; 3. bind&#x51FD;&#x6570;int bind(int sockfd, const struct sockaddr *myaddr, socklen_t addrlen) bind&#x51FD;&#x6570;&#x7528;&#x4E8E;&#x7ED9;socket&#x5730;&#x5740;&#x8D4B;&#x4E88;&#x4E00;&#x4E2A;&#x534F;&#x8BAE;&#x5730;&#x5740;(ip+port)&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x901A;&#x5E38;&#x9700;&#x8981;&#x4F7F;&#x7528;bind&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x5219;&#x7531;&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x5C31;&#x597D; bind&#x51FD;&#x6570;&#x5E38;&#x89C1;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x662F;Address aready in use 4. listen&#x51FD;&#x6570;int listen(int sockfd, int backlog) \u001csocket&#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684;&#x5957;&#x63A5;&#x5B57;&#x9ED8;&#x8BA4;&#x662F;&#x4E3B;&#x52A8;&#x5957;&#x63A5;&#x5B57;&#xFF0C;&#x5373;&#x7CFB;&#x7EDF;&#x8BA4;&#x4E3A;&#x5B83;&#x4EE5;&#x540E;&#x662F;&#x8981;&#x53BB;&#x505A;connect&#x53D1;&#x8D77;&#x8FDE;&#x63A5;&#x7684;&#x800C;listen&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x6709;&#x4E8C;&#xFF1A; &#x5C06;&#x4E3B;&#x52A8;&#x8F6C;&#x88AB;&#x52A8;&#xFF0C;&#x544A;&#x8BC9;&#x7CFB;&#x7EDF;&#x201C;&#x6211;&#x4E0D;&#x8BE5;&#x4E3B;&#x52A8;&#xFF0C;&#x6211;&#x8BE5;&#x63A5;&#x53D7;&#x6307;&#x5411;&#x8FD9;&#x4E2A;&#x5957;&#x63A5;&#x5B57;&#x7684;&#x8BF7;&#x6C42;&#x201D; \bbacklog&#x6307;&#x5B9A;&#x4E86;&#x5185;&#x6838;&#x4E3A;&#x8FD9;&#x4E2A;socket&#x6392;&#x961F;&#x7684;&#x6700;&#x5927;&#x8FDE;&#x63A5;&#x4E2A;&#x6570;(&#x6709;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x6A21;&#x7CCA;&#x56E0;&#x5B50;&#xFF0C;backlog&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x548C;&#x6700;&#x5927;&#x8FDE;&#x63A5;&#x6570;&#x6B63;&#x76F8;&#x5173;&#x7684;&#x503C;)&#xFF0C;&#x5185;&#x6838;&#x6709;&#x4E24;&#x4E2A;&#x961F;&#x5217; &#x4E09;&#x6B21;&#x63E1;&#x624B;&#x7684;&#x8FC7;&#x7A0B;&#xFF1A; &#x901A;&#x5E38;RTT&#x5E73;&#x5747;&#x5728;187ms &#x672A;&#x5B8C;&#x6210;&#x961F;&#x5217;&#x6EE1;&#x4E86;&#x5BF9;&#x7EE7;&#x7EED;&#x8FC7;&#x6765;&#x7684;&#x8BF7;&#x6C42;&#x5206;&#x8282;&#x4E22;&#x5F03;&#x4E0D;&#x5904;&#x7406;&#xFF08;&#x56E0;&#x4E3A;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x91CD;&#x4F20;&#xFF09; 5. accept&#x51FD;&#x6570;int accept(int sockfd, struct sockaddr *cliaddr, socklen_t *addrlen) accept&#x51FD;&#x6570;&#x4F1A;&#x4ECE;&#x5B8C;&#x6210;&#x961F;&#x5217;&#x5934;push&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C;&#x7531;&#x5185;&#x6838;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5DF2;&#x8FDE;&#x63A5;&#x5957;&#x63A5;&#x5B57;(connected socket)&#xFF0C;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#x901A;&#x5E38;&#x6301;&#x6709;&#x4E00;&#x4E2A;listening socket&#xFF08;&#x76D1;&#x542C;&#x5957;&#x63A5;&#x5B57;&#xFF09;,n&#x4E2A;connect socket&#xFF08;&#x6BCF;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x4E00;&#x4E2A;&#xFF09; &#x5E76;&#x53D1;&#x670D;&#x52A1;&#x5668;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF1A;&#x57FA;&#x7840;&#xFF1A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x548C;socket&#x63CF;&#x8FF0;&#x7B26;&#x6709;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x88AB;&#x5F15;&#x7528;&#x4E00;&#x6B21;&#x5219;&#x52A0;&#x4E00;&#xFF0C;&#x6CA1;&#x6709;&#x5F15;&#x7528;&#x624D;&#x4F1A;&#x88AB;&#x6E05;&#x7406; chapter5:tcp&#x5BA2;&#x6237;&#xFF0F;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#x793A;&#x4F8B;chapter30:&#x5BA2;&#x6237;&#xFF0F;&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x8303;&#x5F0F; &#x300A;unix&#x7F51;&#x7EDC;&#x7F16;&#x7A0B;&#x5377;&#x4E00;&#x300B;&#x300A;&#x56FE;&#x89E3;tcp/ip&#x300B;","categories":[],"tags":[{"name":"tcp/ip","slug":"tcp-ip","permalink":"http://lqczzz.github.io/tags/tcp-ip/"}]},{"title":"优秀的博文记录","slug":"优秀的博文记录","date":"2018-10-18T07:46:41.000Z","updated":"2018-10-18T07:47:16.000Z","comments":true,"path":"2018/10/18/优秀的博文记录/","link":"","permalink":"http://lqczzz.github.io/2018/10/18/优秀的博文记录/","excerpt":"","text":"golang&#x4F18;&#x5316;&#x4F18;&#x5316;Go&#x7684;&#x6A21;&#x5F0F;","categories":[],"tags":[]},{"title":"从golang的fmt包入门手动内存管理","slug":"golang的fmt包入门手动内存管理","date":"2018-10-17T14:01:43.000Z","updated":"2018-10-17T15:05:48.000Z","comments":true,"path":"2018/10/17/golang的fmt包入门手动内存管理/","link":"","permalink":"http://lqczzz.github.io/2018/10/17/golang的fmt包入门手动内存管理/","excerpt":"","text":"&#x77EB;&#x60C5;&#x7684;&#x8BDD;&#x5728;&#x505A;feed&#x6D41;&#x5F00;&#x53D1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x8D1F;&#x8D23;timeline&#x7684;&#x4E1A;&#x52A1;&#x5F00;&#x53D1;&#xFF0C;&#x521A;&#x5F00;&#x59CB;&#x8BBE;&#x8BA1;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EE5;&#x4E3A;&#x4E5F;&#x5C31;&#x662F;&#x4E2A;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x5F00;&#x53D1;&#xFF0C;&#x80FD;&#x6709;&#x5565;&#x96BE;&#x5EA6;&#x3002;&#x7ED3;&#x679C;&#x5F00;&#x53D1;&#x5B8C;&#x4E86;&#x4E4B;&#x540E;&#xFF0C;&#x88AB;leader&#x75AF;&#x72C2;&#x5410;&#x69FD;&#x3002;&#x4EE3;&#x7801;&#x7EC4;&#x7EC7;&#x4E0D;&#x597D;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x80FD;&#x901A;&#x8FC7;&#x5BF9;&#x4E1A;&#x52A1;&#x7684;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#xFF0C;&#x53BB;&#x91CD;&#x65B0;&#x8BBE;&#x8BA1;&#xFF0C;&#x4F46;&#x662F;&#x8BF4;&#x5230;&#x4E00;&#x4E2A;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x662F;&#x5B8C;&#x5168;&#x6CA1;&#x60F3;&#x5230;&#x7684;&#xFF0C;&#x4EE5;&#x524D;&#x6CA1;&#x6709;&#x63A5;&#x89E6;&#x8FC7;&#x9AD8;&#x5E76;&#x53D1;&#x573A;&#x666F;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x5728;&#x9AD8;&#x5E76;&#x53D1;&#x573A;&#x666F;&#x4E0B;&#xFF0C;&#x4F9D;&#x8D56;&#x8BED;&#x8A00;&#x81EA;&#x8EAB;&#x7684;gc&#x4F1A;&#x5BFC;&#x81F4;&#x5185;&#x5B58;&#x7684;&#x9891;&#x7E41;&#x7533;&#x8BF7;&#x548C;&#x56DE;&#x6536;&#x3002; &#x75DB;&#x5B9A;&#x51E0;&#x5468;&#x4E4B;&#x540E;&#x51B3;&#x5B9A;&#x601D;&#x75DB;&#xFF0C;&#x8981;&#x53C2;&#x8003;&#x5B66;&#x4E60;&#x4F18;&#x79C0;&#x7684;&#x4EE3;&#x7801;&#x4E8E;&#x662F;&#x6211;&#x60F3;&#xFF0C;&#x54EA;&#x91CC;&#x4F1A;&#x6709;&#x4F18;&#x79C0;&#x7684;&#x6D89;&#x53CA;&#x5230;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7684;&#x4EE3;&#x7801;&#x5462;&#xFF01; &#x5B98;&#x65B9;&#x5E93;&#xFF01;&#xFF01; &#x7136;&#x540E;&#x60F3;&#xFF0C;timeline&#x6D89;&#x53CA;&#x7F51;&#x7EDC;io&#xFF0C;io&#x624D;&#x4F1A;&#x6709;&#x5927;&#x91CF;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C;&#x56DE;&#x6536;&#x7684;&#x573A;&#x666F;&#xFF01;&#xFF01; &#x76F4;&#x63A5;&#x770B;net&#x5305;&#xFF1F;&#x592A;&#x5C3C;&#x739B;&#x590D;&#x6742;&#x4E86;ok&#xFF0C;&#x770B;fmt&#x5305; fmt&#x5305;&#x6E90;&#x7801;&#x6458;&#x8981;&#x548C;&#x7B14;&#x8BB0; &#x6765;&#x81EA;fmt/print.go // Fprintf&#x6839;&#x636E;w&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x8C03;&#x7528;w&#x7684;write&#x65B9;&#x6CD5;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x505A;&#x5230;&#x6253;&#x5370;&#x65E5;&#x5FD7;&#x5230;&#x4E0D;&#x540C;&#x5730;&#x65B9; func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error) { p := newPrinter() p.doPrintf(format, a) n, err = w.Write(p.buf) p.free() return } // Printf&#x8C03;&#x7528;&#x4E86;Fprintf&#xFF0C;&#x6253;&#x5370;&#x7684;&#x5730;&#x65B9;&#x662F;os.Stdout func Printf(format string, a ...interface{}) (n int, err error) { return Fprintf(os.Stdout, format, a...) } func Sprintf(format string, a ...interface{}) string { p := newPrinter() p.doPrintf(format, a) s := string(p.buf) p.free() return s } &#x8FD9;&#x91CC;&#x81F3;&#x5C11;&#x6709;&#x4E09;&#x70B9;&#x53EF;&#x4EE5;&#x5B66;: &#x5305;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x6A21;&#x5757;&#x5316;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x4E0D;&#x4E00;&#x5B9A;&#x975E;&#x5F97;&#x5C5E;&#x4E8E;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61; &#x63A5;&#x53E3;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x597D;&#x5904;&#xFF1A;&#x5C01;&#x88C5;&#x53D8;&#x5316; &#x8FD9;&#x91CC;&#xFF0C;&#x53D8;&#x5316;&#x6307;&#x7684;&#x662F;[]byte&#x7684;&#x53BB;&#x5411;&#xFF0C;&#x6BD4;&#x5982;os.Stdout p := newPrinter()&#x8FD9;&#x91CC;&#x91C7;&#x7528;&#x4E86;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x6765;&#x5B9E;&#x73B0;&#x5185;&#x5B58;&#x7684;&#x7BA1;&#x7406; &#x770B;&#x4E0B;&#x53BB;&#xFF1A; // pp is used to store a printer&apos;s state and is reused with sync.Pool to avoid allocations. type pp struct { buf buffer // &#x7701;&#x7565; } var ppFree = sync.Pool{ New: func() interface{} { return new(pp) }, } // newPrinter allocates a new pp struct or grabs a cached one. func newPrinter() *pp { p := ppFree.Get().(*pp) p.panicking = false p.erroring = false p.fmt.init(&amp;p.buf) return p } // free saves used pp structs in ppFree; avoids an allocation per invocation. func (p *pp) free() { p.buf = p.buf[:0] // &#x6E05;&#x7A7A;slice p.arg = nil p.value = reflect.Value{} ppFree.Put(p) // &#x653E;&#x56DE;&#x5BF9;&#x8C61;&#x6C60;&#x91CC; } &#x4E00;&#x4E2A;sync.Pool&#x5BF9;&#x8C61;&#x5C31;&#x662F;&#x4E00;&#x7EC4;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;&#x96C6;&#x5408;&#x3002;Pool&#x662F;&#x534F;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002;Pool&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x90A3;&#x4E9B;&#x88AB;&#x5206;&#x914D;&#x4E86;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x88AB;&#x4F7F;&#x7528;&#xFF0C;&#x800C;&#x672A;&#x6765;&#x53EF;&#x80FD;&#x4F1A;&#x4F7F;&#x7528;&#x7684;&#x503C;&#xFF0C;&#x4EE5;&#x51CF;&#x5C0F;&#x5783;&#x573E;&#x56DE;&#x6536;&#x7684;&#x538B;&#x529B;&#x3002; fmt&#x5305;&#x603B;&#x662F;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;[]byte&#x4E4B;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;golang&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x5B58;&#x653E;&#x7740;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;[]byte&#xFF0C;&#x5C31;&#x53BB;Pool&#x91CC;&#x9762;&#x62FF;&#xFF0C;&#x5982;&#x679C;&#x62FF;&#x4E0D;&#x5230;&#x5C31;&#x5206;&#x914D;&#x4E00;&#x4EFD;&#x3002;&#x8FD9;&#x6BD4;&#x8D77;&#x4E0D;&#x505C;&#x751F;&#x6210;&#x65B0;&#x7684;[]byte&#xFF0C;&#x7528;&#x5B8C;&#x4E86;&#x518D;&#x7B49;&#x5F85;gc&#x56DE;&#x6536;&#x6765;&#x8981;&#x9AD8;&#x6548;&#x5F97;&#x591A; sync.Pool&#x6D4B;&#x8BD5;// &#x4E00;&#x4E2A;[]byte&#x7684;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x4E3A;&#x4E00;&#x4E2A;[]byte var bytePool = sync.Pool{ New: func() interface{} { b := make([]byte, 1024) return &amp;b }, } func main() { a := time.Now().Unix() // &#x4E0D;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x6C60; for i := 0; i &lt; 1000000000; i++ { obj := make([]byte, 1024) _ = obj } b := time.Now().Unix() // &#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x6C60; for i := 0; i &lt; 1000000000; i++ { obj := bytePool.Get().(*[]byte) _ = obj bytePool.Put(obj) } c := time.Now().Unix() fmt.Println(&quot;without pool &quot;, b-a, &quot;s&quot;) fmt.Println(&quot;with pool &quot;, c-b, &quot;s&quot;) } &#x6765;&#x81EA;&#xFF1A;go&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x2013;sync.Pool &#x6D4B;&#x8BD5;&#x6548;&#x679C;&#xFF1A; // &#x6570;&#x636E;&#x91CF;&#x66F4;&#x5927;&#x66F4;&#x660E;&#x663E; without pool 21 s with pool 16 s the end&#x2026;","categories":[],"tags":[{"name":"timeline重构任重道远","slug":"timeline重构任重道远","permalink":"http://lqczzz.github.io/tags/timeline重构任重道远/"}]},{"title":"一次goroutine内存泄漏问题定位","slug":"一次goroutine内存泄漏问题定位","date":"2018-10-16T05:38:08.000Z","updated":"2018-10-21T05:57:30.000Z","comments":true,"path":"2018/10/16/一次goroutine内存泄漏问题定位/","link":"","permalink":"http://lqczzz.github.io/2018/10/16/一次goroutine内存泄漏问题定位/","excerpt":"","text":"&#x5B9A;&#x4F4D;&#x8FC7;&#x7A0B;&#x95EE;&#x9898;&#xFF1A; Dump goroutines: ps aux | grep &apos;content_svr&apos; #43 kill -USR2 43 &#x6BD4;&#x8F83;&#x4E24;&#x5C0F;&#x65F6;&#x95F4;&#x7684;Diff&#xFF1A;&#x4E24;&#x5C0F;&#x65F6;&#x524D;: $ grep &apos;cron/hashtag_suggestion&apos; /proc/43/fd/1 1 $ grep &apos;producer&apos; /proc/43/fd1 53 &#x4E24;&#x5C0F;&#x65F6;&#x540E;: $ grep &apos;cron/hashtag_suggestion&apos; /proc/43/fd/1 41 $ grep &apos;producer&apos; /proc/43/fd1 221 &#x95EE;&#x9898;&#x4EE3;&#x7801;// &#x7B80;&#x5316;&#x4E86;&#x4E1A;&#x52A1;&#x903B;&#x8F91; type Cron struct{ ch1 chan []int ch2 chan []int } func (cron *Cron)start() { timer := time.NewTicker(cron.taskDuration) for { select { case &lt;-timer.C: cron.doCron() } } } func (cron *Cron)doCron() { cron.step1() cron.step2() cron.step3() } func (cron *Cron)step1() { go func(){ cron.ch1 &lt;- []int{100} // &#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5173;&#x95ED;ch1&#xFF0C;&#x5BFC;&#x81F4;&#x4E0B;&#x9762;&#x7684;goroutine&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x5173;&#x95ED; }() } func (cron *Cron)step2() { go func(){ for item := range cron.ch1 { _ = item cron.ch2 &lt;- []int{200} // &#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x5173;&#x95ED;ch2&#xFF0C;&#x5BFC;&#x81F4;&#x4E0B;&#x9762;&#x7684;goroutine&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x5173;&#x95ED; } }() } func (cron *Cron)step3() { go func(){ for item := range cron.ch2 { _ = item } }() } &#x7EA0;&#x6B63;// 1. &#x6BCF;&#x6B21;&#x521B;&#x5EFA;goroutine&#x65F6;&#x5019;&#x521B;&#x5EFA;channel // 2. &#x6BCF;&#x6B21;&#x4F7F;&#x7528;&#x5B8C;channel&#xFF0C;close channel&#xFF0C;&#x9000;&#x51FA;goroutine type Cron struct{ ch1 chan []int ch2 chan []int } const ( concurrency = 100 ) func (cron *Cron)start() { timer := time.NewTicker(cron.taskDuration) for { select { case &lt;-timer.C: cron.doCron() } } } func (cron *Cron)doCron() { cron.ch1 = make(chan []int, concurrency) // fixed cron.ch2 = make(chan []int, concurrency) // fixed cron.step1() cron.step2() cron.step3() } func (cron *Cron)step1() { go func(){ cron.ch1 &lt;- []int{100} close(ch1) // fixed }() } func (cron *Cron)step2() { go func(){ for item := range cron.ch1 { _ = item cron.ch2 &lt;- []int{200} close(ch2) // fixed } }() } func (cron *Cron)step3() { go func(){ for item := range cron.ch2 { _ = item } }() }","categories":[],"tags":[]},{"title":"elasticSearch学习笔记","slug":"elasticSearch学习笔记","date":"2018-10-13T14:29:32.000Z","updated":"2018-10-17T05:17:10.000Z","comments":true,"path":"2018/10/13/elasticSearch学习笔记/","link":"","permalink":"http://lqczzz.github.io/2018/10/13/elasticSearch学习笔记/","excerpt":"","text":"elasticSearch&#x5165;&#x95E8;&#x6700;&#x8FD1;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x9047;&#x5230;&#x4E86;&#x9700;&#x8981;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x5BF9;&#x7528;&#x6237;&#x8F93;&#x5165;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x63A8;&#x8350;&#x548C;&#x8865;&#x5168;&#xFF0C;elasticSearch&#x662F;\b&#x5F00;&#x6E90;&#x7684;&#x641C;&#x7D22;&#x5F15;&#x5F15;&#x64CE;&#xFF0C;&#x5165;&#x95E8;&#x4F7F;&#x7528;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#x3002; &#x600E;&#x4E48;&#x5165;&#x95E8;&#xFF1A; &#x7C7B;&#x6BD4;&#x5165;&#x95E8;&#xFF1A;&#x7C7B;&#x6BD4;&#x4E00;&#x4E2A;&#x719F;&#x6089;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#xFF0C;&#x77E5;&#x8BC6;&#x8FC1;&#x79FB;\b&#x4F1A;&#x66F4;&#x5BB9;&#x6613; &#x7B80;&#x5355;&#x7684;&#x4E8B;&#x4F8B;&#x5165;&#x95E8;&#xFF1A;&#x52A8;&#x624B;&#x8FDB;&#x884C;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x4E2A;demo&#x611F;&#x53D7;&#x4E00;&#x4E0B;&#x6D41;&#x7A0B; &#x5165;&#x95E8;1.&#x5B89;&#x88C5;es&#x524D;&#x7F6E;&#x6761;&#x4EF6;&#xFF1A;mac&#x73AF;&#x5883;(&#x5176;&#x4ED6;&#x73AF;&#x5883;&#x81EA;&#x884C;google)&#xFF0C;brew&#x5DE5;&#x5177;&#x5B89;&#x88C5;&#x597D;&#x4E86;&#xFF0C;java&#x73AF;&#x5883;&#x5B89;&#x88C5;&#x597D;&#x4E86; &#x6B65;&#x9AA4;&#xFF1A; &#x5B89;&#x88C5;es&#xFF1A; brew install elasticsearch es&#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x88AB;&#x5B89;&#x88C5; &#x5B89;&#x88C5;kibana&#xFF1A; brew install kibana kibana&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x56FE;&#x5F62;&#x5316;&#x7684;es&#x5BA2;&#x6237;&#x7AEF; &#x542F;&#x52A8;es&#xFF1A;brew services start elasticsearch &#x542F;&#x52A8;kibana&#xFF1A;brew services start kibana &#x5B89;&#x88C5;es&#x6210;&#x529F;&#x4E4B;&#x540E;&#x8BBF;&#x95EE;http://localhost:9200/&#x53EF;&#x4EE5;&#x83B7;&#x5F97;es&#x7684;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#x5B89;&#x88C5;kibana&#x6210;&#x529F;&#x4E4B;&#x540E;&#x8BBF;&#x95EE;http://localhost:5601/app/kibana#/dev_tools/console?_g=()&#x53EF;&#x4EE5;&#x5BF9;es&#x8FDB;&#x884C;&#x64CD;&#x4F5C; 2.&#x81EA;&#x52A8;&#x8865;&#x5168;// hashtag { id, name, score, // weight } mappings &amp; analysizerPUT feed_id { &quot;mappings&quot;: { &quot;hashtag&quot;: { &quot;properties&quot;: { &quot;name&quot;: { &quot;type&quot;: &quot;completion&quot; } } } } } &#x6DFB;&#x52A0;&#x6570;&#x636E;POST feed_id/hashtag { &quot;name&quot;: { &quot;input&quot;: [&quot;hashtag name&quot;], &quot;weight&quot;: 2 } } POST feed_id/hashtag/3 { &quot;name&quot;: { &quot;input&quot;: [&quot;hashtag name2&quot;], &quot;weight&quot;: 3 } } POST feed_id/hashtag/4 { &quot;name&quot;: { &quot;input&quot;: [&quot;ashtag name2&quot;], &quot;weight&quot;: 4 } } POST feed_id/hashtag/5 { &quot;name&quot;: { &quot;input&quot;: [&quot;shtag name2&quot;], &quot;weight&quot;: 5 } } POST feed_id/hashtag/6 { &quot;name&quot;: { &quot;input&quot;: [&quot;htag name2&quot;], &quot;weight&quot;: 6 } } POST feed_id/hashtag/7 { &quot;name&quot;: { &quot;input&quot;: [&quot;&#x7231;&#x6211;&#x4E2D;&#x534E;&quot;], &quot;weight&quot;: 6 } } POST feed_id/hashtag/8 { &quot;name&quot;: { &quot;input&quot;: [&quot;&#x7231;&#x4F60;&#x4E2D;&#x534E;&quot;], &quot;weight&quot;: 6 } } POST feed_id/hashtag/9 { &quot;name&quot;: { &quot;input&quot;: [&quot;&#x7231;&#x4F60;&quot;], &quot;weight&quot;: 6 } } &#x67E5;&#x8BE2;&#x6570;&#x636E;POST feed_id/_search?pretty { &quot;suggest&quot;: { &quot;hashtag-suggest&quot;: { &quot;prefix&quot;: &quot;h&quot;, &quot;completion&quot;: { &quot;field&quot;: &quot;name&quot; } } } } &#x57FA;&#x672C;&#x6982;&#x5FF5;&#x6458;&#x6284;&#x81EA;elasticsearch-definitive-guide-cn &#x53C2;&#x8003;&#xFF1A;","categories":[],"tags":[]},{"title":"golang并发学习笔记","slug":"golang并发","date":"2018-10-12T22:28:05.000Z","updated":"2018-10-14T16:03:46.000Z","comments":true,"path":"2018/10/13/golang并发/","link":"","permalink":"http://lqczzz.github.io/2018/10/13/golang并发/","excerpt":"","text":"golang&#x7684;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x53EB;&#x505A;CSP&#xFF08;communicating sequential process&#xFF09;&#xFF0C;&#x79F0;&#x4E3A;&#x901A;&#x4FE1;&#x987A;&#x5E8F;&#x8FDB;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x6A21;&#x578B;&#x7531;&#x72EC;&#x7ACB;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x7684;&#x5B9E;&#x4F53;&#x7EC4;&#x6210;&#xFF08;go&#x5757;&#xFF09;&#xFF0C;&#x6A21;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x901A;&#x8FC7;channel&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x56E0;&#x6B64;&#xFF0C;golang&#x7684;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x54F2;&#x5B66;&#x662F;&#xFF1A;&#x4E07;&#x7269;&#x7686;&#x901A;&#x4FE1;&#xFF01;&#xFF01;golang&#x7684;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4E3B;&#x8981;&#x662F;&#xFF1A; channel go&#x5757; channel channel&#x53EF;&#x4EE5;&#x5355;&#x72EC;&#x521B;&#x5EFA;&#xFF0C;&#x5728;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x4F20;&#x9012; channel&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x961F;&#x5217;&#xFF0C;&#x4EFB;&#x4F55;&#x6301;&#x6709;channel&#x5F15;&#x7528;&#x7684;&#x4EFB;&#x52A1;(go&#x5757;)&#x90FD;&#x53EF;&#x4EE5;&#x8BFB;&#x5199;channel channel&#x9ED8;&#x8BA4;&#x662F;&#x65E0;&#x7F13;&#x51B2;&#x533A;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;channel&#x672C;&#x8EAB;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x4E00;&#x7AEF;&#x5199;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x5FC5;&#x7136;&#x4F1A;&#x963B;&#x585E;&#x76F4;&#x5230;channel&#x7684;&#x6570;&#x636E;&#x88AB;&#x522B;&#x7684;&#x5730;&#x65B9;&#x8BFB;&#x53D6; channel&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#xFF0C;&#x5411;&#x5173;&#x95ED;&#x7684;channel&#x8BFB;&#x6570;&#x636E;&#x4F1A;&#x8BFB;&#x5230;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x5411;&#x5173;&#x95ED;&#x7684;channel&#x5199;&#x6570;&#x636E;&#x4F1A;&#x5BFC;&#x81F4;panic&#xFF01;&#xFF01; func main() { ch := make(chan int) go func() { ch &lt;- 20 close(ch) ch &lt;- 30 //panic: send on closed channel }() println(&lt;-ch) // 20 println(&lt;-ch) // 0(&#x9ED8;&#x8BA4;&#x503C;) } &#x6709;&#x7F13;&#x51B2;&#x533A;&#x7684;channel&#xFF0C;&#x6839;&#x636E;&#x7F13;&#x51B2;&#x533A;&#x5DF2;&#x6EE1;&#x65F6;&#x5019;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x53EF;&#x4EE5;&#x5206;&#x4E3A; &#x963B;&#x585E;&#x578B;&#xFF1A;&#x5199;&#x5165;&#x963B;&#x585E; &#x5F03;&#x7528;&#x65B0;&#x503C;&#xFF1A;&#x65B0;&#x503C;&#x5199;&#x5165;&#x88AB;&#x629B;&#x5F03; &#x79FB;&#x9664;&#x65E7;&#x503C;&#xFF1A;&#x592A;&#x65E7;&#x7684;&#x6570;&#x636E;&#x88AB;channel&#x629B;&#x5F03; channel&#x548C;\b&#x961F;&#x5217;&#x5F88;&#x50CF; &#x5728; golang&#x91CC;&#xFF0C;channel&#x53EF;&#x4EE5;&#x7528; for i := range channelName {}\b&#x5FAA;&#x73AF;&#x83B7;&#x53D6;channel&#x4FE1;&#x606F; goroutine&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x7684;&#x7F3A;&#x70B9;java&#x548C;c++&#x7684;&#x5E76;&#x53D1;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x5B83;&#x7684;&#x597D;&#x5904;&#x662F;&#x76F4;&#x63A5;&#x5BF9;&#x786C;&#x4EF6;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x8BED;&#x8A00;&#xFF0C;&#x5305;&#x62EC;python&#xFF0C;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x90FD;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#xFF0C;&#x4F46;&#x662F;&#x574F;&#x5904;&#x662F;&#x4F7F;&#x7528;&#x590D;&#x6742;&#x3002; &#x4F46;&#x662F;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x6709;&#x4E09;&#x4E2A;&#x5371;&#x5BB3; &#x7ADE;&#x6001;&#x6761;&#x4EF6; &#x6B7B;&#x9501; &#x5185;&#x5B58;&#x53EF;&#x89C1;&#x6027;&#x95EE;&#x9898;&#x5F15;&#x7528;&#x81EA;&#x300A;&#x4E03;&#x5468;&#x4E03;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x6A21;&#x578B;&#x300B; public class Test { static boolean ready = false; // &#x7ADE;&#x6001;&#x6761;&#x4EF6;&#x4E00;&#xFF1A;&#x5171;&#x4EAB;&#x53D8;&#x91CF; static int data = 0 static Thread t1 = new Thread() { public void run() { data = 10; // &#x7ADE;&#x6001;&#x6761;&#x4EF6;&#x4E8C;&#xFF1A;&#x4F1A;&#x6709;&#x5E76;&#x884C;&#x5B9E;&#x4F53;(&#x7EBF;&#x7A0B;)&#x4FEE;&#x6539;&#x53D8;&#x91CF; ready = true; } }; static Thread t2 = new Thread() { public void run() { if (ready) { // &#x7ADE;&#x6001;&#x6761;&#x4EF6;&#x4E09;&#xFF1A;&#x4E00;&#x4E2A;&#x672A;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#x53EF;&#x80FD;&#x4F1A;&#x4ECB;&#x5165; System.out.Println(&quot;data is :&quot; + data) } else { System.out.Println(&quot;no data&quot;) } } }; public static void main(String[] args) throw InterruptedException{ t1.start(); t2.start(); t1.join(); t2.join(); } } &#x5C3D;&#x7BA1;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x95EE;&#x9898;&#x5F88;&#x591A;&#xFF0C;&#x4F46;&#x662F;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x662F;&#x5176;&#x4ED6;&#x6A21;&#x578B;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x6BD4;&#x5982;nodejs&#x7684;\b&#x5F02;&#x6B65;io&#x6A21;&#x578B;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x7EBF;&#x7A0B;&#x6C60;&#x6280;&#x672F;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;java&#x7684;nio&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x7EBF;&#x7A0B;&#x6C60;&#x3002; &#x7EBF;&#x7A0B;&#x6C60;&#x662F;&#x591A;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x7684;&#x6539;&#x826F;&#xFF0C;&#x7EBF;&#x7A0B;&#x7684;&#x542F;&#x52A8;&#x548C;&#x8FD0;&#x884C;&#x90FD;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x76F4;&#x63A5;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#xFF0C;&#x624D;&#x6709;&#x4E86;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x65B9;&#x4FBF;&#x4E86;&#x7EBF;&#x7A0B;&#x7684;&#x590D;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x6D89;&#x53CA;&#x7EBF;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x90A3;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x8D44;&#x6E90;&#x6C38;&#x8FDC;&#x90FD;&#x88AB;&#x5360;&#x7528;&#x8005;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#x5C31;&#x663E;&#x5F97;&#x9E21;&#x808B;&#x4E86;&#x3002;nodejs&#x7684;&#x51B3;&#x7EDD;&#x65B9;&#x6CD5;&#x662F;&#x9650;&#x5236;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x4EE3;&#x7801;&#x98CE;&#x683C;&#xFF0C;&#x4F7F;&#x4E4B;&#x53D8;&#x6210;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7684;&#x5F62;&#x5F0F;&#x3002; goroutine&#x8C03;&#x5EA6;&#x673A;&#x5236;&#x548C;&#x72B6;&#x6001;&#x673A;&#x6240;&#x8C13;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x662F;&#x6307;node.js&#x4F1A;&#x628A;&#x6240;&#x6709;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x4F7F;&#x7528;&#x4E8B;&#x4EF6;&#x673A;&#x5236;&#x89E3;&#x51B3;&#xFF0C;&#x6709;&#x4E2A;&#x7EBF;&#x7A0B;&#x5728;&#x4E0D;&#x65AD;&#x5730;&#x5FAA;&#x73AF;&#x68C0;&#x6D4B;&#x4E8B;&#x4EF6;&#x961F;&#x5217;&#x3002; node.js&#x4E2D;&#x6240;&#x6709;&#x7684;&#x903B;&#x8F91;&#x90FD;&#x662F;&#x4E8B;&#x4EF6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x6240;&#x4EE5;node.js&#x59CB;&#x7EC8;&#x5728;&#x4E8B;&#x4EF6;&#x5FAA;&#x73AF;&#x4E2D;&#xFF0C;&#x7A0B;&#x5E8F;&#x5165;&#x53E3;&#x5C31;&#x662F;&#x4E8B;&#x4EF6;&#x5FAA;&#x73AF;&#x7B2C;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x3002;&#x4E8B;&#x4EF6;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x51FA;I/O&#x8BF7;&#x6C42;&#x6216;&#x76F4;&#x63A5;&#x53D1;&#x5C04;&#xFF08; emit&#xFF09;&#x4E8B;&#x4EF6;&#xFF0C;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x540E;&#x8FD4;&#x56DE;&#x4E8B;&#x4EF6;&#x5FAA;&#x73AF;&#x3002;&#x4E8B;&#x4EF6;&#x5FAA;&#x73AF;&#x4F1A;&#x68C0;&#x67E5;&#x4E8B;&#x4EF6;&#x961F;&#x5217;&#x4E2D;&#x6709;&#x6CA1;&#x6709;&#x672A;&#x5904;&#x7406;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x76F4;&#x5230;&#x7A0B;&#x5E8F;&#x7ED3;&#x675F;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;node.js &#x662F;&#x5355;&#x7EBF;&#x7A0B;&#xFF0C;&#x5F02;&#x6B65;&#x975E;&#x963B;&#x585E; node&#x7684;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6709;&#x51E0;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; CPU&#x5BC6;&#x96C6;&#x578B;&#x4EFB;&#x52A1;&#x5B58;&#x5728;&#x77ED;&#x677F; &#x65E0;&#x6CD5;&#x5229;&#x7528;CPU&#x7684;&#x591A;&#x6838; &#x4EE3;&#x7801;&#x53D8;&#x5F97;&#x96BE;&#x4EE5;&#x9605;&#x8BFB; &#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4FDD;&#x5B58;&#x6570;&#x636E;&#x9700;&#x8981;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x5168;&#x5C40;&#x53D8;&#x91CF; golang&#x672C;&#x8D28;&#x4E0A;&#x4E5F;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5BF9;&#x6211;&#x4EEC;&#x662F;&#x900F;&#x660E;&#x7684;&#xFF0C;&#x4E3B;&#x8981;&#x89E3;&#x51B3;&#x4E86;&#x7B2C;&#x4E09;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x539F;&#x7406;&#x662F;&#x628A;&#x6BCF;&#x4E2A;go&#x5757;(go func(){}())&#x5F53;&#x5C42;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x673A;&#xFF0C;&#x5F53;go&#x5757;&#x4ECE;channel&#x91CC;&#x8BFB;&#x5199;&#xFF0C;&#x9047;&#x5230;&#x963B;&#x585E;&#x7684;&#x65F6;&#x5019;&#xFF0C;go&#x5757;&#x8FDB;&#x5165;&#x6682;&#x505C;&#x72B6;&#x6001;&#xFF0C;&#x8BA9;&#x51FA;&#x7EBF;&#x7A0B;&#x63A7;&#x5236;&#x6743;&#xFF0C;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x72B6;&#x6001;&#x626D;&#x8F6C;&#xFF0C;go&#x5757;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;(&#x53EF;&#x80FD;&#x4E0D;&#x5728;&#x539F;&#x6765;&#x7684;&#x7EBF;&#x7A0B;&#x4E0A;&#x4E86;) goroutine&#x548C;&#x7EBF;&#x7A0B; &#x6BCF;&#x4E2A;os&#x7EBF;&#x7A0B;&#x6709;&#x4E00;&#x4E2A;&#x56FA;&#x5B9A;&#x5927;&#x5C0F;&#x7684;&#x6808;&#x5185;&#x5B58;&#xFF08;&#x901A;&#x5E38;2MB&#xFF09; goroutine&#x7684;&#x6808;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;&#x4E0D;&#x56FA;&#x5B9A;&#xFF0C;&#x5F00;&#x59CB;&#x901A;&#x5E38;&#x662F;2KB&#xFF0C;&#x6309;&#x9700;&#x6269;&#x5C55;&#xFF0C;&#x6700;&#x5927;&#x53EF;&#x8FBE;1GB go&#x8FD0;&#x884C;&#x65F6;&#x5019;&#x6709;&#x81EA;&#x5DF1;&#x7684;goroutine&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#xFF0C;&#x79F0;&#x4E3A;m&#xFF1A;n&#x8C03;&#x5EA6;&#xFF0C;m&#x4E2A;goroutine&#x8FD0;&#x884C;&#x5728;n&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0A; &#x540C;&#x662F;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#xFF0C;&#x4E3A;&#x4F55;go&#x7684;&#x8C03;&#x5EA6;&#x7B97;&#x6CD5;&#x5982;&#x6B64;&#x4F18;&#x79C0;&#xFF1F; &#x5176;&#x5B9E;&#x4E0D;&#x7136;&#xFF0C;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#x5668;&#x5BF9;&#x6BD4;&#xFF0C;&#x4E3B;&#x8981;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#xFF1A; os&#x5185;&#x6838;&#x8C03;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#x5207;&#x6362;&#x5F00;&#x9500;&#x5927;&#xFF0C;go&#x8C03;&#x5EA6;&#x5668;&#x53EA;&#x9700;&#x8981;&#x8C03;&#x5EA6;&#x4E00;&#x4E2A;go&#x7A0B;&#x5E8F;&#x81EA;&#x5DF1;&#x7684;goroutine&#xFF0C;&#x66F4;&#x5BB9;&#x6613;hold&#x4F4F; os&#x8C03;&#x5EA6;&#x662F;&#x786C;&#x4EF6;&#x65F6;&#x949F;&#x4E2D;&#x65AD;&#x89E6;&#x53D1;&#x7684;&#xFF0C;goroutine&#x8C03;&#x5EA6;&#x7684;&#x89E6;&#x53D1;&#x662F;channel&#x8BFB;&#x5199;&#x963B;&#x585E;&#x6216;&#x8005;time.Sleep()&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x9700;&#x8981;&#x5207;&#x6362;&#x5230;&#x5185;&#x6838;&#x6001;&#x3002; goroutine&#x6CA1;&#x6709;&#x6807;&#x8BC6;&#xFF0C;&#x7EBF;&#x7A0B;&#x662F;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x6807;&#x8BC6;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x5B9E;&#x73B0;\b&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5C40;&#x90E8;&#x53D8;&#x91CF;(map[thread_symbol]object),&#x5728;web&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x7EBF;&#x7A0B;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x901A;&#x5E38;&#x4F1A;&#x88AB;&#x7528;&#x6765;&#x5B58;&#x50A8;http&#x8BF7;&#x6C42;&#x4FE1;&#x606F;&#x3002;&#x5728;goroutine&#x4E0A;&#x6CA1;&#x6709;&#x8FD9;&#x79CD;&#x673A;&#x5236;&#xFF0C;&#x9F13;&#x52B1;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x7F16;&#x7A0B;&#x98CE;&#x683C;&#x3002;&#x2014;&#x2014;&#x300A;go&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x8BED;&#x8A00;&#x300B;","categories":[],"tags":[{"name":"golang","slug":"golang","permalink":"http://lqczzz.github.io/tags/golang/"},{"name":"并发","slug":"并发","permalink":"http://lqczzz.github.io/tags/并发/"}]}]}